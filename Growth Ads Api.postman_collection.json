{
	"info": {
		"_postman_id": "11f2dc83-0069-4a40-9c9a-2b8f351a9a0b",
		"name": "Growth Ads Api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9534663"
	},
	"item": [
		{
			"name": "Georeferencing service",
			"item": [
				{
					"name": "Cobertura-col-Estrella",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const countryResponse = pm.collectionVariables.get(\"country\");",
									"const cityResponse = pm.collectionVariables.get(\"city\");",
									"const typeResponse = pm.collectionVariables.get(\"type\");",
									"const idResponse = pm.collectionVariables.get(\"id\");",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test(\"Verify status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(`Verify response 200`, function () {",
									"    pm.expect(response.data.type).to.be.eql(typeResponse);",
									"    pm.expect(response.data.id).to.be.eql(idResponse.toString());",
									"        pm.expect(response.data.attributes.city_id).to.be.eql(cityResponse.toString());",
									"        pm.expect(response.data.attributes.country_id).to.be.eql(countryResponse.toString());",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"squad\", 109);",
									"pm.collectionVariables.set(\"city\", 8);",
									"pm.collectionVariables.set(\"country\", 1);",
									"pm.collectionVariables.set(\"type\", \"georeferencing\");",
									"pm.collectionVariables.set(\"id\", 1);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://squad-{{squad}}.supermercap.com/api/3.1/georeferencing?latitude=6.162577930000000&longitude=-75.635675660000000",
							"protocol": "https",
							"host": [
								"squad-{{squad}}",
								"supermercap",
								"com"
							],
							"path": [
								"api",
								"3.1",
								"georeferencing"
							],
							"query": [
								{
									"key": "latitude",
									"value": "6.162577930000000"
								},
								{
									"key": "longitude",
									"value": "-75.635675660000000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Cobertura-col-Med",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"city\", 2);",
									"pm.collectionVariables.set(\"country\", 1);",
									"pm.collectionVariables.set(\"type\", \"georeferencing\");",
									"pm.collectionVariables.set(\"id\", 1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const countryResponse = pm.collectionVariables.get(\"country\");",
									"const cityResponse = pm.collectionVariables.get(\"city\");",
									"const typeResponse = pm.collectionVariables.get(\"type\");",
									"const idResponse = pm.collectionVariables.get(\"id\");",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test(\"Verify status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(`Verify response 200`, function () {",
									"    pm.expect(response.data.type).to.be.eql(typeResponse);",
									"    pm.expect(response.data.id).to.be.eql(idResponse.toString());",
									"        pm.expect(response.data.attributes.city_id).to.be.eql(cityResponse.toString());",
									"        pm.expect(response.data.attributes.country_id).to.be.eql(countryResponse.toString());",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://squad-{{squad}}.supermercap.com/api/3.1/georeferencing?latitude=6.2450625&longitude=-75.5714888",
							"protocol": "https",
							"host": [
								"squad-{{squad}}",
								"supermercap",
								"com"
							],
							"path": [
								"api",
								"3.1",
								"georeferencing"
							],
							"query": [
								{
									"key": "latitude",
									"value": "6.2450625"
								},
								{
									"key": "longitude",
									"value": "-75.5714888"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Cobertura-col-Bog",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"city\", 1);",
									"pm.collectionVariables.set(\"country\", 1);",
									"pm.collectionVariables.set(\"type\", \"georeferencing\");",
									"pm.collectionVariables.set(\"id\", 1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const countryResponse = pm.collectionVariables.get(\"country\");",
									"const cityResponse = pm.collectionVariables.get(\"city\");",
									"const typeResponse = pm.collectionVariables.get(\"type\");",
									"const idResponse = pm.collectionVariables.get(\"id\");",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test(\"Verify status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(`Verify response 200`, function () {",
									"    pm.expect(response.data.type).to.be.eql(typeResponse);",
									"    pm.expect(response.data.id).to.be.eql(idResponse.toString());",
									"        pm.expect(response.data.attributes.city_id).to.be.eql(cityResponse.toString());",
									"        pm.expect(response.data.attributes.country_id).to.be.eql(countryResponse.toString());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{squad-106}}api/3.1/georeferencing?latitude=4.6890785&longitude=-74.0648104",
							"host": [
								"{{squad-106}}api"
							],
							"path": [
								"3.1",
								"georeferencing"
							],
							"query": [
								{
									"key": "latitude",
									"value": "4.6890785"
								},
								{
									"key": "longitude",
									"value": "-74.0648104"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sin-Cobertura-Velez,Santander",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"status\", 280);",
									"pm.collectionVariables.set(\"title\", \"Error\");",
									"pm.collectionVariables.set(\"detail\", \"No se encontraron resultados para esta ubicación\");",
									"pm.collectionVariables.set(\"id\", \"ID_GEOREFERENCING_NOT_FOUND\");",
									"pm.collectionVariables.set(\"code\", \"CODE_GEOREFERENCING_INVALID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const statusResponse = pm.collectionVariables.get(\"status\");",
									"const titleResponse = pm.collectionVariables.get(\"title\");",
									"const detailResponse = pm.collectionVariables.get(\"detail\");",
									"const idResponse = pm.collectionVariables.get(\"id\");",
									"const codeResponse = pm.collectionVariables.get(\"code\");",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test(`Verify response 280`, function () {",
									"    pm.expect(response.errors[0].status).to.be.eql(statusResponse.toString());",
									"    pm.expect(response.errors[0].title).to.be.eql(titleResponse.toString());",
									"    pm.expect(response.errors[0].detail).to.be.eql(detailResponse.toString());",
									"    pm.expect(response.errors[0].id).to.be.eql(idResponse.toString());",
									"    pm.expect(response.errors[0].code).to.be.eql(codeResponse.toString());",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{squad-106}}api/3.1/georeferencing?latitude=6.0091606&longitude=-73.6762419",
							"host": [
								"{{squad-106}}api"
							],
							"path": [
								"3.1",
								"georeferencing"
							],
							"query": [
								{
									"key": "latitude",
									"value": "6.0091606"
								},
								{
									"key": "longitude",
									"value": "-73.6762419"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sin-Cobertura-Cucuta",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"status\", 280);",
									"pm.collectionVariables.set(\"title\", \"Error\");",
									"pm.collectionVariables.set(\"detail\", \"No se encontraron resultados para esta ubicación\");",
									"pm.collectionVariables.set(\"id\", \"ID_GEOREFERENCING_NOT_FOUND\");",
									"pm.collectionVariables.set(\"code\", \"CODE_GEOREFERENCING_INVALID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const statusResponse = pm.collectionVariables.get(\"status\");",
									"const titleResponse = pm.collectionVariables.get(\"title\");",
									"const detailResponse = pm.collectionVariables.get(\"detail\");",
									"const idResponse = pm.collectionVariables.get(\"id\");",
									"const codeResponse = pm.collectionVariables.get(\"code\");",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test(`Verify response 280`, function () {",
									"    pm.expect(response.errors[0].status).to.be.eql(statusResponse.toString());",
									"    pm.expect(response.errors[0].title).to.be.eql(titleResponse.toString());",
									"    pm.expect(response.errors[0].detail).to.be.eql(detailResponse.toString());",
									"    pm.expect(response.errors[0].id).to.be.eql(idResponse.toString());",
									"    pm.expect(response.errors[0].code).to.be.eql(codeResponse.toString());",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{squad-106}}api/3.1/georeferencing?latitude=7.9088436&longitude=-72.53944",
							"host": [
								"{{squad-106}}api"
							],
							"path": [
								"3.1",
								"georeferencing"
							],
							"query": [
								{
									"key": "latitude",
									"value": "7.9088436"
								},
								{
									"key": "longitude",
									"value": "-72.53944"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Cobertura-col-Chia",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"city\", 12);",
									"pm.collectionVariables.set(\"country\", 1);",
									"pm.collectionVariables.set(\"type\", \"georeferencing\");",
									"pm.collectionVariables.set(\"id\", 1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const countryResponse = pm.collectionVariables.get(\"country\");",
									"const cityResponse = pm.collectionVariables.get(\"city\");",
									"const typeResponse = pm.collectionVariables.get(\"type\");",
									"const idResponse = pm.collectionVariables.get(\"id\");",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test(\"Verify status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(`Verify response 200`, function () {",
									"    pm.expect(response.data.type).to.be.eql(typeResponse);",
									"    pm.expect(response.data.id).to.be.eql(idResponse.toString());",
									"        pm.expect(response.data.attributes.city_id).to.be.eql(cityResponse.toString());",
									"        pm.expect(response.data.attributes.country_id).to.be.eql(countryResponse.toString());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{squad-106}}api/3.1/georeferencing?latitude=4.8650062&longitude=-74.0517134",
							"host": [
								"{{squad-106}}api"
							],
							"path": [
								"3.1",
								"georeferencing"
							],
							"query": [
								{
									"key": "latitude",
									"value": "4.8650062"
								},
								{
									"key": "longitude",
									"value": "-74.0517134"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Cobertura-col-Madrid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"city\", 15);",
									"pm.collectionVariables.set(\"country\", 1);",
									"pm.collectionVariables.set(\"type\", \"georeferencing\");",
									"pm.collectionVariables.set(\"id\", 1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const countryResponse = pm.collectionVariables.get(\"country\");",
									"const cityResponse = pm.collectionVariables.get(\"city\");",
									"const typeResponse = pm.collectionVariables.get(\"type\");",
									"const idResponse = pm.collectionVariables.get(\"id\");",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test(\"Verify status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(`Verify response 200`, function () {",
									"    pm.expect(response.data.type).to.be.eql(typeResponse);",
									"    pm.expect(response.data.id).to.be.eql(idResponse.toString());",
									"        pm.expect(response.data.attributes.city_id).to.be.eql(cityResponse.toString());",
									"        pm.expect(response.data.attributes.country_id).to.be.eql(countryResponse.toString());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{squad-106}}api/3.1/georeferencing?latitude=4.734298980291502&longitude=-74.2603262197085",
							"host": [
								"{{squad-106}}api"
							],
							"path": [
								"3.1",
								"georeferencing"
							],
							"query": [
								{
									"key": "latitude",
									"value": "4.734298980291502"
								},
								{
									"key": "longitude",
									"value": "-74.2603262197085"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Cobertura-col-Cali",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"city\", 24);",
									"pm.collectionVariables.set(\"country\", 1);",
									"pm.collectionVariables.set(\"type\", \"georeferencing\");",
									"pm.collectionVariables.set(\"id\", 1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const countryResponse = pm.collectionVariables.get(\"country\");",
									"const cityResponse = pm.collectionVariables.get(\"city\");",
									"const typeResponse = pm.collectionVariables.get(\"type\");",
									"const idResponse = pm.collectionVariables.get(\"id\");",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test(\"Verify status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(`Verify response 200`, function () {",
									"    pm.expect(response.data.type).to.be.eql(typeResponse);",
									"    pm.expect(response.data.id).to.be.eql(idResponse.toString());",
									"        pm.expect(response.data.attributes.city_id).to.be.eql(cityResponse.toString());",
									"        pm.expect(response.data.attributes.country_id).to.be.eql(countryResponse.toString());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{squad-106}}api/3.1/georeferencing?latitude=3.407078919708498&longitude=-76.52862788029151",
							"host": [
								"{{squad-106}}api"
							],
							"path": [
								"3.1",
								"georeferencing"
							],
							"query": [
								{
									"key": "latitude",
									"value": "3.407078919708498"
								},
								{
									"key": "longitude",
									"value": "-76.52862788029151"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Cobertura-Ciudad-de-MX",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"city\", 17);",
									"pm.collectionVariables.set(\"country\", 2);",
									"pm.collectionVariables.set(\"type\", \"georeferencing\");",
									"pm.collectionVariables.set(\"id\", 1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const countryResponse = pm.collectionVariables.get(\"country\");",
									"const cityResponse = pm.collectionVariables.get(\"city\");",
									"const typeResponse = pm.collectionVariables.get(\"type\");",
									"const idResponse = pm.collectionVariables.get(\"id\");",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test(\"Verify status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(`Verify response 200`, function () {",
									"    pm.expect(response.data.type).to.be.eql(typeResponse);",
									"    pm.expect(response.data.id).to.be.eql(idResponse.toString());",
									"        pm.expect(response.data.attributes.city_id).to.be.eql(cityResponse.toString());",
									"        pm.expect(response.data.attributes.country_id).to.be.eql(countryResponse.toString());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{squad-106}}api/3.1/georeferencing?latitude=19.3931131&longitude=-99.1486901",
							"host": [
								"{{squad-106}}api"
							],
							"path": [
								"3.1",
								"georeferencing"
							],
							"query": [
								{
									"key": "latitude",
									"value": "19.3931131"
								},
								{
									"key": "longitude",
									"value": "-99.1486901"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Cobertura-Estado-de-MX",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"city\", 32);",
									"pm.collectionVariables.set(\"country\", 2);",
									"pm.collectionVariables.set(\"type\", \"georeferencing\");",
									"pm.collectionVariables.set(\"id\", 1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const countryResponse = pm.collectionVariables.get(\"country\");",
									"const cityResponse = pm.collectionVariables.get(\"city\");",
									"const typeResponse = pm.collectionVariables.get(\"type\");",
									"const idResponse = pm.collectionVariables.get(\"id\");",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test(\"Verify status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(`Verify response 200`, function () {",
									"    pm.expect(response.data.type).to.be.eql(typeResponse);",
									"    pm.expect(response.data.id).to.be.eql(idResponse.toString());",
									"        pm.expect(response.data.attributes.city_id).to.be.eql(cityResponse.toString());",
									"        pm.expect(response.data.attributes.country_id).to.be.eql(countryResponse.toString());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{squad-106}}api/3.1/georeferencing?latitude=19.571404&longitude=-99.246417",
							"host": [
								"{{squad-106}}api"
							],
							"path": [
								"3.1",
								"georeferencing"
							],
							"query": [
								{
									"key": "latitude",
									"value": "19.571404"
								},
								{
									"key": "longitude",
									"value": "-99.246417"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sin-Cobertura-Monterrey",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"status\", 280);",
									"pm.collectionVariables.set(\"title\", \"Error\");",
									"pm.collectionVariables.set(\"detail\", \"No se encontraron resultados para esta ubicación\");",
									"pm.collectionVariables.set(\"id\", \"ID_GEOREFERENCING_NOT_FOUND\");",
									"pm.collectionVariables.set(\"code\", \"CODE_GEOREFERENCING_INVALID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const statusResponse = pm.collectionVariables.get(\"status\");",
									"const titleResponse = pm.collectionVariables.get(\"title\");",
									"const detailResponse = pm.collectionVariables.get(\"detail\");",
									"const idResponse = pm.collectionVariables.get(\"id\");",
									"const codeResponse = pm.collectionVariables.get(\"code\");",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test(`Verify response 280`, function () {",
									"    pm.expect(response.errors[0].status).to.be.eql(statusResponse.toString());",
									"    pm.expect(response.errors[0].title).to.be.eql(titleResponse.toString());",
									"    pm.expect(response.errors[0].detail).to.be.eql(detailResponse.toString());",
									"    pm.expect(response.errors[0].id).to.be.eql(idResponse.toString());",
									"    pm.expect(response.errors[0].code).to.be.eql(codeResponse.toString());",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{squad-106}}api/3.1/georeferencing?latitude=25.6490376&longitude=-100.4431806",
							"host": [
								"{{squad-106}}api"
							],
							"path": [
								"3.1",
								"georeferencing"
							],
							"query": [
								{
									"key": "latitude",
									"value": "25.6490376"
								},
								{
									"key": "longitude",
									"value": "-100.4431806"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Cobertura-BR",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"city\", 33);",
									"pm.collectionVariables.set(\"country\", 3);",
									"pm.collectionVariables.set(\"type\", \"georeferencing\");",
									"pm.collectionVariables.set(\"id\", 1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const countryResponse = pm.collectionVariables.get(\"country\");",
									"const cityResponse = pm.collectionVariables.get(\"city\");",
									"const typeResponse = pm.collectionVariables.get(\"type\");",
									"const idResponse = pm.collectionVariables.get(\"id\");",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test(\"Verify status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(`Verify response 200`, function () {",
									"    pm.expect(response.data.type).to.be.eql(typeResponse);",
									"    pm.expect(response.data.id).to.be.eql(idResponse.toString());",
									"        pm.expect(response.data.attributes.city_id).to.be.eql(cityResponse.toString());",
									"        pm.expect(response.data.attributes.country_id).to.be.eql(countryResponse.toString());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{squad-106}}api/3.1/georeferencing?latitude=-23.5475&longitude=-46.63611",
							"host": [
								"{{squad-106}}api"
							],
							"path": [
								"3.1",
								"georeferencing"
							],
							"query": [
								{
									"key": "latitude",
									"value": "-23.5475"
								},
								{
									"key": "longitude",
									"value": "-46.63611"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sin-Cobertura-BR",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"status\", 280);",
									"pm.collectionVariables.set(\"title\", \"Error\");",
									"pm.collectionVariables.set(\"detail\", \"No se encontraron resultados para esta ubicación\");",
									"pm.collectionVariables.set(\"id\", \"ID_GEOREFERENCING_NOT_FOUND\");",
									"pm.collectionVariables.set(\"code\", \"CODE_GEOREFERENCING_INVALID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const statusResponse = pm.collectionVariables.get(\"status\");",
									"const titleResponse = pm.collectionVariables.get(\"title\");",
									"const detailResponse = pm.collectionVariables.get(\"detail\");",
									"const idResponse = pm.collectionVariables.get(\"id\");",
									"const codeResponse = pm.collectionVariables.get(\"code\");",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test(`Verify response 280`, function () {",
									"    pm.expect(response.errors[0].status).to.be.eql(statusResponse.toString());",
									"    pm.expect(response.errors[0].title).to.be.eql(titleResponse.toString());",
									"    pm.expect(response.errors[0].detail).to.be.eql(detailResponse.toString());",
									"    pm.expect(response.errors[0].id).to.be.eql(idResponse.toString());",
									"    pm.expect(response.errors[0].code).to.be.eql(codeResponse.toString());",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{squad-106}}api/3.1/georeferencing?latitude=-22.9137531&longitude=-43.586066",
							"host": [
								"{{squad-106}}api"
							],
							"path": [
								"3.1",
								"georeferencing"
							],
							"query": [
								{
									"key": "latitude",
									"value": "-22.9137531"
								},
								{
									"key": "longitude",
									"value": "-43.586066"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sin-Cobertura-Pais",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"status\", 280);",
									"pm.collectionVariables.set(\"title\", \"Error\");",
									"pm.collectionVariables.set(\"detail\", \"No se encontraron resultados para esta ubicación\");",
									"pm.collectionVariables.set(\"id\", \"ID_GEOREFERENCING_NOT_FOUND\");",
									"pm.collectionVariables.set(\"code\", \"CODE_GEOREFERENCING_INVALID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const statusResponse = pm.collectionVariables.get(\"status\");",
									"const titleResponse = pm.collectionVariables.get(\"title\");",
									"const detailResponse = pm.collectionVariables.get(\"detail\");",
									"const idResponse = pm.collectionVariables.get(\"id\");",
									"const codeResponse = pm.collectionVariables.get(\"code\");",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test(`Verify response 280`, function () {",
									"    pm.expect(response.errors[0].status).to.be.eql(statusResponse.toString());",
									"    pm.expect(response.errors[0].title).to.be.eql(titleResponse.toString());",
									"    pm.expect(response.errors[0].detail).to.be.eql(detailResponse.toString());",
									"    pm.expect(response.errors[0].id).to.be.eql(idResponse.toString());",
									"    pm.expect(response.errors[0].code).to.be.eql(codeResponse.toString());",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{squad-106}}api/3.1/georeferencing?latitude=37.2754919&longitude=-104.6582933",
							"host": [
								"{{squad-106}}api"
							],
							"path": [
								"3.1",
								"georeferencing"
							],
							"query": [
								{
									"key": "latitude",
									"value": "37.2754919"
								},
								{
									"key": "longitude",
									"value": "-104.6582933"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Ciudad apagada-col-Santander",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const countryResponse = pm.collectionVariables.get(\"country\");",
									"const cityResponse = pm.collectionVariables.get(\"city\");",
									"const typeResponse = pm.collectionVariables.get(\"type\");",
									"const idResponse = pm.collectionVariables.get(\"id\");",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test(\"Verify status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(`Verify response 200`, function () {",
									"    pm.expect(response.data.type).to.be.eql(typeResponse);",
									"    pm.expect(response.data.id).to.be.eql(idResponse.toString());",
									"        pm.expect(response.data.attributes.city_id).to.be.eql(cityResponse.toString());",
									"        pm.expect(response.data.attributes.country_id).to.be.eql(countryResponse.toString());",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"squad\", 109);",
									"pm.collectionVariables.set(\"city\", 8);",
									"pm.collectionVariables.set(\"country\", 1);",
									"pm.collectionVariables.set(\"type\", \"georeferencing\");",
									"pm.collectionVariables.set(\"id\", 1);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://squad-{{squad}}.supermercap.com/api/3.1/georeferencing?latitude=7.120991&longitude=-73.125287",
							"protocol": "https",
							"host": [
								"squad-{{squad}}",
								"supermercap",
								"com"
							],
							"path": [
								"api",
								"3.1",
								"georeferencing"
							],
							"query": [
								{
									"key": "latitude",
									"value": "7.120991"
								},
								{
									"key": "longitude",
									"value": "-73.125287"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Pais-apagado-FRA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const countryResponse = pm.collectionVariables.get(\"country\");",
									"const cityResponse = pm.collectionVariables.get(\"city\");",
									"const typeResponse = pm.collectionVariables.get(\"type\");",
									"const idResponse = pm.collectionVariables.get(\"id\");",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test(\"Verify status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(`Verify response 200`, function () {",
									"    pm.expect(response.data.type).to.be.eql(typeResponse);",
									"    pm.expect(response.data.id).to.be.eql(idResponse.toString());",
									"        pm.expect(response.data.attributes.city_id).to.be.eql(cityResponse.toString());",
									"        pm.expect(response.data.attributes.country_id).to.be.eql(countryResponse.toString());",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"squad\", 100);",
									"pm.collectionVariables.set(\"city\", 8);",
									"pm.collectionVariables.set(\"country\", 1);",
									"pm.collectionVariables.set(\"type\", \"georeferencing\");",
									"pm.collectionVariables.set(\"id\", 1);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://squad-{{squad}}.supermercap.com/api/3.1/georeferencing?latitude=45.8659289&longitude=-6.9316181",
							"protocol": "https",
							"host": [
								"squad-{{squad}}",
								"supermercap",
								"com"
							],
							"path": [
								"api",
								"3.1",
								"georeferencing"
							],
							"query": [
								{
									"key": "latitude",
									"value": "45.8659289"
								},
								{
									"key": "longitude",
									"value": "-6.9316181"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "400-No-Envio-latitude",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"squad\", 109);",
									"pm.collectionVariables.set(\"title\", \"Error in Field\");",
									"pm.collectionVariables.set(\"detail\", \"El campo latitude es obligatorio.\");",
									"pm.collectionVariables.set(\"code\", \"FORM_ERROR\");",
									"pm.collectionVariables.set(\"parameter\", \"latitude\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const titleResponse = pm.collectionVariables.get(\"title\");",
									"const detailResponse = pm.collectionVariables.get(\"detail\");",
									"const codeResponse = pm.collectionVariables.get(\"code\");",
									"const parameterResponse = pm.collectionVariables.get(\"parameter\");",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test(\"Verify status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Verify response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(`Verify response 200`, function () {",
									"    pm.expect(response.errors[0].title).to.be.eql(titleResponse);",
									"    pm.expect(response.errors[0].detail).to.be.eql(detailResponse);",
									"    pm.expect(response.errors[0].code).to.be.eql(codeResponse);",
									"    pm.expect(response.errors[0].source.parameter).to.be.eql(parameterResponse);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://squad-{{squad}}.supermercap.com/api/3.1/georeferencing?latitude=&longitude=-46.63611",
							"protocol": "https",
							"host": [
								"squad-{{squad}}",
								"supermercap",
								"com"
							],
							"path": [
								"api",
								"3.1",
								"georeferencing"
							],
							"query": [
								{
									"key": "latitude",
									"value": ""
								},
								{
									"key": "longitude",
									"value": "-46.63611"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "400-No-Envio-longitude",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"squad\", 109);",
									"pm.collectionVariables.set(\"title\", \"Error in Field\");",
									"pm.collectionVariables.set(\"detail\", \"El campo longitude es obligatorio.\");",
									"pm.collectionVariables.set(\"code\", \"FORM_ERROR\");",
									"pm.collectionVariables.set(\"parameter\", \"longitude\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const titleResponse = pm.collectionVariables.get(\"title\");",
									"const detailResponse = pm.collectionVariables.get(\"detail\");",
									"const codeResponse = pm.collectionVariables.get(\"code\");",
									"const parameterResponse = pm.collectionVariables.get(\"parameter\");",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test(\"Verify status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Verify response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(`Verify response 200`, function () {",
									"    pm.expect(response.errors[0].title).to.be.eql(titleResponse);",
									"    pm.expect(response.errors[0].detail).to.be.eql(detailResponse);",
									"    pm.expect(response.errors[0].code).to.be.eql(codeResponse);",
									"    pm.expect(response.errors[0].source.parameter).to.be.eql(parameterResponse);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{squad-106}}api/3.1/georeferencing?latitude=23.5475&longitude=",
							"host": [
								"{{squad-106}}api"
							],
							"path": [
								"3.1",
								"georeferencing"
							],
							"query": [
								{
									"key": "latitude",
									"value": "23.5475"
								},
								{
									"key": "longitude",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "400-No-Envio-latitude-ni-longitude",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"squad\", 109);",
									"pm.collectionVariables.set(\"title\", \"Error in Field\");",
									"pm.collectionVariables.set(\"detail2\", \"El campo latitude es obligatorio.\");",
									"pm.collectionVariables.set(\"code\", \"FORM_ERROR\");",
									"pm.collectionVariables.set(\"parameter1\", \"latitude\");",
									"",
									"pm.collectionVariables.set(\"detail1\", \"El campo longitude es obligatorio.\");",
									"pm.collectionVariables.set(\"parameter2\", \"longitude\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const titleResponse = pm.collectionVariables.get(\"title\");",
									"const detailResponse1 = pm.collectionVariables.get(\"detail1\");",
									"const detailResponse2 = pm.collectionVariables.get(\"detail2\");",
									"const codeResponse = pm.collectionVariables.get(\"code\");",
									"const parameterResponse1 = pm.collectionVariables.get(\"parameter1\");",
									"const parameterResponse2 = pm.collectionVariables.get(\"parameter2\");",
									"",
									"var response = pm.response.json();",
									"",
									"pm.test(\"Verify status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Verify response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(`Verify response 200`, function () {",
									"    pm.expect(response.errors[0].title).to.be.eql(titleResponse);",
									"    pm.expect(response.errors[0].detail).to.be.eql(detailResponse1);",
									"    pm.expect(response.errors[0].code).to.be.eql(codeResponse);",
									"    //pm.expect(response.errors[0].source.parameter).to.be.eql(parameterResponse1);",
									"});",
									"",
									"pm.test(`Verify response 200`, function () {",
									"    pm.expect(response.errors[0].title).to.be.eql(titleResponse);",
									"    pm.expect(response.errors[0].detail.find(detailResponse2)).to.be.eql(detailResponse2);",
									"    pm.expect(response.errors[0].code).to.be.eql(codeResponse);",
									"    //pm.expect(response.errors[0].source.parameter).to.be.eql(parameterResponse2);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{squad-106}}api/3.1/georeferencing",
							"host": [
								"{{squad-106}}api"
							],
							"path": [
								"3.1",
								"georeferencing"
							],
							"query": [
								{
									"key": "latitude",
									"value": "23.5475",
									"disabled": true
								},
								{
									"key": "longitude",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "500",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{squad-106}}api/3.1/georeferencing?latitude=23.5475&longitude=-46.63611",
							"host": [
								"{{squad-106}}api"
							],
							"path": [
								"3.1",
								"georeferencing"
							],
							"query": [
								{
									"key": "latitude",
									"value": "23.5475"
								},
								{
									"key": "longitude",
									"value": "-46.63611"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "External Api",
			"item": [
				{
					"name": "historias en el home",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://squad-{{squad}}.supermercap.com/featured/api/1.0/stores/{{storeID}}/channels/{{channelID}}/home-store/stories?warehouseId={{warehouseID}}&storeType={{storeType}}",
							"protocol": "http",
							"host": [
								"squad-{{squad}}",
								"supermercap",
								"com"
							],
							"path": [
								"featured",
								"api",
								"1.0",
								"stores",
								"{{storeID}}",
								"channels",
								"{{channelID}}",
								"home-store",
								"stories"
							],
							"query": [
								{
									"key": "isExpress",
									"value": "{isExpress}",
									"disabled": true
								},
								{
									"key": "warehouseId",
									"value": "{{warehouseID}}"
								},
								{
									"key": "per_page",
									"value": "{{per_page}}",
									"disabled": true
								},
								{
									"key": "storeType",
									"value": "{{storeType}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Historia en brandroom principal",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://squad-{{squad}}.supermercap.com/featured/api/1.0/stores/{{storeID}}/channels/{{channelID}}/brandrooms/{{brandroomID}}/main/stories?warehouseId={{warehouseID}}",
							"protocol": "http",
							"host": [
								"squad-{{squad}}",
								"supermercap",
								"com"
							],
							"path": [
								"featured",
								"api",
								"1.0",
								"stores",
								"{{storeID}}",
								"channels",
								"{{channelID}}",
								"brandrooms",
								"{{brandroomID}}",
								"main",
								"stories"
							],
							"query": [
								{
									"key": "warehouseId",
									"value": "{{warehouseID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "Internal Api",
			"item": [
				{
					"name": "Story-Type-Content Copy",
					"item": [
						{
							"name": "Create-Story-Content",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const getChannels = {",
											"    url: `http://api-ads.internal.squad-${pm.collectionVariables.get(\"squad\")}.supermercap.com:8080/internal/featured/api/1.0/channels/list`,",
											"    method: \"GET\"",
											"};",
											"",
											"const createChannel = {",
											"    url: `http://api-ads.internal.squad-${pm.collectionVariables.get(\"squad\")}.supermercap.com:8080/internal/featured/api/1.0/channels/create`,",
											"    method: \"POST\",",
											"    header: {",
											"        'content-type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({ ",
											"            brand_name: \"Vanish\",",
											"            platforms: [1,2,4],",
											"            name: \"Vanish\",",
											"            title: \"Vanish\",",
											"            url_logo: \"https://d50xhnwqnrbqk.cloudfront.net/stores/images/app/744b4e3fb799f17b5e9c160bcdf2017b.jpg\",",
											"            status: 1,",
											"            position: 1",
											"        })",
											"    }",
											"}",
											"",
											"const createChannel_request = (createChannel) =>{",
											"    pm.sendRequest(createChannel, function(err, channel){",
											"        return channel;",
											"    })",
											"}",
											"",
											"",
											"pm.sendRequest(getChannels, function(err, channels){",
											"    var channels = channels.json();",
											"    if (channels.data.length != 0){",
											"        const channel_ids = _.map(channels.data, function(channel){",
											"            return channel.id;",
											"        })",
											"        pm.globals.set(\"channel_id\", _.sample(channel_ids));",
											"    }else{",
											"        var data_channel = createChannel_request(createChannel);",
											"        console.log(data_channel);",
											"        pm.globals.set(\"channel_id\", _.sample(data_channel.data.id));",
											"    }",
											"})",
											"",
											"",
											"const isOneDigit = (digit) =>{",
											"    return (digit <= 9)? \"0\"+digit : digit;",
											"}",
											"",
											"const getDate = (formatDate) =>{",
											"    var date = new Date();",
											"    var dateNow =  formatDate",
											"        .replace('mm', isOneDigit(date.getMonth() + 1))",
											"        .replace('yyyy', date.getFullYear())",
											"        .replace('dd', isOneDigit(date.getDate()))",
											"        .replace('hh', isOneDigit(date.getHours()))",
											"        .replace('MM', isOneDigit(date.getMinutes()))",
											"        .replace('ss', isOneDigit(date.getSeconds()))",
											"    return dateNow;",
											"}",
											"",
											"pm.collectionVariables.set(\"date_now\", getDate(\"yyyy-mm-dd hh:MM:ss\"));",
											"pm.collectionVariables.set(\"name\", \"New story \" + getDate(\"hh:MM:ss\"));",
											"pm.collectionVariables.set(\"url_multimedia\", \"https://res.cloudinary.com/dawtz7vi1/video/upload/v1607800414/merqueo-nat-2_GFcmtNLw_5LVi_gqa6sx.mp4\");",
											"pm.collectionVariables.set(\"deeplink\", \"mrq://merqueo?type=department&store_id=63&department_id=402&express=false\");",
											"",
											"var dateNow = pm.collectionVariables.get(\"date_now\");",
											"dateNow = (dateNow.replace(\" \", \"T\"))+\"+00:00\";",
											"pm.collectionVariables.set(\"date_now_utc\", dateNow);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"pm.globals.set(\"story_id\", response.data.id)",
											"",
											"pm.test(`Verify channel_id ${channel_id}`, function () {",
											"    pm.expect(response.data.attributes.channel_id).to.be.eql(parseInt(channel_id));",
											"    pm.expect(response.data.attributes.store_id).to.be.eql(63);",
											"});",
											"",
											"pm.test(`Verify response inputs null - Category 2`, function () {",
											"    pm.expect(response.data.attributes.description).to.be.eql(null);",
											"    pm.expect(response.data.attributes.deeplink_url).to.be.eql(null);",
											"    pm.expect(response.data.attributes.inapp_url).to.be.eql(null);",
											"    pm.expect(response.data.attributes.cta).to.be.eql(null);",
											"    pm.expect(response.data.attributes.tag).to.be.eql(null);",
											"});",
											"",
											"pm.test(`Verify response`, function () {",
											"    pm.expect(response.data.attributes.name).to.be.eql(name);",
											"    pm.expect(response.data.attributes.lifetime_minutes).to.be.eql(3000);",
											"    pm.expect(response.data.attributes.start_date).to.be.eql(date_now_utc);",
											"    pm.expect(response.data.attributes.url_multimedia).to.be.eql(url_multimedia);",
											"    pm.expect(response.data.attributes.display_duration).to.be.eql(25);",
											"    pm.expect(response.data.attributes.category).to.be.eql(2);",
											"    pm.expect(response.data.attributes.status).to.be.true;",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"channel_id\": {{channel_id}},\n    \"store_id\": 63,\n    \"name\": \"{{name}}\",\n    \"lifetime_minutes\": 3000,\n    \"type_multimedia\": \"video\",\n    \"display_duration\": 25,\n    \"url_multimedia\": \"https://res.cloudinary.com/dawtz7vi1/video/upload/v1607800414/merqueo-nat-2_GFcmtNLw_5LVi_gqa6sx.mp4\",\n    \"start_date\": \"{{date_now}}\",\n    \"status\": 1,\n    \"warehouses\": \"[2]\",\n    \"category\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://api-ads.internal.squad-{{squad}}.supermercap.com:8080/internal/featured/api/1.0/channel/story/create",
									"protocol": "http",
									"host": [
										"api-ads",
										"internal",
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"port": "8080",
									"path": [
										"internal",
										"featured",
										"api",
										"1.0",
										"channel",
										"story",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "External-Storys-Create",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.globals.set(\"warehouse_id\", 2);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const story_id = pm.collectionVariables.get(\"story_id\");",
											"const name = pm.collectionVariables.get(\"name\");",
											"const url_multimedia = pm.collectionVariables.get(\"url_multimedia\");",
											"const date_now_utc = pm.collectionVariables.get(\"date_now_utc\");",
											"const status = pm.collectionVariables.get(\"status_story\");",
											"const description = pm.collectionVariables.get(\"description\")",
											"const display_duration = pm.collectionVariables.get(\"display_duration\")  ",
											"",
											"",
											"pm.test(`Verify story_id return in response`, function () {",
											"    const story_ids = _.map(response.data, function(story_id){",
											"        return story_id.id;",
											"    })",
											"    pm.expect(story_ids.includes(story_id)).to.be.true;",
											"});",
											"",
											"pm.test(`Verify order return by start_date asc`, function () {",
											"    const start_dates = _.map(response.data, function(start_date){",
											"        return start_date.attributes.start_date;",
											"    })",
											"",
											"    const start_date_order = start_dates.sort();",
											"    for(i = 0; i <= start_dates.length - 1; i++){",
											"        pm.expect(start_dates[i]).to.be.eql(start_date_order[i]);",
											"    }",
											"});",
											"",
											"",
											"for(i=0; i <= response.data.length - 1; i++){",
											"    if (parseInt(response.data[i].id) === parseInt(story_id)){",
											"",
											"        pm.test(`Verify response inputs null - Category 2`, function () {",
											"            pm.expect(response.data[i].attributes.description).to.be.eql(`${description}`);",
											"            pm.expect(response.data[i].attributes.deeplink_url).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.inapp_url).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.cta).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.tag).to.be.eql(null);",
											"        });",
											"        ",
											"        pm.test(`Verify response`, function () {",
											"            pm.expect(parseInt(response.data[i].id)).to.be.eql(parseInt(story_id));",
											"            pm.expect(response.data[i].attributes.name).to.be.eql(`${name}`);",
											"            pm.expect(response.data[i].attributes.start_date).to.be.eql(date_now_utc);",
											"            pm.expect(response.data[i].attributes.url_multimedia).to.be.eql(url_multimedia);",
											"            pm.expect(response.data[i].attributes.display_duration).to.be.eql(parseInt(display_duration));",
											"            pm.expect(response.data[i].attributes.category).to.be.eql(\"content\");",
											"            pm.expect(response.data[i].attributes.status).to.be.true;",
											"            pm.expect(response.data[i].attributes.has_stock).to.be.false;",
											"        });",
											"    }",
											"}",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://squad-{{squad}}.supermercap.com/featured/api/1.0/stores/63/channels/{{channel_id}}/stories?warehouseId={{warehouse_id}}",
									"protocol": "https",
									"host": [
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"path": [
										"featured",
										"api",
										"1.0",
										"stores",
										"63",
										"channels",
										"{{channel_id}}",
										"stories"
									],
									"query": [
										{
											"key": "warehouseId",
											"value": "{{warehouse_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "update- Story",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const story_id = pm.globals.get(\"story_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const lifetime_minutes = pm.globals.get(\"lifetime_minutes\");",
											"const status = pm.globals.get(\"status_story\");",
											"",
											"pm.test(`Verify channel_id ${channel_id}`, function () {",
											"    pm.expect(response.data.attributes.channel_id).to.be.eql(parseInt(channel_id));",
											"    pm.expect(response.data.attributes.store_id).to.be.eql(63);",
											"});",
											"",
											"pm.test(`Verify response inputs null - Category 2`, function () {",
											"    pm.expect(response.data.attributes.description).to.be.eql(null);",
											"    pm.expect(response.data.attributes.deeplink_url).to.be.eql(null);",
											"    pm.expect(response.data.attributes.inapp_url).to.be.eql(null);",
											"    pm.expect(response.data.attributes.cta).to.be.eql(null);",
											"    pm.expect(response.data.attributes.tag).to.be.eql(null);",
											"});",
											"",
											"pm.test(`Verify response`, function () {",
											"    pm.expect(parseInt(response.data.id)).to.be.eql(parseInt(story_id));",
											"    pm.expect(response.data.attributes.name).to.be.eql(`${name} Editado`);",
											"    pm.expect(response.data.attributes.lifetime_minutes).to.be.eql(lifetime_minutes);",
											"    pm.expect(response.data.attributes.start_date).to.be.eql(date_now_utc);",
											"    pm.expect(response.data.attributes.url_multimedia).to.be.eql(url_multimedia);",
											"    pm.expect(response.data.attributes.display_duration).to.be.eql(25);",
											"    pm.expect(response.data.attributes.category).to.be.eql(2);",
											"    pm.expect(response.data.attributes.status).to.be.eql(parseInt(status));",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.globals.set(\"lifetime_minutes\", 3001);",
											"pm.globals.set(\"status_story\", 1);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"channel_id\": {{channel_id}},\n    \"store_id\": 63,\n    \"name\": \"{{name}} Editado\",\n    \"lifetime_minutes\": 3001,\n    \"type_multimedia\": \"video\",\n    \"display_duration\": 25,\n    \"url_multimedia\": \"{{url_multimedia}}\",\n    \"start_date\": \"{{date_now}}\",\n    \"status\": 1,\n    \"warehouses\": \"[2]\",\n    \"category\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://api-ads.internal.squad-{{squad}}.supermercap.com:8080/internal/featured/api/1.0/channel/story/update/{{story_id}}",
									"protocol": "http",
									"host": [
										"api-ads",
										"internal",
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"port": "8080",
									"path": [
										"internal",
										"featured",
										"api",
										"1.0",
										"channel",
										"story",
										"update",
										"{{story_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "External-Storys-Update",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.globals.set(\"warehouse_id\", 2);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const story_id = pm.globals.get(\"story_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const status = pm.globals.get(\"status_story\");",
											"",
											"",
											"pm.test(`Verify story_id return in response`, function () {",
											"    const story_ids = _.map(response.data, function(story_id){",
											"        return story_id.id;",
											"    })",
											"    pm.expect(story_ids.includes(story_id)).to.be.true;",
											"});",
											"",
											"pm.test(`Verify order return by start_date asc`, function () {",
											"    const start_dates = _.map(response.data, function(start_date){",
											"        return start_date.attributes.start_date;",
											"    })",
											"",
											"    const start_date_order = start_dates.sort();",
											"    for(i = 0; i <= start_dates.length - 1; i++){",
											"        pm.expect(start_dates[i]).to.be.eql(start_date_order[i]);",
											"    }",
											"});",
											"",
											"",
											"for(i=0; i <= response.data.length - 1; i++){",
											"    if (parseInt(response.data[i].id) === parseInt(story_id)){",
											"",
											"        pm.test(`Verify response inputs null - Category 2`, function () {",
											"            pm.expect(response.data[i].attributes.description).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.deeplink_url).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.inapp_url).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.cta).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.tag).to.be.eql(null);",
											"        });",
											"        ",
											"        pm.test(`Verify response`, function () {",
											"            pm.expect(parseInt(response.data[i].id)).to.be.eql(parseInt(story_id));",
											"            pm.expect(response.data[i].attributes.name).to.be.eql(`${name} Editado`);",
											"            pm.expect(response.data[i].attributes.start_date).to.be.eql(date_now_utc);",
											"            pm.expect(response.data[i].attributes.url_multimedia).to.be.eql(url_multimedia);",
											"            pm.expect(response.data[i].attributes.display_duration).to.be.eql(25);",
											"            pm.expect(response.data[i].attributes.category).to.be.eql(\"content\");",
											"            pm.expect(response.data[i].attributes.status).to.be.true;",
											"            pm.expect(response.data[i].attributes.has_stock).to.be.false;",
											"        });",
											"    }",
											"}",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://squad-{{squad}}.supermercap.com/featured/api/1.0/stores/63/channels/{{channel_id}}/stories?warehouseId={{warehouse_id}}",
									"protocol": "https",
									"host": [
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"path": [
										"featured",
										"api",
										"1.0",
										"stores",
										"63",
										"channels",
										"{{channel_id}}",
										"stories"
									],
									"query": [
										{
											"key": "warehouseId",
											"value": "{{warehouse_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get-Story",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const story_id = pm.globals.get(\"story_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const lifetime_minutes = pm.globals.get(\"lifetime_minutes\");",
											"const status = pm.globals.get(\"status_story\");",
											"",
											"",
											"pm.test(`Verify channel_id ${channel_id}`, function () {",
											"    pm.expect(response.data.attributes.channel_id).to.be.eql(parseInt(channel_id));",
											"    pm.expect(response.data.attributes.store_id).to.be.eql(63);",
											"});",
											"",
											"pm.test(`Verify response inputs null - Category 2`, function () {",
											"    pm.expect(response.data.attributes.description).to.be.eql(null);",
											"    pm.expect(response.data.attributes.deeplink_url).to.be.eql(null);",
											"    pm.expect(response.data.attributes.inapp_url).to.be.eql(null);",
											"    pm.expect(response.data.attributes.cta).to.be.eql(null);",
											"    pm.expect(response.data.attributes.tag).to.be.eql(null);",
											"});",
											"",
											"pm.test(`Verify response`, function () {",
											"    pm.expect(parseInt(response.data.id)).to.be.eql(parseInt(story_id));",
											"    pm.expect(response.data.attributes.name).to.be.eql(`${name} Editado`);",
											"    pm.expect(response.data.attributes.lifetime_minutes).to.be.eql(lifetime_minutes);",
											"    pm.expect(response.data.attributes.start_date).to.be.eql(date_now_utc);",
											"    pm.expect(response.data.attributes.url_multimedia).to.be.eql(url_multimedia);",
											"    pm.expect(response.data.attributes.display_duration).to.be.eql(25);",
											"    pm.expect(response.data.attributes.category).to.be.eql(2);",
											"    pm.expect(response.data.attributes.status).to.be.eql(parseInt(status));",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//Modificamos la variable global a 0 para futura prueba",
											"pm.globals.set(\"status_story\", 0);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://api-ads.internal.squad-{{squad}}.supermercap.com:8080/internal/featured/api/1.0/channel/story/{{story_id}}",
									"protocol": "http",
									"host": [
										"api-ads",
										"internal",
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"port": "8080",
									"path": [
										"internal",
										"featured",
										"api",
										"1.0",
										"channel",
										"story",
										"{{story_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update-Status-Story",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const story_id = pm.globals.get(\"story_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const lifetime_minutes = pm.globals.get(\"lifetime_minutes\");",
											"const status = pm.globals.get(\"status_story\");",
											"",
											"pm.test(`Verify channel_id ${channel_id}`, function () {",
											"    pm.expect(response.data.attributes.channel_id).to.be.eql(parseInt(channel_id));",
											"    pm.expect(response.data.attributes.store_id).to.be.eql(63);",
											"});",
											"",
											"pm.test(`Verify response inputs null - Category 2`, function () {",
											"    pm.expect(response.data.attributes.description).to.be.eql(null);",
											"    pm.expect(response.data.attributes.deeplink_url).to.be.eql(null);",
											"    pm.expect(response.data.attributes.inapp_url).to.be.eql(null);",
											"    pm.expect(response.data.attributes.cta).to.be.eql(null);",
											"    pm.expect(response.data.attributes.tag).to.be.eql(null);",
											"});",
											"",
											"pm.test(`Verify response`, function () {",
											"    pm.expect(parseInt(response.data.id)).to.be.eql(parseInt(story_id));",
											"    pm.expect(response.data.attributes.name).to.be.eql(`${name} Editado`);",
											"    pm.expect(response.data.attributes.lifetime_minutes).to.be.eql(lifetime_minutes);",
											"    pm.expect(response.data.attributes.start_date).to.be.eql(date_now_utc);",
											"    pm.expect(response.data.attributes.url_multimedia).to.be.eql(url_multimedia);",
											"    pm.expect(response.data.attributes.display_duration).to.be.eql(25);",
											"    pm.expect(response.data.attributes.category).to.be.eql(2);",
											"    pm.expect(response.data.attributes.status).to.be.eql(parseInt(status));",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": {{status_story}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://api-ads.internal.squad-{{squad}}.supermercap.com:8080/internal/featured/api/1.0/channel/story/update-status/{{story_id}}",
									"protocol": "http",
									"host": [
										"api-ads",
										"internal",
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"port": "8080",
									"path": [
										"internal",
										"featured",
										"api",
										"1.0",
										"channel",
										"story",
										"update-status",
										"{{story_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "list-Storys",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const story_id = pm.globals.get(\"story_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const lifetime_minutes = pm.globals.get(\"lifetime_minutes\");",
											"const status = pm.globals.get(\"status_story\");",
											"",
											"",
											"for(i=0; i <= response.data.length - 1; i++){",
											"    if (parseInt(response.data[i].id) === parseInt(story_id)){",
											"        ",
											"        pm.test(`Verify channel_id ${channel_id}`, function () {",
											"            pm.expect(response.data[i].attributes.channel_id).to.be.eql(parseInt(channel_id));",
											"            pm.expect(response.data[i].attributes.store_id).to.be.eql(63);",
											"        });",
											"",
											"        pm.test(`Verify response inputs null - Category 2`, function () {",
											"            pm.expect(response.data[i].attributes.description).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.deeplink_url).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.inapp_url).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.cta).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.tag).to.be.eql(null);",
											"        });",
											"        ",
											"        pm.test(`Verify response`, function () {",
											"            pm.expect(parseInt(response.data[i].id)).to.be.eql(parseInt(story_id));",
											"            pm.expect(response.data[i].attributes.name).to.be.eql(`${name} Editado`);",
											"            pm.expect(response.data[i].attributes.lifetime_minutes).to.be.eql(lifetime_minutes);",
											"            pm.expect(response.data[i].attributes.start_date).to.be.eql(date_now_utc);",
											"            pm.expect(response.data[i].attributes.url_multimedia).to.be.eql(url_multimedia);",
											"            pm.expect(response.data[i].attributes.display_duration).to.be.eql(25);",
											"            pm.expect(response.data[i].attributes.category).to.be.eql(2);",
											"            pm.expect(response.data[i].attributes.status).to.be.eql(parseInt(status));",
											"        });",
											"    }",
											"}",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://api-ads.internal.squad-{{squad}}.supermercap.com:8080/internal/featured/api/1.0/channel/story/list?channel_id={{channel_id}}",
									"protocol": "http",
									"host": [
										"api-ads",
										"internal",
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"port": "8080",
									"path": [
										"internal",
										"featured",
										"api",
										"1.0",
										"channel",
										"story",
										"list"
									],
									"query": [
										{
											"key": "channel_id",
											"value": "{{channel_id}}"
										},
										{
											"key": "status",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "External-Storys-inactive",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.globals.set(\"warehouse_id\", 2);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const story_id = pm.globals.get(\"story_id\");",
											"const response_280 = {",
											"    \"errors\": [",
											"        {",
											"            \"status\": \"280\",",
											"            \"title\": \"Story error\",",
											"            \"detail\": \"Historia no encontrada.\",",
											"            \"code\": \"CHANNEL_STORY_NOT_FOUND\"",
											"        }",
											"    ]",
											"}",
											"",
											"if (pm.response.code === 200){",
											"    pm.test(`Verify story_id not return in response - inactive`, function () {",
											"        const story_ids = _.map(response.data, function(story_id){",
											"            return story_id.id;",
											"        })",
											"        pm.expect(story_ids.includes(story_id)).to.be.false;",
											"    });",
											"",
											"    pm.test(`Verify order return by start_date asc`, function () {",
											"        const start_dates = _.map(response.data, function(start_date){",
											"        return start_date.attributes.start_date;",
											"    })",
											"",
											"    const start_date_order = start_dates.sort();",
											"    for(i = 0; i <= start_dates.length - 1; i++){",
											"            pm.expect(start_dates[i]).to.be.eql(start_date_order[i]);",
											"        }",
											"    });",
											"",
											"}",
											"",
											"if (pm.response.code === 280){",
											"    pm.test(`Verify response code 280`, function () {",
											"        pm.expect(response).to.be.eql(response_280);",
											"    });",
											"}",
											"",
											"",
											"",
											"//Clear globals variable",
											"pm.globals.unset(\"channel_id\");",
											"pm.globals.unset(\"date_now\");",
											"pm.globals.unset(\"date_now_utc\");",
											"pm.globals.unset(\"deeplink\");",
											"pm.globals.unset(\"name\");",
											"pm.globals.unset(\"url_multimedia\");",
											"pm.globals.unset(\"story_id\");",
											"pm.globals.unset(\"lifetime_minutes\");",
											"pm.globals.unset(\"status_story\");",
											"pm.globals.unset(\"warehouse_id\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://squad-{{squad}}.supermercap.com/featured/api/1.0/stores/63/channels/{{channel_id}}/stories?warehouseId={{warehouse_id}}",
									"protocol": "https",
									"host": [
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"path": [
										"featured",
										"api",
										"1.0",
										"stores",
										"63",
										"channels",
										"{{channel_id}}",
										"stories"
									],
									"query": [
										{
											"key": "warehouseId",
											"value": "{{warehouse_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Story-Type-Product Copy",
					"item": [
						{
							"name": "Create-Story-Product",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const getChannels = {",
											"    url: `http://api-ads.internal.squad-${pm.collectionVariables.get(\"squad\")}.supermercap.com:8080/internal/featured/api/1.0/channels/list`,",
											"    method: \"GET\"",
											"};",
											"",
											"const createChannel = {",
											"    url: `http://api-ads.internal.squad-${pm.collectionVariables.get(\"squad\")}.supermercap.com:8080/internal/featured/api/1.0/channels/create`,",
											"    method: \"POST\",",
											"    header: {",
											"        'content-type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({ ",
											"            brand_name: \"Vanish\",",
											"            platforms: [1,2,4],",
											"            name: \"Vanish\",",
											"            title: \"Vanish\",",
											"            url_logo: \"https://d50xhnwqnrbqk.cloudfront.net/stores/images/app/744b4e3fb799f17b5e9c160bcdf2017b.jpg\",",
											"            status: 1,",
											"            position: 1",
											"        })",
											"    }",
											"}",
											"",
											"const createChannel_request = (createChannel) =>{",
											"    pm.sendRequest(createChannel, function(err, channel){",
											"        return channel;",
											"    })",
											"}",
											"",
											"",
											"pm.sendRequest(getChannels, function(err, channels){",
											"    var channels = channels.json();",
											"    if (channels.data.length != 0){",
											"        const channel_ids = _.map(channels.data, function(channel){",
											"            return channel.id;",
											"        })",
											"        pm.globals.set(\"channel_id\", _.sample(channel_ids));",
											"    }else{",
											"        var data_channel = createChannel_request(createChannel);",
											"        console.log(data_channel);",
											"        pm.globals.set(\"channel_id\", _.sample(data_channel.data.id));",
											"    }",
											"})",
											"",
											"",
											"const isOneDigit = (digit) =>{",
											"    return (digit <= 9)? \"0\"+digit : digit;",
											"}",
											"",
											"const getDate = (formatDate) =>{",
											"    var date = new Date();",
											"    var dateNow =  formatDate",
											"        .replace('mm', isOneDigit(date.getMonth() + 1))",
											"        .replace('yyyy', date.getFullYear())",
											"        .replace('dd', isOneDigit(date.getDate()))",
											"        .replace('hh', isOneDigit(date.getHours()))",
											"        .replace('MM', isOneDigit(date.getMinutes()))",
											"        .replace('ss', isOneDigit(date.getSeconds()))",
											"    return dateNow;",
											"}",
											"",
											"pm.globals.set(\"date_now\", getDate(\"yyyy-mm-dd hh:MM:ss\"));",
											"pm.globals.set(\"name\", \"New product \" + getDate(\"hh:MM:ss\"));",
											"pm.globals.set(\"url_multimedia\", \"https://res.cloudinary.com/dawtz7vi1/video/upload/v1607800414/merqueo-nat-2_GFcmtNLw_5LVi_gqa6sx.mp4\");",
											"pm.globals.set(\"deeplink\", \"mrq://merqueo?type=department&store_id=63&department_id=402&express=false\");",
											"pm.globals.set(\"url_inapp\", \"https://d243r.app.goo.gl/6uw6r\");",
											"pm.globals.set(\"tag\", \"07caa489a006c6e374acd6ac3bae2e18\");",
											"",
											"",
											"https://d243r.app.goo.gl/6uw6r",
											"",
											"var dateNow = pm.globals.get(\"date_now\");",
											"dateNow = (dateNow.replace(\" \", \"T\"))+\"+00:00\";",
											"pm.globals.set(\"date_now_utc\", dateNow);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const tag = pm.globals.get(\"tag\");",
											"pm.globals.set(\"story_id\", response.data.id)",
											"",
											"pm.test(`Verify channel_id ${channel_id}`, function () {",
											"    pm.expect(response.data.attributes.channel_id).to.be.eql(parseInt(channel_id));",
											"    pm.expect(response.data.attributes.store_id).to.be.eql(63);",
											"});",
											"",
											"pm.test(`Verify response inputs null - Category 1`, function () {",
											"    pm.expect(response.data.attributes.description).to.be.eql(null);",
											"    pm.expect(response.data.attributes.cta).to.be.eql(null);",
											"    pm.expect(response.data.attributes.deeplink_url).to.be.eql(null);",
											"    pm.expect(response.data.attributes.inapp_url).to.be.eql(null);",
											"});",
											"",
											"pm.test(`Verify response`, function () {",
											"    pm.expect(response.data.attributes.name).to.be.eql(name);",
											"    pm.expect(response.data.attributes.lifetime_minutes).to.be.eql(3000);",
											"    pm.expect(response.data.attributes.start_date).to.be.eql(date_now_utc);",
											"    pm.expect(response.data.attributes.url_multimedia).to.be.eql(url_multimedia);",
											"    pm.expect(response.data.attributes.display_duration).to.be.eql(25);",
											"    pm.expect(response.data.attributes.category).to.be.eql(4);",
											"    pm.expect(response.data.attributes.status).to.be.true;",
											"    pm.expect(response.data.attributes.tag).to.be.eql(tag);",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"channel_id\": {{channel_id}},\n    \"store_id\": 63,\n    \"name\": \"{{name}}\",\n    \"lifetime_minutes\": 3000,\n    \"type_multimedia\": \"video\",\n    \"display_duration\": 25,\n    \"url_multimedia\": \"{{url_multimedia}}\",\n    \"start_date\": \"{{date_now}}\",\n    \"status\": 1,\n    \"warehouses\": \"[2]\",\n    \"category\": 4,\n    \"tag\": \"{{tag}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://api-ads.internal.squad-{{squad}}.supermercap.com:8080/internal/featured/api/1.0/channel/story/create",
									"protocol": "http",
									"host": [
										"api-ads",
										"internal",
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"port": "8080",
									"path": [
										"internal",
										"featured",
										"api",
										"1.0",
										"channel",
										"story",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "External-Storys-Create",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.globals.set(\"warehouse_id\", 2);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const story_id = pm.globals.get(\"story_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const lifetime_minutes = pm.globals.get(\"lifetime_minutes\");",
											"const status = pm.globals.get(\"status_story\");",
											"const deeplink = pm.globals.get(\"deeplink\");",
											"const url_inapp = pm.globals.get(\"url_inapp\");",
											"const tag = pm.globals.get(\"tag\");",
											"const cta = pm.globals.get(\"cta\");",
											"",
											"",
											"pm.test(`Verify order return by start_date asc`, function () {",
											"    const start_dates = _.map(response.data, function(start_date){",
											"        return start_date.attributes.start_date;",
											"    })",
											"",
											"    const start_date_order = start_dates.sort();",
											"    for(i = 0; i <= start_dates.length - 1; i++){",
											"        pm.expect(start_dates[i]).to.be.eql(start_date_order[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"for(i=0; i <= response.data.length - 1; i++){",
											"    console.log(i)",
											"    if (parseInt(response.data[i].id) === parseInt(story_id)){",
											"",
											"        pm.test(`Verify response inputs null - Category 1`, function () {",
											"            pm.expect(response.data[i].attributes.description).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.cta).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.deeplink_url).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.inapp_url).to.be.eql(null);",
											"        });",
											"        ",
											"        pm.test(`Verify response`, function () {",
											"            pm.expect(parseInt(response.data[i].id)).to.be.eql(parseInt(story_id));",
											"            pm.expect(response.data[i].attributes.name).to.be.eql(`${name}`);",
											"            pm.expect(response.data[i].attributes.lifetime_minutes).to.be.eql(3000);",
											"            pm.expect(response.data[i].attributes.start_date).to.be.eql(date_now_utc);",
											"            pm.expect(response.data[i].attributes.url_multimedia).to.be.eql(url_multimedia);",
											"            pm.expect(response.data[i].attributes.display_duration).to.be.eql(25);",
											"            pm.expect(response.data[i].attributes.category).to.be.eql(\"product\");",
											"            pm.expect(response.data[i].attributes.status).to.be.true;",
											"            pm.expect(response.data[i].attributes.tag).to.be.eql(tag);",
											"        });",
											"    }",
											"}",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://squad-{{squad}}.supermercap.com/featured/api/1.0/stores/63/channels/{{channel_id}}/stories?warehouseId={{warehouse_id}}",
									"protocol": "https",
									"host": [
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"path": [
										"featured",
										"api",
										"1.0",
										"stores",
										"63",
										"channels",
										"{{channel_id}}",
										"stories"
									],
									"query": [
										{
											"key": "warehouseId",
											"value": "{{warehouse_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "update- Story",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const deeplink = pm.globals.get(\"deeplink\");",
											"const url_inapp = pm.globals.get(\"url_inapp\");",
											"const lifetime_minutes = pm.globals.get(\"lifetime_minutes\");",
											"const status_story = pm.globals.get(\"status_story\");",
											"const tag = pm.globals.get(\"tag\");",
											"const story_id = pm.globals.get(\"story_id\");",
											"pm.globals.set(\"story_id\", response.data.id)",
											"",
											"pm.test(`Verify channel_id ${channel_id}`, function () {",
											"    pm.expect(response.data.attributes.channel_id).to.be.eql(parseInt(channel_id));",
											"    pm.expect(response.data.attributes.store_id).to.be.eql(63);",
											"});",
											"",
											"pm.test(`Verify response inputs null - Category 1`, function () {",
											"    pm.expect(response.data.attributes.description).to.be.eql(null);",
											"    pm.expect(response.data.attributes.cta).to.be.eql(null);",
											"    pm.expect(response.data.attributes.deeplink_url).to.be.eql(null);",
											"    pm.expect(response.data.attributes.inapp_url).to.be.eql(null);",
											"});",
											"",
											"pm.test(`Verify response`, function () {",
											"    pm.expect(parseInt(response.data.id)).to.be.eql(parseInt(story_id));",
											"    pm.expect(response.data.attributes.name).to.be.eql(`${name} Editado`);",
											"    pm.expect(response.data.attributes.lifetime_minutes).to.be.eql(lifetime_minutes);",
											"    pm.expect(response.data.attributes.start_date).to.be.eql(date_now_utc);",
											"    pm.expect(response.data.attributes.url_multimedia).to.be.eql(url_multimedia);",
											"    pm.expect(response.data.attributes.display_duration).to.be.eql(25);",
											"    pm.expect(response.data.attributes.category).to.be.eql(4);",
											"    pm.expect(response.data.attributes.status).to.be.eql(status_story);",
											"    pm.expect(response.data.attributes.tag).to.be.eql(tag);",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.globals.set(\"lifetime_minutes\", 3001);",
											"pm.globals.set(\"status_story\", 1);",
											"pm.globals.set(\"tag\", \"07caa489a006c6e374acd6ac3bae2e182121\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"channel_id\": {{channel_id}},\n    \"store_id\": 63,\n    \"name\": \"{{name}} Editado\",\n    \"lifetime_minutes\": {{lifetime_minutes}},\n    \"type_multimedia\": \"video\",\n    \"display_duration\": 25,\n    \"url_multimedia\": \"{{url_multimedia}}\",\n    \"start_date\": \"{{date_now}}\",\n    \"status\": 1,\n    \"warehouses\": \"[2]\",\n    \"category\": 4,\n    \"tag\": \"{{tag}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://api-ads.internal.squad-{{squad}}.supermercap.com:8080/internal/featured/api/1.0/channel/story/update/{{story_id}}",
									"protocol": "http",
									"host": [
										"api-ads",
										"internal",
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"port": "8080",
									"path": [
										"internal",
										"featured",
										"api",
										"1.0",
										"channel",
										"story",
										"update",
										"{{story_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "External-Storys-Update",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.globals.set(\"warehouse_id\", 2);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const story_id = pm.globals.get(\"story_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const lifetime_minutes = pm.globals.get(\"lifetime_minutes\");",
											"const status = pm.globals.get(\"status_story\");",
											"const deeplink = pm.globals.get(\"deeplink\");",
											"const url_inapp = pm.globals.get(\"url_inapp\");",
											"const tag = pm.globals.get(\"tag\");",
											"const cta = pm.globals.get(\"cta\");",
											"",
											"",
											"pm.test(`Verify order return by start_date asc`, function () {",
											"    const start_dates = _.map(response.data, function(start_date){",
											"        return start_date.attributes.start_date;",
											"    })",
											"",
											"    const start_date_order = start_dates.sort();",
											"    for(i = 0; i <= start_dates.length - 1; i++){",
											"        pm.expect(start_dates[i]).to.be.eql(start_date_order[i]);",
											"    }",
											"});",
											"",
											"",
											"for(i=0; i <= response.data.length - 1; i++){",
											"    console.log(i)",
											"    if (parseInt(response.data[i].id) === parseInt(story_id)){",
											"",
											"        pm.test(`Verify response inputs null - Category 1`, function () {",
											"            pm.expect(response.data[i].attributes.description).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.cta).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.deeplink_url).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.inapp_url).to.be.eql(null);",
											"        });",
											"        ",
											"        pm.test(`Verify response`, function () {",
											"            pm.expect(parseInt(response.data[i].id)).to.be.eql(parseInt(story_id));",
											"            pm.expect(response.data[i].attributes.name).to.be.eql(`${name} Editado`);",
											"            pm.expect(response.data[i].attributes.lifetime_minutes).to.be.eql(lifetime_minutes);",
											"            pm.expect(response.data[i].attributes.start_date).to.be.eql(date_now_utc);",
											"            pm.expect(response.data[i].attributes.url_multimedia).to.be.eql(url_multimedia);",
											"            pm.expect(response.data[i].attributes.display_duration).to.be.eql(25);",
											"            pm.expect(response.data[i].attributes.category).to.be.eql(\"product\");",
											"            pm.expect(response.data[i].attributes.status).to.be.true;",
											"            pm.expect(response.data[i].attributes.tag).to.be.eql(tag);",
											"        });",
											"    }",
											"}",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://squad-{{squad}}.supermercap.com/featured/api/1.0/stores/63/channels/{{channel_id}}/stories?warehouseId={{warehouse_id}}",
									"protocol": "https",
									"host": [
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"path": [
										"featured",
										"api",
										"1.0",
										"stores",
										"63",
										"channels",
										"{{channel_id}}",
										"stories"
									],
									"query": [
										{
											"key": "warehouseId",
											"value": "{{warehouse_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get-Story",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const deeplink = pm.globals.get(\"deeplink\");",
											"const url_inapp = pm.globals.get(\"url_inapp\");",
											"const lifetime_minutes = pm.globals.get(\"lifetime_minutes\");",
											"const status_story = pm.globals.get(\"status_story\");",
											"const tag = pm.globals.get(\"tag\");",
											"const story_id = pm.globals.get(\"story_id\");",
											"pm.globals.set(\"story_id\", response.data.id)",
											"",
											"pm.test(`Verify channel_id ${channel_id}`, function () {",
											"    pm.expect(response.data.attributes.channel_id).to.be.eql(parseInt(channel_id));",
											"    pm.expect(response.data.attributes.store_id).to.be.eql(63);",
											"});",
											"",
											"pm.test(`Verify response inputs null - Category 1`, function () {",
											"    pm.expect(response.data.attributes.description).to.be.eql(null);",
											"    pm.expect(response.data.attributes.cta).to.be.eql(null);",
											"    pm.expect(response.data.attributes.deeplink_url).to.be.eql(null);",
											"    pm.expect(response.data.attributes.inapp_url).to.be.eql(null);",
											"});",
											"",
											"pm.test(`Verify response`, function () {",
											"    pm.expect(parseInt(response.data.id)).to.be.eql(parseInt(story_id));",
											"    pm.expect(response.data.attributes.name).to.be.eql(`${name} Editado`);",
											"    pm.expect(response.data.attributes.lifetime_minutes).to.be.eql(lifetime_minutes);",
											"    pm.expect(response.data.attributes.start_date).to.be.eql(date_now_utc);",
											"    pm.expect(response.data.attributes.url_multimedia).to.be.eql(url_multimedia);",
											"    pm.expect(response.data.attributes.display_duration).to.be.eql(25);",
											"    pm.expect(response.data.attributes.category).to.be.eql(4);",
											"    pm.expect(response.data.attributes.status).to.be.eql(status_story);",
											"    pm.expect(response.data.attributes.tag).to.be.eql(tag);",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//Modificamos la variable global a 0 para futura prueba",
											"pm.globals.set(\"status_story\", 0);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://api-ads.internal.squad-{{squad}}.supermercap.com:8080/internal/featured/api/1.0/channel/story/{{story_id}}",
									"protocol": "http",
									"host": [
										"api-ads",
										"internal",
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"port": "8080",
									"path": [
										"internal",
										"featured",
										"api",
										"1.0",
										"channel",
										"story",
										"{{story_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update-Status-Story",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const deeplink = pm.globals.get(\"deeplink\");",
											"const url_inapp = pm.globals.get(\"url_inapp\");",
											"const lifetime_minutes = pm.globals.get(\"lifetime_minutes\");",
											"const status_story = pm.globals.get(\"status_story\");",
											"const tag = pm.globals.get(\"tag\");",
											"const story_id = pm.globals.get(\"story_id\");",
											"pm.globals.set(\"story_id\", response.data.id)",
											"",
											"pm.test(`Verify channel_id ${channel_id}`, function () {",
											"    pm.expect(response.data.attributes.channel_id).to.be.eql(parseInt(channel_id));",
											"    pm.expect(response.data.attributes.store_id).to.be.eql(63);",
											"});",
											"",
											"pm.test(`Verify response inputs null - Category 1`, function () {",
											"    pm.expect(response.data.attributes.description).to.be.eql(null);",
											"    pm.expect(response.data.attributes.cta).to.be.eql(null);",
											"    pm.expect(response.data.attributes.deeplink_url).to.be.eql(null);",
											"    pm.expect(response.data.attributes.inapp_url).to.be.eql(null);",
											"});",
											"",
											"pm.test(`Verify response`, function () {",
											"    pm.expect(parseInt(response.data.id)).to.be.eql(parseInt(story_id));",
											"    pm.expect(response.data.attributes.name).to.be.eql(`${name} Editado`);",
											"    pm.expect(response.data.attributes.lifetime_minutes).to.be.eql(lifetime_minutes);",
											"    pm.expect(response.data.attributes.start_date).to.be.eql(date_now_utc);",
											"    pm.expect(response.data.attributes.url_multimedia).to.be.eql(url_multimedia);",
											"    pm.expect(response.data.attributes.display_duration).to.be.eql(25);",
											"    pm.expect(response.data.attributes.category).to.be.eql(4);",
											"    pm.expect(response.data.attributes.status).to.be.eql(status_story);",
											"    pm.expect(response.data.attributes.tag).to.be.eql(tag);",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": {{status_story}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://api-ads.internal.squad-{{squad}}.supermercap.com:8080/internal/featured/api/1.0/channel/story/update-status/{{story_id}}",
									"protocol": "http",
									"host": [
										"api-ads",
										"internal",
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"port": "8080",
									"path": [
										"internal",
										"featured",
										"api",
										"1.0",
										"channel",
										"story",
										"update-status",
										"{{story_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "list-Storys",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const deeplink = pm.globals.get(\"deeplink\");",
											"const url_inapp = pm.globals.get(\"url_inapp\");",
											"const lifetime_minutes = pm.globals.get(\"lifetime_minutes\");",
											"const status_story = pm.globals.get(\"status_story\");",
											"const tag = pm.globals.get(\"tag\");",
											"const story_id = pm.globals.get(\"story_id\");",
											"",
											"",
											"for(i=0; i <= response.data.length - 1; i++){",
											"    console.log(i)",
											"    if (parseInt(response.data[i].id) === parseInt(story_id)){",
											"        ",
											"        pm.test(`Verify channel_id ${channel_id}`, function () {",
											"            pm.expect(response.data[i].attributes.channel_id).to.be.eql(parseInt(channel_id));",
											"            pm.expect(response.data[i].attributes.store_id).to.be.eql(63);",
											"        });",
											"",
											"        pm.test(`Verify response inputs null - Category 2`, function () {",
											"            pm.expect(response.data[i].attributes.description).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.inapp_url).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.deeplink_url).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.cta).to.be.eql(null);",
											"        });",
											"        ",
											"        pm.test(`Verify response`, function () {",
											"            pm.expect(parseInt(response.data[i].id)).to.be.eql(parseInt(story_id));",
											"            pm.expect(response.data[i].attributes.name).to.be.eql(`${name} Editado`);",
											"            pm.expect(response.data[i].attributes.lifetime_minutes).to.be.eql(lifetime_minutes);",
											"            pm.expect(response.data[i].attributes.start_date).to.be.eql(date_now_utc);",
											"            pm.expect(response.data[i].attributes.url_multimedia).to.be.eql(url_multimedia);",
											"            pm.expect(response.data[i].attributes.display_duration).to.be.eql(25);",
											"            pm.expect(response.data[i].attributes.category).to.be.eql(4);",
											"            pm.expect(response.data[i].attributes.status).to.be.eql(parseInt(status_story));",
											"            pm.expect(response.data[i].attributes.tag).to.be.eql(tag);",
											"        });",
											"    }",
											"}",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://api-ads.internal.squad-{{squad}}.supermercap.com:8080/internal/featured/api/1.0/channel/story/list?channel_id={{channel_id}}",
									"protocol": "http",
									"host": [
										"api-ads",
										"internal",
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"port": "8080",
									"path": [
										"internal",
										"featured",
										"api",
										"1.0",
										"channel",
										"story",
										"list"
									],
									"query": [
										{
											"key": "channel_id",
											"value": "{{channel_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "External-Storys-inactive",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.globals.set(\"warehouse_id\", 2);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const story_id = pm.globals.get(\"story_id\");",
											"const response_280 = {",
											"    \"errors\": [",
											"        {",
											"            \"status\": \"280\",",
											"            \"title\": \"Story error\",",
											"            \"detail\": \"Historia no encontrada.\",",
											"            \"code\": \"CHANNEL_STORY_NOT_FOUND\"",
											"        }",
											"    ]",
											"}",
											"",
											"if (pm.response.code === 200){",
											"    pm.test(`Verify story_id not return in response - inactive`, function () {",
											"        const story_ids = _.map(response.data, function(story_id){",
											"            return story_id.id;",
											"        })",
											"        pm.expect(story_ids.includes(story_id)).to.be.false;",
											"    });",
											"",
											"    pm.test(`Verify order return by start_date asc`, function () {",
											"    const start_dates = _.map(response.data, function(start_date){",
											"        return start_date.attributes.start_date;",
											"    })",
											"",
											"    const start_date_order = start_dates.sort();",
											"    for(i = 0; i <= start_dates.length - 1; i++){",
											"        pm.expect(start_dates[i]).to.be.eql(start_date_order[i]);",
											"        }",
											"    });",
											"",
											"}",
											"",
											"if (pm.response.code === 280){",
											"    pm.test(`Verify response code 280`, function () {",
											"        pm.expect(response).to.be.eql(response_280);",
											"    });",
											"}",
											"",
											"//Clear globals variable",
											"pm.globals.unset(\"channel_id\");",
											"pm.globals.unset(\"date_now\");",
											"pm.globals.unset(\"date_now_utc\");",
											"pm.globals.unset(\"deeplink\");",
											"pm.globals.unset(\"name\");",
											"pm.globals.unset(\"url_multimedia\");",
											"pm.globals.unset(\"story_id\");",
											"pm.globals.unset(\"lifetime_minutes\");",
											"pm.globals.unset(\"status_story\");",
											"pm.globals.unset(\"warehouse_id\");",
											"pm.globals.unset(\"cta\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://squad-{{squad}}.supermercap.com/featured/api/1.0/stores/63/channels/{{channel_id}}/stories?warehouseId={{warehouse_id}}",
									"protocol": "https",
									"host": [
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"path": [
										"featured",
										"api",
										"1.0",
										"stores",
										"63",
										"channels",
										"{{channel_id}}",
										"stories"
									],
									"query": [
										{
											"key": "warehouseId",
											"value": "{{warehouse_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Story-Type-Deeplink Copy",
					"item": [
						{
							"name": "Create-Story-Deeplink",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const getChannels = {",
											"    url: `http://api-ads.internal.squad-${pm.collectionVariables.get(\"squad\")}.supermercap.com:8080/internal/featured/api/1.0/channels/list`,",
											"    method: \"GET\"",
											"};",
											"",
											"const createChannel = {",
											"    url: `http://api-ads.internal.squad-${pm.collectionVariables.get(\"squad\")}.supermercap.com:8080/internal/featured/api/1.0/channels/create`,",
											"    method: \"POST\",",
											"    header: {",
											"        'content-type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({ ",
											"            brand_name: \"Vanish\",",
											"            platforms: [1,2,4],",
											"            name: \"Vanish\",",
											"            title: \"Vanish\",",
											"            url_logo: \"https://d50xhnwqnrbqk.cloudfront.net/stores/images/app/744b4e3fb799f17b5e9c160bcdf2017b.jpg\",",
											"            status: 1,",
											"            position: 1",
											"        })",
											"    }",
											"}",
											"",
											"const createChannel_request = (createChannel) =>{",
											"    pm.sendRequest(createChannel, function(err, channel){",
											"        return channel;",
											"    })",
											"}",
											"",
											"",
											"pm.sendRequest(getChannels, function(err, channels){",
											"    var channels = channels.json();",
											"    if (channels.data.length != 0){",
											"        const channel_ids = _.map(channels.data, function(channel){",
											"            return channel.id;",
											"        })",
											"        pm.globals.set(\"channel_id\", _.sample(channel_ids));",
											"    }else{",
											"        var data_channel = createChannel_request(createChannel);",
											"        console.log(data_channel);",
											"        pm.globals.set(\"channel_id\", _.sample(data_channel.data.id));",
											"    }",
											"})",
											"",
											"const isOneDigit = (digit) =>{",
											"    return (digit <= 9)? \"0\"+digit : digit;",
											"}",
											"",
											"const getDate = (formatDate) =>{",
											"    var date = new Date();",
											"    var dateNow =  formatDate",
											"        .replace('mm', isOneDigit(date.getMonth() + 1))",
											"        .replace('yyyy', date.getFullYear())",
											"        .replace('dd', isOneDigit(date.getDate()))",
											"        .replace('hh', isOneDigit(date.getHours()))",
											"        .replace('MM', isOneDigit(date.getMinutes()))",
											"        .replace('ss', isOneDigit(date.getSeconds()))",
											"    return dateNow;",
											"}",
											"",
											"pm.globals.set(\"date_now\", getDate(\"yyyy-mm-dd hh:MM:ss\"));",
											"pm.globals.set(\"name\", \"New deeplink \" + getDate(\"hh:MM:ss\"));",
											"pm.globals.set(\"url_multimedia\", \"https://res.cloudinary.com/dawtz7vi1/video/upload/v1607800414/merqueo-nat-2_GFcmtNLw_5LVi_gqa6sx.mp4\");",
											"pm.globals.set(\"deeplink\", \"mrq://merqueo?type=department&store_id=63&department_id=402&express=false\");",
											"pm.globals.set(\"url_inapp\", \"https://d243r.app.goo.gl/6uw6r\");",
											"",
											"",
											"https://d243r.app.goo.gl/6uw6r",
											"",
											"var dateNow = pm.globals.get(\"date_now\");",
											"dateNow = (dateNow.replace(\" \", \"T\"))+\"+00:00\";",
											"pm.globals.set(\"date_now_utc\", dateNow);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const deeplink = pm.globals.get(\"deeplink\");",
											"const url_inapp = pm.globals.get(\"url_inapp\");",
											"pm.globals.set(\"story_id\", response.data.id)",
											"",
											"pm.test(`Verify channel_id ${channel_id}`, function () {",
											"    pm.expect(response.data.attributes.channel_id).to.be.eql(parseInt(channel_id));",
											"    pm.expect(response.data.attributes.store_id).to.be.eql(63);",
											"});",
											"",
											"pm.test(`Verify response inputs null - Category 1`, function () {",
											"    pm.expect(response.data.attributes.description).to.be.eql(null);",
											"    pm.expect(response.data.attributes.cta).to.be.eql(null);",
											"    pm.expect(response.data.attributes.tag).to.be.eql(null);",
											"});",
											"",
											"pm.test(`Verify response`, function () {",
											"    pm.expect(response.data.attributes.name).to.be.eql(name);",
											"    pm.expect(response.data.attributes.lifetime_minutes).to.be.eql(3000);",
											"    pm.expect(response.data.attributes.start_date).to.be.eql(date_now_utc);",
											"    pm.expect(response.data.attributes.url_multimedia).to.be.eql(url_multimedia);",
											"    pm.expect(response.data.attributes.display_duration).to.be.eql(25);",
											"    pm.expect(response.data.attributes.category).to.be.eql(1);",
											"    pm.expect(response.data.attributes.status).to.be.true;",
											"    pm.expect(response.data.attributes.deeplink_url).to.be.eql(deeplink);",
											"    pm.expect(response.data.attributes.inapp_url).to.be.eql(url_inapp);",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"channel_id\": {{channel_id}},\n    \"store_id\": 63,\n    \"name\": \"{{name}}\",\n    \"lifetime_minutes\": 3000,\n    \"type_multimedia\": \"video\",\n    \"display_duration\": 25,\n    \"url_multimedia\": \"{{url_multimedia}}\",\n    \"start_date\": \"{{date_now}}\",\n    \"status\": 1,\n    \"warehouses\": \"[2]\",\n    \"category\": 1,\n    \"deeplink_url\": \"{{deeplink}}\",\n    \"inapp_url\": \"{{url_inapp}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://api-ads.internal.squad-{{squad}}.supermercap.com:8080/internal/featured/api/1.0/channel/story/create",
									"protocol": "http",
									"host": [
										"api-ads",
										"internal",
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"port": "8080",
									"path": [
										"internal",
										"featured",
										"api",
										"1.0",
										"channel",
										"story",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "External-Storys-Create",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.globals.set(\"warehouse_id\", 2);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const story_id = pm.globals.get(\"story_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const lifetime_minutes = pm.globals.get(\"lifetime_minutes\");",
											"const status = pm.globals.get(\"status_story\");",
											"const deeplink = pm.globals.get(\"deeplink\");",
											"const url_inapp = pm.globals.get(\"url_inapp\");",
											"const cta = pm.globals.get(\"cta\");",
											"",
											"pm.test(`Verify order return by start_date asc`, function () {",
											"    const start_dates = _.map(response.data, function(start_date){",
											"        return start_date.attributes.start_date;",
											"    })",
											"",
											"    const start_date_order = start_dates.sort();",
											"    for(i = 0; i <= start_dates.length - 1; i++){",
											"        pm.expect(start_dates[i]).to.be.eql(start_date_order[i]);",
											"    }",
											"});",
											"",
											"pm.test(`Verify order return by start_date asc`, function () {",
											"    const start_dates = _.map(response.data, function(start_date){",
											"        return start_date.attributes.start_date;",
											"    })",
											"",
											"    const start_date_order = start_dates.sort();",
											"    for(i = 0; i <= start_dates.length - 1; i++){",
											"        pm.expect(start_dates[i]).to.be.eql(start_date_order[i]);",
											"    }",
											"});",
											"",
											"",
											"for(i=0; i <= response.data.length - 1; i++){",
											"    if (parseInt(response.data[i].id) === parseInt(story_id)){",
											"",
											"        pm.test(`Verify response inputs null - Category 1`, function () {",
											"            pm.expect(response.data[i].attributes.description).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.tag).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.cta).to.be.eql(null);",
											"        });",
											"        ",
											"        pm.test(`Verify response`, function () {",
											"            pm.expect(parseInt(response.data[i].id)).to.be.eql(parseInt(story_id));",
											"            pm.expect(response.data[i].attributes.name).to.be.eql(`${name}`);",
											"            pm.expect(response.data[i].attributes.lifetime_minutes).to.be.eql(3000);",
											"            pm.expect(response.data[i].attributes.start_date).to.be.eql(date_now_utc);",
											"            pm.expect(response.data[i].attributes.url_multimedia).to.be.eql(url_multimedia);",
											"            pm.expect(response.data[i].attributes.display_duration).to.be.eql(25);",
											"            pm.expect(response.data[i].attributes.category).to.be.eql(\"deeplink\");",
											"            pm.expect(response.data[i].attributes.status).to.be.true;",
											"            pm.expect(response.data[i].attributes.deeplink_url).to.be.eql(`${deeplink}`);",
											"            pm.expect(response.data[i].attributes.inapp_url).to.be.eql(url_inapp);",
											"        });",
											"    }",
											"}",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://squad-{{squad}}.supermercap.com/featured/api/1.0/stores/63/channels/{{channel_id}}/stories?warehouseId={{warehouse_id}}",
									"protocol": "https",
									"host": [
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"path": [
										"featured",
										"api",
										"1.0",
										"stores",
										"63",
										"channels",
										"{{channel_id}}",
										"stories"
									],
									"query": [
										{
											"key": "warehouseId",
											"value": "{{warehouse_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "update- Story",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const deeplink = pm.globals.get(\"deeplink\");",
											"const url_inapp = pm.globals.get(\"url_inapp\");",
											"const lifetime_minutes = pm.globals.get(\"lifetime_minutes\");",
											"const cta = pm.globals.get(\"cta\");",
											"pm.globals.set(\"story_id\", response.data.id)",
											"",
											"pm.test(`Verify channel_id ${channel_id}`, function () {",
											"    pm.expect(response.data.attributes.channel_id).to.be.eql(parseInt(channel_id));",
											"    pm.expect(response.data.attributes.store_id).to.be.eql(63);",
											"});",
											"",
											"pm.test(`Verify response inputs null - Category 1`, function () {",
											"    pm.expect(response.data.attributes.description).to.be.eql(null);",
											"    pm.expect(response.data.attributes.tag).to.be.eql(null);",
											"    pm.expect(response.data.attributes.inapp_url).to.be.eql(null);",
											"});",
											"",
											"pm.test(`Verify response`, function () {",
											"    pm.expect(response.data.attributes.name).to.be.eql(`${name} Editado`);",
											"    pm.expect(response.data.attributes.lifetime_minutes).to.be.eql(lifetime_minutes);",
											"    pm.expect(response.data.attributes.start_date).to.be.eql(date_now_utc);",
											"    pm.expect(response.data.attributes.url_multimedia).to.be.eql(url_multimedia);",
											"    pm.expect(response.data.attributes.display_duration).to.be.eql(25);",
											"    pm.expect(response.data.attributes.category).to.be.eql(1);",
											"    pm.expect(response.data.attributes.status).to.be.eql(1);",
											"    pm.expect(response.data.attributes.deeplink_url).to.be.eql(`${deeplink}Editado`);",
											"    pm.expect(response.data.attributes.cta).to.be.eql(cta);",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.globals.set(\"lifetime_minutes\", 3001);",
											"pm.globals.set(\"status_story\", 1);",
											"pm.globals.set(\"cta\", \"Agregando CTA\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"channel_id\": {{channel_id}},\n    \"store_id\": 63,\n    \"name\": \"{{name}} Editado\",\n    \"lifetime_minutes\": {{lifetime_minutes}},\n    \"type_multimedia\": \"video\",\n    \"display_duration\": 25,\n    \"url_multimedia\": \"{{url_multimedia}}\",\n    \"start_date\": \"{{date_now}}\",\n    \"status\": 1,\n    \"warehouses\": \"[2]\",\n    \"category\": 1,\n    \"deeplink_url\": \"{{deeplink}}Editado\",\n    \"cta\": \"{{cta}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://api-ads.internal.squad-{{squad}}.supermercap.com:8080/internal/featured/api/1.0/channel/story/update/{{story_id}}",
									"protocol": "http",
									"host": [
										"api-ads",
										"internal",
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"port": "8080",
									"path": [
										"internal",
										"featured",
										"api",
										"1.0",
										"channel",
										"story",
										"update",
										"{{story_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "External-Storys-update",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.globals.set(\"warehouse_id\", 2);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const story_id = pm.globals.get(\"story_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const lifetime_minutes = pm.globals.get(\"lifetime_minutes\");",
											"const status = pm.globals.get(\"status_story\");",
											"const deeplink = pm.globals.get(\"deeplink\");",
											"const url_inapp = pm.globals.get(\"url_inapp\");",
											"const cta = pm.globals.get(\"cta\");",
											"",
											"pm.test(`Verify order return by start_date asc`, function () {",
											"    const start_dates = _.map(response.data, function(start_date){",
											"        return start_date.attributes.start_date;",
											"    })",
											"",
											"    const start_date_order = start_dates.sort();",
											"    for(i = 0; i <= start_dates.length - 1; i++){",
											"        pm.expect(start_dates[i]).to.be.eql(start_date_order[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"for(i=0; i <= response.data.length - 1; i++){",
											"    console.log(i)",
											"    if (parseInt(response.data[i].id) === parseInt(story_id)){",
											"",
											"        pm.test(`Verify response inputs null - Category 1`, function () {",
											"            pm.expect(response.data[i].attributes.description).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.tag).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.inapp_url).to.be.eql(null);",
											"        });",
											"        ",
											"        pm.test(`Verify response`, function () {",
											"            pm.expect(parseInt(response.data[i].id)).to.be.eql(parseInt(story_id));",
											"            pm.expect(response.data[i].attributes.name).to.be.eql(`${name} Editado`);",
											"            pm.expect(response.data[i].attributes.lifetime_minutes).to.be.eql(lifetime_minutes);",
											"            pm.expect(response.data[i].attributes.start_date).to.be.eql(date_now_utc);",
											"            pm.expect(response.data[i].attributes.url_multimedia).to.be.eql(url_multimedia);",
											"            pm.expect(response.data[i].attributes.display_duration).to.be.eql(25);",
											"            pm.expect(response.data[i].attributes.category).to.be.eql(\"deeplink\");",
											"            pm.expect(response.data[i].attributes.status).to.be.true;",
											"            pm.expect(response.data[i].attributes.deeplink_url).to.be.eql(`${deeplink}Editado`);",
											"            pm.expect(response.data[i].attributes.cta).to.be.eql(cta);",
											"        });",
											"    }",
											"}",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://squad-{{squad}}.supermercap.com/featured/api/1.0/stores/63/channels/{{channel_id}}/stories?warehouseId={{warehouse_id}}",
									"protocol": "https",
									"host": [
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"path": [
										"featured",
										"api",
										"1.0",
										"stores",
										"63",
										"channels",
										"{{channel_id}}",
										"stories"
									],
									"query": [
										{
											"key": "warehouseId",
											"value": "{{warehouse_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get-Story",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const deeplink = pm.globals.get(\"deeplink\");",
											"const url_inapp = pm.globals.get(\"url_inapp\");",
											"const lifetime_minutes = pm.globals.get(\"lifetime_minutes\");",
											"const cta = pm.globals.get(\"cta\");",
											"pm.globals.set(\"story_id\", response.data.id)",
											"",
											"pm.test(`Verify channel_id ${channel_id}`, function () {",
											"    pm.expect(response.data.attributes.channel_id).to.be.eql(parseInt(channel_id));",
											"    pm.expect(response.data.attributes.store_id).to.be.eql(63);",
											"});",
											"",
											"pm.test(`Verify response inputs null - Category 1`, function () {",
											"    pm.expect(response.data.attributes.description).to.be.eql(null);",
											"    pm.expect(response.data.attributes.tag).to.be.eql(null);",
											"    pm.expect(response.data.attributes.inapp_url).to.be.eql(null);",
											"});",
											"",
											"pm.test(`Verify response`, function () {",
											"    pm.expect(response.data.attributes.name).to.be.eql(`${name} Editado`);",
											"    pm.expect(response.data.attributes.lifetime_minutes).to.be.eql(lifetime_minutes);",
											"    pm.expect(response.data.attributes.start_date).to.be.eql(date_now_utc);",
											"    pm.expect(response.data.attributes.url_multimedia).to.be.eql(url_multimedia);",
											"    pm.expect(response.data.attributes.display_duration).to.be.eql(25);",
											"    pm.expect(response.data.attributes.category).to.be.eql(1);",
											"    pm.expect(response.data.attributes.status).to.be.eql(1);",
											"    pm.expect(response.data.attributes.deeplink_url).to.be.eql(`${deeplink}Editado`);",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//Modificamos la variable global a 0 para futura prueba",
											"pm.globals.set(\"status_story\", 0);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://api-ads.internal.squad-{{squad}}.supermercap.com:8080/internal/featured/api/1.0/channel/story/{{story_id}}",
									"protocol": "http",
									"host": [
										"api-ads",
										"internal",
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"port": "8080",
									"path": [
										"internal",
										"featured",
										"api",
										"1.0",
										"channel",
										"story",
										"{{story_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update-Status-Story",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const story_id = pm.globals.get(\"story_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const lifetime_minutes = pm.globals.get(\"lifetime_minutes\");",
											"const status = pm.globals.get(\"status_story\");",
											"const deeplink = pm.globals.get(\"deeplink\");",
											"const url_inapp = pm.globals.get(\"url_inapp\");",
											"const cta = pm.globals.get(\"cta\");",
											"",
											"pm.test(`Verify channel_id ${channel_id}`, function () {",
											"    pm.expect(response.data.attributes.channel_id).to.be.eql(parseInt(channel_id));",
											"    pm.expect(response.data.attributes.store_id).to.be.eql(63);",
											"});",
											"",
											"pm.test(`Verify response inputs null - Category 1`, function () {",
											"    pm.expect(response.data.attributes.description).to.be.eql(null);",
											"    pm.expect(response.data.attributes.tag).to.be.eql(null);",
											"    pm.expect(response.data.attributes.inapp_url).to.be.eql(null);",
											"});",
											"",
											"pm.test(`Verify response`, function () {",
											"    pm.expect(response.data.attributes.name).to.be.eql(`${name} Editado`);",
											"    pm.expect(response.data.attributes.lifetime_minutes).to.be.eql(lifetime_minutes);",
											"    pm.expect(response.data.attributes.start_date).to.be.eql(date_now_utc);",
											"    pm.expect(response.data.attributes.url_multimedia).to.be.eql(url_multimedia);",
											"    pm.expect(response.data.attributes.display_duration).to.be.eql(25);",
											"    pm.expect(response.data.attributes.category).to.be.eql(1);",
											"    pm.expect(response.data.attributes.status).to.be.eql(0);",
											"    pm.expect(response.data.attributes.deeplink_url).to.be.eql(`${deeplink}Editado`);",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": {{status_story}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://api-ads.internal.squad-{{squad}}.supermercap.com:8080/internal/featured/api/1.0/channel/story/update-status/{{story_id}}",
									"protocol": "http",
									"host": [
										"api-ads",
										"internal",
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"port": "8080",
									"path": [
										"internal",
										"featured",
										"api",
										"1.0",
										"channel",
										"story",
										"update-status",
										"{{story_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "list-Storys",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const story_id = pm.globals.get(\"story_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const lifetime_minutes = pm.globals.get(\"lifetime_minutes\");",
											"const status = pm.globals.get(\"status_story\");",
											"const deeplink = pm.globals.get(\"deeplink\");",
											"const url_inapp = pm.globals.get(\"url_inapp\");",
											"const cta = pm.globals.get(\"cta\");",
											"",
											"",
											"for(i=0; i <= response.data.length - 1; i++){",
											"    console.log(i)",
											"    if (parseInt(response.data[i].id) === parseInt(story_id)){",
											"        ",
											"        pm.test(`Verify channel_id ${channel_id}`, function () {",
											"            pm.expect(response.data[i].attributes.channel_id).to.be.eql(parseInt(channel_id));",
											"            pm.expect(response.data[i].attributes.store_id).to.be.eql(63);",
											"        });",
											"",
											"        pm.test(`Verify response inputs null - Category 2`, function () {",
											"            pm.expect(response.data[i].attributes.description).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.tag).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.inapp_url).to.be.eql(null);",
											"        });",
											"        ",
											"        pm.test(`Verify response`, function () {",
											"            pm.expect(parseInt(response.data[i].id)).to.be.eql(parseInt(story_id));",
											"            pm.expect(response.data[i].attributes.name).to.be.eql(`${name} Editado`);",
											"            pm.expect(response.data[i].attributes.lifetime_minutes).to.be.eql(lifetime_minutes);",
											"            pm.expect(response.data[i].attributes.start_date).to.be.eql(date_now_utc);",
											"            pm.expect(response.data[i].attributes.url_multimedia).to.be.eql(url_multimedia);",
											"            pm.expect(response.data[i].attributes.display_duration).to.be.eql(25);",
											"            pm.expect(response.data[i].attributes.category).to.be.eql(1);",
											"            pm.expect(response.data[i].attributes.status).to.be.eql(parseInt(status));",
											"            pm.expect(response.data[i].attributes.deeplink_url).to.be.eql(`${deeplink}Editado`);",
											"            pm.expect(response.data[i].attributes.cta).to.be.eql(cta);",
											"        });",
											"    }",
											"}",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://api-ads.internal.squad-{{squad}}.supermercap.com:8080/internal/featured/api/1.0/channel/story/list?channel_id={{channel_id}}",
									"protocol": "http",
									"host": [
										"api-ads",
										"internal",
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"port": "8080",
									"path": [
										"internal",
										"featured",
										"api",
										"1.0",
										"channel",
										"story",
										"list"
									],
									"query": [
										{
											"key": "channel_id",
											"value": "{{channel_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "External-Storys-inactive",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.globals.set(\"warehouse_id\", 2);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const story_id = pm.globals.get(\"story_id\");",
											"const response_280 = {",
											"    \"errors\": [",
											"        {",
											"            \"status\": \"280\",",
											"            \"title\": \"Story error\",",
											"            \"detail\": \"Historia no encontrada.\",",
											"            \"code\": \"CHANNEL_STORY_NOT_FOUND\"",
											"        }",
											"    ]",
											"}",
											"",
											"if (pm.response.code === 200){",
											"    pm.test(`Verify story_id not return in response - inactive`, function () {",
											"        const story_ids = _.map(response.data, function(story_id){",
											"            return story_id.id;",
											"        })",
											"        pm.expect(story_ids.includes(story_id)).to.be.false;",
											"    });",
											"",
											"    pm.test(`Verify order return by start_date asc`, function () {",
											"    const start_dates = _.map(response.data, function(start_date){",
											"        return start_date.attributes.start_date;",
											"    })",
											"",
											"    const start_date_order = start_dates.sort();",
											"    for(i = 0; i <= start_dates.length - 1; i++){",
											"        pm.expect(start_dates[i]).to.be.eql(start_date_order[i]);",
											"        }",
											"    });",
											"",
											"}",
											"",
											"if (pm.response.code === 280){",
											"    pm.test(`Verify response code 280`, function () {",
											"        pm.expect(response).to.be.eql(response_280);",
											"    });",
											"}",
											"",
											"//Clear globals variable",
											"pm.globals.unset(\"channel_id\");",
											"pm.globals.unset(\"date_now\");",
											"pm.globals.unset(\"date_now_utc\");",
											"pm.globals.unset(\"deeplink\");",
											"pm.globals.unset(\"name\");",
											"pm.globals.unset(\"url_multimedia\");",
											"pm.globals.unset(\"story_id\");",
											"pm.globals.unset(\"lifetime_minutes\");",
											"pm.globals.unset(\"status_story\");",
											"pm.globals.unset(\"warehouse_id\");",
											"pm.globals.unset(\"cta\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://squad-{{squad}}.supermercap.com/featured/api/1.0/stores/63/channels/{{channel_id}}/stories?warehouseId={{warehouse_id}}",
									"protocol": "https",
									"host": [
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"path": [
										"featured",
										"api",
										"1.0",
										"stores",
										"63",
										"channels",
										"{{channel_id}}",
										"stories"
									],
									"query": [
										{
											"key": "warehouseId",
											"value": "{{warehouse_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Story-Type-Products Copy",
					"item": [
						{
							"name": "Create-Story-Product",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const getChannels = {",
											"    url: `http://api-ads.internal.squad-${pm.collectionVariables.get(\"squad\")}.supermercap.com:8080/internal/featured/api/1.0/channels/list`,",
											"    method: \"GET\"",
											"};",
											"",
											"const createChannel = {",
											"    url: `http://api-ads.internal.squad-${pm.collectionVariables.get(\"squad\")}.supermercap.com:8080/internal/featured/api/1.0/channels/create`,",
											"    method: \"POST\",",
											"    header: {",
											"        'content-type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({ ",
											"            brand_name: \"Vanish\",",
											"            platforms: [1,2,4],",
											"            name: \"Vanish\",",
											"            title: \"Vanish\",",
											"            url_logo: \"https://d50xhnwqnrbqk.cloudfront.net/stores/images/app/744b4e3fb799f17b5e9c160bcdf2017b.jpg\",",
											"            status: 1,",
											"            position: 1",
											"        })",
											"    }",
											"}",
											"",
											"const createChannel_request = (createChannel) =>{",
											"    pm.sendRequest(createChannel, function(err, channel){",
											"        return channel;",
											"    })",
											"}",
											"",
											"",
											"pm.sendRequest(getChannels, function(err, channels){",
											"    var channels = channels.json();",
											"    if (channels.data.length != 0){",
											"        const channel_ids = _.map(channels.data, function(channel){",
											"            return channel.id;",
											"        })",
											"        pm.globals.set(\"channel_id\", _.sample(channel_ids));",
											"    }else{",
											"        var data_channel = createChannel_request(createChannel);",
											"        console.log(data_channel);",
											"        pm.globals.set(\"channel_id\", _.sample(data_channel.data.id));",
											"    }",
											"})",
											"",
											"",
											"",
											"const isOneDigit = (digit) =>{",
											"    return (digit <= 9)? \"0\"+digit : digit;",
											"}",
											"",
											"const getDate = (formatDate) =>{",
											"    var date = new Date();",
											"    var dateNow =  formatDate",
											"        .replace('mm', isOneDigit(date.getMonth() + 1))",
											"        .replace('yyyy', date.getFullYear())",
											"        .replace('dd', isOneDigit(date.getDate()))",
											"        .replace('hh', isOneDigit(date.getHours()))",
											"        .replace('MM', isOneDigit(date.getMinutes()))",
											"        .replace('ss', isOneDigit(date.getSeconds()))",
											"    return dateNow;",
											"}",
											"",
											"pm.globals.set(\"date_now\", getDate(\"yyyy-mm-dd hh:MM:ss\"));",
											"pm.globals.set(\"name\", \"New products \" + getDate(\"hh:MM:ss\"));",
											"pm.globals.set(\"url_multimedia\", \"https://res.cloudinary.com/dawtz7vi1/video/upload/v1607800414/merqueo-nat-2_GFcmtNLw_5LVi_gqa6sx.mp4\");",
											"pm.globals.set(\"deeplink\", \"mrq://merqueo?type=department&store_id=63&department_id=402&express=false\");",
											"pm.globals.set(\"url_inapp\", \"https://d243r.app.goo.gl/6uw6r\");",
											"pm.globals.set(\"tag\", \"07caa489a006c6e374acd6ac3bae2e18\");",
											"pm.globals.set(\"description\", \"Un banner (en español: banderola o pancarta), o más formalmente web banner, es un formato publicitario en Internet. Es un tipo de anuncio que generalmente es empleado en la publicidad llamada display, piezas publicitarias de contenido gráfico que se encuentran localizadas en diferentes páginas web. Los banners están diseñados con la intención de llamar la atención para así resaltar la publicidad y dar a comunicar un mensaje. La web o soporte donde el banner va incluido tiene como objetivo que el anunciante pague por esa publicidad que los visitantes van a ver. La publicidad display es un formato publicitario en línea en donde se muestran los anuncios en forma de banners en diferentes páginas web o en aplicaciones informáticas. Los banners pueden tomar diferentes formas. Pueden incluir imágenes, textos, audios, vídeos y otros formatos que puedan llamar la atención. Generalmente se ubican en la parte superior o lateral de las páginas web, o insertados entre sus contenidos. Los banners se crean con imágenes estáticas (usualmente JPEG o PNG), o con animaciones creadas a partir de tecnologías como GIF, HTML5, o menos frecuentemente Java, Adobe Shockwave y Adobe Flash. Con la evolución de HTML5 muchos de los espacios publicitarios son capaces de integrarse completamente en la página donde se alojan. Están diseñados con la intención de llamar la atención, resultar notorios y comunicar el mensaje deseado. Por lo tanto, estas banderolas no necesariamente mantienen la línea gráfica del sitio en el que publicitan.Cualquier sitio web es susceptible de incluir toda clase de banderolas y otros formatos publicitarios, aunque en la mayoría de los casos, son los sitios con contenidos de mayor interés o con grandes volúmenes de tráfico los que atraen las mayores inversiones de los anunciantes.\");",
											"",
											"",
											"https://d243r.app.goo.gl/6uw6r",
											"",
											"var dateNow = pm.globals.get(\"date_now\");",
											"dateNow = (dateNow.replace(\" \", \"T\"))+\"+00:00\";",
											"pm.globals.set(\"date_now_utc\", dateNow);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const tag = pm.globals.get(\"tag\");",
											"const description = pm.globals.get(\"description\");",
											"pm.globals.set(\"story_id\", response.data.id)",
											"",
											"pm.test(`Verify channel_id ${channel_id}`, function () {",
											"    pm.expect(response.data.attributes.channel_id).to.be.eql(parseInt(channel_id));",
											"    pm.expect(response.data.attributes.store_id).to.be.eql(63);",
											"});",
											"",
											"pm.test(`Verify response inputs null - Category 1`, function () {",
											"    pm.expect(response.data.attributes.cta).to.be.eql(null);",
											"    pm.expect(response.data.attributes.deeplink_url).to.be.eql(null);",
											"    pm.expect(response.data.attributes.inapp_url).to.be.eql(null);",
											"});",
											"",
											"pm.test(`Verify response`, function () {",
											"    pm.expect(response.data.attributes.name).to.be.eql(name);",
											"    pm.expect(response.data.attributes.lifetime_minutes).to.be.eql(3000);",
											"    pm.expect(response.data.attributes.start_date).to.be.eql(date_now_utc);",
											"    pm.expect(response.data.attributes.url_multimedia).to.be.eql(url_multimedia);",
											"    pm.expect(response.data.attributes.display_duration).to.be.eql(25);",
											"    pm.expect(response.data.attributes.category).to.be.eql(8);",
											"    pm.expect(response.data.attributes.status).to.be.true;",
											"    pm.expect(response.data.attributes.tag).to.be.eql(tag);",
											"    pm.expect(response.data.attributes.description).to.be.eql(description);",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"channel_id\": {{channel_id}},\n    \"store_id\": 63,\n    \"name\": \"{{name}}\",\n    \"lifetime_minutes\": 3000,\n    \"type_multimedia\": \"video\",\n    \"display_duration\": 25,\n    \"url_multimedia\": \"{{url_multimedia}}\",\n    \"start_date\": \"{{date_now}}\",\n    \"status\": 1,\n    \"warehouses\": \"[2]\",\n    \"category\": 8,\n    \"tag\": \"{{tag}}\",\n    \"description\":\"{{description}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://api-ads.internal.squad-{{squad}}.supermercap.com:8080/internal/featured/api/1.0/channel/story/create",
									"protocol": "http",
									"host": [
										"api-ads",
										"internal",
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"port": "8080",
									"path": [
										"internal",
										"featured",
										"api",
										"1.0",
										"channel",
										"story",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "External-Storys-Create",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.globals.set(\"warehouse_id\", 2);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const story_id = pm.globals.get(\"story_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const lifetime_minutes = pm.globals.get(\"lifetime_minutes\");",
											"const status = pm.globals.get(\"status_story\");",
											"const deeplink = pm.globals.get(\"deeplink\");",
											"const url_inapp = pm.globals.get(\"url_inapp\");",
											"const tag = pm.globals.get(\"tag\");",
											"const cta = pm.globals.get(\"cta\");",
											"const description = pm.globals.get(\"description\");",
											"",
											"",
											"for(i=0; i <= response.data.length - 1; i++){",
											"    console.log(i)",
											"    if (parseInt(response.data[i].id) === parseInt(story_id)){",
											"",
											"        pm.test(`Verify response inputs null - Category 1`, function () {",
											"            pm.expect(response.data[i].attributes.cta).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.deeplink_url).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.inapp_url).to.be.eql(null);",
											"        });",
											"        ",
											"        pm.test(`Verify response`, function () {",
											"            pm.expect(parseInt(response.data[i].id)).to.be.eql(parseInt(story_id));",
											"            pm.expect(response.data[i].attributes.name).to.be.eql(`${name}`);",
											"            pm.expect(response.data[i].attributes.lifetime_minutes).to.be.eql(3000);",
											"            pm.expect(response.data[i].attributes.start_date).to.be.eql(date_now_utc);",
											"            pm.expect(response.data[i].attributes.url_multimedia).to.be.eql(url_multimedia);",
											"            pm.expect(response.data[i].attributes.display_duration).to.be.eql(25);",
											"            pm.expect(response.data[i].attributes.category).to.be.eql(\"product_set\");",
											"            pm.expect(response.data[i].attributes.status).to.be.true;",
											"            pm.expect(response.data[i].attributes.tag).to.be.eql(tag);",
											"            pm.expect(response.data[i].attributes.description).to.be.eql(description);",
											"        });",
											"    }",
											"}",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://squad-{{squad}}.supermercap.com/featured/api/1.0/stores/63/channels/{{channel_id}}/stories?warehouseId={{warehouse_id}}",
									"protocol": "https",
									"host": [
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"path": [
										"featured",
										"api",
										"1.0",
										"stores",
										"63",
										"channels",
										"{{channel_id}}",
										"stories"
									],
									"query": [
										{
											"key": "warehouseId",
											"value": "{{warehouse_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "update- Story",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const deeplink = pm.globals.get(\"deeplink\");",
											"const url_inapp = pm.globals.get(\"url_inapp\");",
											"const lifetime_minutes = pm.globals.get(\"lifetime_minutes\");",
											"const status_story = pm.globals.get(\"status_story\");",
											"const tag = pm.globals.get(\"tag\");",
											"const story_id = pm.globals.get(\"story_id\");",
											"pm.globals.set(\"story_id\", response.data.id)",
											"",
											"pm.test(`Verify channel_id ${channel_id}`, function () {",
											"    pm.expect(response.data.attributes.channel_id).to.be.eql(parseInt(channel_id));",
											"    pm.expect(response.data.attributes.store_id).to.be.eql(63);",
											"});",
											"",
											"pm.test(`Verify response inputs null - Category 1`, function () {",
											"    pm.expect(response.data.attributes.description).to.be.eql(null);",
											"    pm.expect(response.data.attributes.cta).to.be.eql(null);",
											"    pm.expect(response.data.attributes.deeplink_url).to.be.eql(null);",
											"    pm.expect(response.data.attributes.inapp_url).to.be.eql(null);",
											"});",
											"",
											"pm.test(`Verify response`, function () {",
											"    pm.expect(parseInt(response.data.id)).to.be.eql(parseInt(story_id));",
											"    pm.expect(response.data.attributes.name).to.be.eql(`${name} Editado`);",
											"    pm.expect(response.data.attributes.lifetime_minutes).to.be.eql(lifetime_minutes);",
											"    pm.expect(response.data.attributes.start_date).to.be.eql(date_now_utc);",
											"    pm.expect(response.data.attributes.url_multimedia).to.be.eql(url_multimedia);",
											"    pm.expect(response.data.attributes.display_duration).to.be.eql(25);",
											"    pm.expect(response.data.attributes.category).to.be.eql(8);",
											"    pm.expect(response.data.attributes.status).to.be.eql(status_story);",
											"    pm.expect(response.data.attributes.tag).to.be.eql(tag);",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.globals.set(\"lifetime_minutes\", 3001);",
											"pm.globals.set(\"status_story\", 1);",
											"pm.globals.set(\"tag\", \"07caa489a006c6e374acd6ac3bae2e182121\");",
											"pm.globals.unset(\"description\")"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"channel_id\": {{channel_id}},\n    \"store_id\": 63,\n    \"name\": \"{{name}} Editado\",\n    \"lifetime_minutes\": {{lifetime_minutes}},\n    \"type_multimedia\": \"video\",\n    \"display_duration\": 25,\n    \"url_multimedia\": \"{{url_multimedia}}\",\n    \"start_date\": \"{{date_now}}\",\n    \"status\": 1,\n    \"warehouses\": \"[2]\",\n    \"category\": 8,\n    \"tag\": \"{{tag}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://api-ads.internal.squad-{{squad}}.supermercap.com:8080/internal/featured/api/1.0/channel/story/update/{{story_id}}",
									"protocol": "http",
									"host": [
										"api-ads",
										"internal",
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"port": "8080",
									"path": [
										"internal",
										"featured",
										"api",
										"1.0",
										"channel",
										"story",
										"update",
										"{{story_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "External-Storys-Create",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.globals.set(\"warehouse_id\", 2);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const story_id = pm.globals.get(\"story_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const lifetime_minutes = pm.globals.get(\"lifetime_minutes\");",
											"const status = pm.globals.get(\"status_story\");",
											"const deeplink = pm.globals.get(\"deeplink\");",
											"const url_inapp = pm.globals.get(\"url_inapp\");",
											"const tag = pm.globals.get(\"tag\");",
											"const cta = pm.globals.get(\"cta\");",
											"const description = pm.globals.get(\"description\");",
											"",
											"",
											"for(i=0; i <= response.data.length - 1; i++){",
											"    console.log(i)",
											"    if (parseInt(response.data[i].id) === parseInt(story_id)){",
											"",
											"        pm.test(`Verify response inputs null - Category 1`, function () {",
											"            pm.expect(response.data[i].attributes.cta).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.deeplink_url).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.inapp_url).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.description).to.be.eql(null);",
											"        });",
											"        ",
											"        pm.test(`Verify response`, function () {",
											"            pm.expect(parseInt(response.data[i].id)).to.be.eql(parseInt(story_id));",
											"            pm.expect(response.data[i].attributes.name).to.be.eql(`${name} Editado`);",
											"            pm.expect(response.data[i].attributes.lifetime_minutes).to.be.eql(lifetime_minutes);",
											"            pm.expect(response.data[i].attributes.start_date).to.be.eql(date_now_utc);",
											"            pm.expect(response.data[i].attributes.url_multimedia).to.be.eql(url_multimedia);",
											"            pm.expect(response.data[i].attributes.display_duration).to.be.eql(25);",
											"            pm.expect(response.data[i].attributes.category).to.be.eql(\"product_set\");",
											"            pm.expect(response.data[i].attributes.status).to.be.true;",
											"            pm.expect(response.data[i].attributes.tag).to.be.eql(tag);",
											"        });",
											"    }",
											"}",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://squad-{{squad}}.supermercap.com/featured/api/1.0/stores/63/channels/{{channel_id}}/stories?warehouseId={{warehouse_id}}",
									"protocol": "https",
									"host": [
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"path": [
										"featured",
										"api",
										"1.0",
										"stores",
										"63",
										"channels",
										"{{channel_id}}",
										"stories"
									],
									"query": [
										{
											"key": "warehouseId",
											"value": "{{warehouse_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get-Story",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const deeplink = pm.globals.get(\"deeplink\");",
											"const url_inapp = pm.globals.get(\"url_inapp\");",
											"const lifetime_minutes = pm.globals.get(\"lifetime_minutes\");",
											"const status_story = pm.globals.get(\"status_story\");",
											"const tag = pm.globals.get(\"tag\");",
											"const story_id = pm.globals.get(\"story_id\");",
											"pm.globals.set(\"story_id\", response.data.id)",
											"",
											"pm.test(`Verify channel_id ${channel_id}`, function () {",
											"    pm.expect(response.data.attributes.channel_id).to.be.eql(parseInt(channel_id));",
											"    pm.expect(response.data.attributes.store_id).to.be.eql(63);",
											"});",
											"",
											"pm.test(`Verify response inputs null - Category 1`, function () {",
											"    pm.expect(response.data.attributes.description).to.be.eql(null);",
											"    pm.expect(response.data.attributes.cta).to.be.eql(null);",
											"    pm.expect(response.data.attributes.deeplink_url).to.be.eql(null);",
											"    pm.expect(response.data.attributes.inapp_url).to.be.eql(null);",
											"});",
											"",
											"pm.test(`Verify response`, function () {",
											"    pm.expect(parseInt(response.data.id)).to.be.eql(parseInt(story_id));",
											"    pm.expect(response.data.attributes.name).to.be.eql(`${name} Editado`);",
											"    pm.expect(response.data.attributes.lifetime_minutes).to.be.eql(lifetime_minutes);",
											"    pm.expect(response.data.attributes.start_date).to.be.eql(date_now_utc);",
											"    pm.expect(response.data.attributes.url_multimedia).to.be.eql(url_multimedia);",
											"    pm.expect(response.data.attributes.display_duration).to.be.eql(25);",
											"    pm.expect(response.data.attributes.category).to.be.eql(8);",
											"    pm.expect(response.data.attributes.status).to.be.eql(parseInt(status_story));",
											"    pm.expect(response.data.attributes.tag).to.be.eql(tag);",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//Modificamos la variable global a 0 para futura prueba",
											"pm.globals.set(\"status_story\", 0);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://api-ads.internal.squad-{{squad}}.supermercap.com:8080/internal/featured/api/1.0/channel/story/{{story_id}}",
									"protocol": "http",
									"host": [
										"api-ads",
										"internal",
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"port": "8080",
									"path": [
										"internal",
										"featured",
										"api",
										"1.0",
										"channel",
										"story",
										"{{story_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update-Status-Story",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const deeplink = pm.globals.get(\"deeplink\");",
											"const url_inapp = pm.globals.get(\"url_inapp\");",
											"const lifetime_minutes = pm.globals.get(\"lifetime_minutes\");",
											"const status_story = pm.globals.get(\"status_story\");",
											"const tag = pm.globals.get(\"tag\");",
											"const story_id = pm.globals.get(\"story_id\");",
											"pm.globals.set(\"story_id\", response.data.id)",
											"",
											"pm.test(`Verify channel_id ${channel_id}`, function () {",
											"    pm.expect(response.data.attributes.channel_id).to.be.eql(parseInt(channel_id));",
											"    pm.expect(response.data.attributes.store_id).to.be.eql(63);",
											"});",
											"",
											"pm.test(`Verify response inputs null - Category 1`, function () {",
											"    pm.expect(response.data.attributes.description).to.be.eql(null);",
											"    pm.expect(response.data.attributes.cta).to.be.eql(null);",
											"    pm.expect(response.data.attributes.deeplink_url).to.be.eql(null);",
											"    pm.expect(response.data.attributes.inapp_url).to.be.eql(null);",
											"});",
											"",
											"pm.test(`Verify response`, function () {",
											"    pm.expect(parseInt(response.data.id)).to.be.eql(parseInt(story_id));",
											"    pm.expect(response.data.attributes.name).to.be.eql(`${name} Editado`);",
											"    pm.expect(response.data.attributes.lifetime_minutes).to.be.eql(lifetime_minutes);",
											"    pm.expect(response.data.attributes.start_date).to.be.eql(date_now_utc);",
											"    pm.expect(response.data.attributes.url_multimedia).to.be.eql(url_multimedia);",
											"    pm.expect(response.data.attributes.display_duration).to.be.eql(25);",
											"    pm.expect(response.data.attributes.category).to.be.eql(8);",
											"    pm.expect(response.data.attributes.status).to.be.eql(parseInt(status_story));",
											"    pm.expect(response.data.attributes.tag).to.be.eql(tag);",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": {{status_story}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://api-ads.internal.squad-{{squad}}.supermercap.com:8080/internal/featured/api/1.0/channel/story/update-status/{{story_id}}",
									"protocol": "http",
									"host": [
										"api-ads",
										"internal",
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"port": "8080",
									"path": [
										"internal",
										"featured",
										"api",
										"1.0",
										"channel",
										"story",
										"update-status",
										"{{story_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "list-Storys",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const channel_id = pm.globals.get(\"channel_id\");",
											"const name = pm.globals.get(\"name\");",
											"const url_multimedia = pm.globals.get(\"url_multimedia\");",
											"const date_now_utc = pm.globals.get(\"date_now_utc\");",
											"const deeplink = pm.globals.get(\"deeplink\");",
											"const url_inapp = pm.globals.get(\"url_inapp\");",
											"const lifetime_minutes = pm.globals.get(\"lifetime_minutes\");",
											"const status_story = pm.globals.get(\"status_story\");",
											"const tag = pm.globals.get(\"tag\");",
											"const story_id = pm.globals.get(\"story_id\");",
											"",
											"",
											"for(i=0; i <= response.data.length - 1; i++){",
											"    console.log(i)",
											"    if (parseInt(response.data[i].id) === parseInt(story_id)){",
											"        ",
											"        pm.test(`Verify channel_id ${channel_id}`, function () {",
											"            pm.expect(response.data[i].attributes.channel_id).to.be.eql(parseInt(channel_id));",
											"            pm.expect(response.data[i].attributes.store_id).to.be.eql(63);",
											"        });",
											"",
											"        pm.test(`Verify response inputs null - Category 2`, function () {",
											"            pm.expect(response.data[i].attributes.description).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.inapp_url).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.deeplink_url).to.be.eql(null);",
											"            pm.expect(response.data[i].attributes.cta).to.be.eql(null);",
											"        });",
											"        ",
											"        pm.test(`Verify response`, function () {",
											"            pm.expect(parseInt(response.data[i].id)).to.be.eql(parseInt(story_id));",
											"            pm.expect(response.data[i].attributes.name).to.be.eql(`${name} Editado`);",
											"            pm.expect(response.data[i].attributes.lifetime_minutes).to.be.eql(lifetime_minutes);",
											"            pm.expect(response.data[i].attributes.start_date).to.be.eql(date_now_utc);",
											"            pm.expect(response.data[i].attributes.url_multimedia).to.be.eql(url_multimedia);",
											"            pm.expect(response.data[i].attributes.display_duration).to.be.eql(25);",
											"            pm.expect(response.data[i].attributes.category).to.be.eql(8);",
											"            pm.expect(response.data[i].attributes.status).to.be.eql(parseInt(status_story));",
											"            pm.expect(response.data[i].attributes.tag).to.be.eql(tag);",
											"        });",
											"    }",
											"}",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://api-ads.internal.squad-{{squad}}.supermercap.com:8080/internal/featured/api/1.0/channel/story/list?channel_id={{channel_id}}",
									"protocol": "http",
									"host": [
										"api-ads",
										"internal",
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"port": "8080",
									"path": [
										"internal",
										"featured",
										"api",
										"1.0",
										"channel",
										"story",
										"list"
									],
									"query": [
										{
											"key": "channel_id",
											"value": "{{channel_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "External-Storys-inactive",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.globals.set(\"warehouse_id\", 2);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"const story_id = pm.globals.get(\"story_id\");",
											"const response_280 = {",
											"    \"errors\": [",
											"        {",
											"            \"status\": \"280\",",
											"            \"title\": \"Story error\",",
											"            \"detail\": \"Historia no encontrada.\",",
											"            \"code\": \"CHANNEL_STORY_NOT_FOUND\"",
											"        }",
											"    ]",
											"}",
											"",
											"if (pm.response.code === 200){",
											"    pm.test(`Verify story_id not return in response - inactive`, function () {",
											"        const story_ids = _.map(response.data, function(story_id){",
											"            return story_id.id;",
											"        })",
											"        pm.expect(story_ids.includes(story_id)).to.be.false;",
											"    });",
											"}",
											"",
											"if (pm.response.code === 280){",
											"    pm.test(`Verify response code 280`, function () {",
											"        pm.expect(response).to.be.eql(response_280);",
											"    });",
											"}",
											"",
											"//Clear globals variable",
											"pm.globals.unset(\"channel_id\");",
											"pm.globals.unset(\"date_now\");",
											"pm.globals.unset(\"date_now_utc\");",
											"pm.globals.unset(\"deeplink\");",
											"pm.globals.unset(\"name\");",
											"pm.globals.unset(\"url_multimedia\");",
											"pm.globals.unset(\"story_id\");",
											"pm.globals.unset(\"lifetime_minutes\");",
											"pm.globals.unset(\"status_story\");",
											"pm.globals.unset(\"warehouse_id\");",
											"pm.globals.unset(\"cta\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://squad-{{squad}}.supermercap.com/featured/api/1.0/stores/63/channels/{{channel_id}}/stories?warehouseId={{warehouse_id}}",
									"protocol": "https",
									"host": [
										"squad-{{squad}}",
										"supermercap",
										"com"
									],
									"path": [
										"featured",
										"api",
										"1.0",
										"stores",
										"63",
										"channels",
										"{{channel_id}}",
										"stories"
									],
									"query": [
										{
											"key": "warehouseId",
											"value": "{{warehouse_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Api Prime",
			"item": [
				{
					"name": "api",
					"item": [
						{
							"name": "3.2",
							"item": [
								{
									"name": "prime",
									"item": [
										{
											"name": "service-subscription",
											"item": [
												{
													"name": "400",
													"item": [
														{
															"name": "no-data-city",
															"event": [
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"pm.collectionVariables.set(\"url-web\", \"https://squad-227.supermercap.com\");"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"var response = pm.response.json();",
																			"",
																			"expectedResponse = `{\"errors\":[{\"status\":\"400\",\"title\":\"Error in Field\",\"detail\":\"El campo city es obligatorio.\",\"code\":\"FORM_ERROR\",\"source\":{\"parameter\":\"city\"}},{\"status\":\"400\",\"title\":\"Error in Field\",\"detail\":\"El campo city.code es obligatorio.\",\"code\":\"FORM_ERROR\",\"source\":{\"parameter\":\"city.code\"}},{\"status\":\"400\",\"title\":\"Error in Field\",\"detail\":\"El campo city.name es obligatorio.\",\"code\":\"FORM_ERROR\",\"source\":{\"parameter\":\"city.name\"}},{\"status\":\"400\",\"title\":\"Error in Field\",\"detail\":\"El campo city.timezone es obligatorio.\",\"code\":\"FORM_ERROR\",\"source\":{\"parameter\":\"city.timezone\"}}]}`",
																			"",
																			"pm.test(\"Response time is less than 500ms\", function () {",
																			"    pm.expect(pm.response.responseTime).to.be.below(500);",
																			"});",
																			"",
																			"pm.test(\"Status code is 400\", function () {",
																			"    pm.response.to.have.status(400);",
																			"});",
																			"",
																			"pm.test(\"Body matches string\", function () {",
																			"    pm.expect(expectedResponse).to.include(pm.response.text());",
																			"});",
																			"",
																			"pm.test(\"Body is correct\", function () {",
																			"    pm.response.to.have.body(expectedResponse);",
																			"});",
																			"",
																			"pm.test(\"Validate array city exception\", function () {",
																			"    pm.expect(\"city\").to.eql(response.errors[0].source.parameter);",
																			"    pm.expect(\"city.code\").to.eql(response.errors[1].source.parameter);",
																			"    pm.expect(\"city.name\").to.eql(response.errors[2].source.parameter);",
																			"    pm.expect(\"city.timezone\").to.eql(response.errors[3].source.parameter);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY0NzUzNjI4MywiZXhwIjoxNjUxMTY1MDgzLCJzdWIiOjE5OTcwOTksImZpcnN0X25hbWUiOiJOb3JiZXJ0IiwibGFzdF9uYW1lIjoiRm9yZXJvIiwiZW1haWwiOiJuZm9yZXJvQG1lcnF1ZW8uY29tIiwicGhvbmUiOiIzMTA4ODU0NDcyIiwicGhvbmVfdmFsaWRhdGVkX2RhdGUiOnsiZGF0ZSI6IjIwMjItMDMtMTAgMTI6MzA6MTAuMDAwMDAwIiwidGltZXpvbmVfdHlwZSI6MywidGltZXpvbmUiOiJBbWVyaWNhXC9Cb2dvdGEifSwic3RhdHVzIjp0cnVlfQ.o9H38SgfZfSZ3cBT1k4rW1my6TwCxwarQPBVsbIFe6s",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "X-Merqueo-Agent",
																		"value": "Web",
																		"type": "text"
																	},
																	{
																		"key": "X-Merqueo-Device-Id",
																		"value": "sdfdasfdsfsdfewf",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"serviceId\": \"623233d3f2013a6a3ce9f611\",\n    \"countryCode\": \"co\",\n    \"plan\": {\n        \"id\": \"60140d4ca5e12d4b0a96fcd8\",\n        \"price\": \"59700\",\n        \"promotionalPrice\": \"45000\",\n        \"period\": 3,\n        \"benefits\": [\n            \"free_delivery\",\n            \"cashback\"\n        ]\n    },\n    \"payment\": {\n        \"creditCard\": {\n            \"id\": 478320,\n            \"franchise\": \"visa\",\n            \"lastFour\": 1111,\n            \"installments\": 1,\n            \"type\": \"Credit\",\n            \"cvv\": 233\n        }\n    },\n    \"address\": {\n        \"address\": \"Calle 97a # 9a-34\",\n        \"postalCode\": \"110011\"\n    },\n    \"user\": {\n        \"identityType\": \"cc\",\n        \"identityNumber\": \"1034083636632\",\n        \"phonePrefix\": \"57\",\n        \"phoneNumber\": \"3208854472\"\n    }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url-web}}/api/3.2/prime/service-subscription",
																	"host": [
																		"{{url-web}}"
																	],
																	"path": [
																		"api",
																		"3.2",
																		"prime",
																		"service-subscription"
																	]
																}
															},
															"response": []
														},
														{
															"name": "no-data-plan",
															"event": [
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"pm.collectionVariables.set(\"url-web\", \"https://squad-227.supermercap.com\");"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"var response = pm.response.json();",
																			"",
																			"expectedResponse = `{\"errors\":[{\"status\":\"400\",\"title\":\"Error in Field\",\"detail\":\"El campo plan es obligatorio.\",\"code\":\"FORM_ERROR\",\"source\":{\"parameter\":\"plan\"}},{\"status\":\"400\",\"title\":\"Error in Field\",\"detail\":\"El campo plan.id es obligatorio.\",\"code\":\"FORM_ERROR\",\"source\":{\"parameter\":\"plan.id\"}},{\"status\":\"400\",\"title\":\"Error in Field\",\"detail\":\"El campo plan.price es obligatorio.\",\"code\":\"FORM_ERROR\",\"source\":{\"parameter\":\"plan.price\"}},{\"status\":\"400\",\"title\":\"Error in Field\",\"detail\":\"El campo plan.period es obligatorio.\",\"code\":\"FORM_ERROR\",\"source\":{\"parameter\":\"plan.period\"}},{\"status\":\"400\",\"title\":\"Error in Field\",\"detail\":\"El campo plan.benefits es obligatorio.\",\"code\":\"FORM_ERROR\",\"source\":{\"parameter\":\"plan.benefits\"}}]}`",
																			"",
																			"pm.test(\"Response time is less than 500ms\", function () {",
																			"    pm.expect(pm.response.responseTime).to.be.below(500);",
																			"});",
																			"",
																			"pm.test(\"Status code is 400\", function () {",
																			"    pm.response.to.have.status(400);",
																			"});",
																			"",
																			"pm.test(\"Body matches string\", function () {",
																			"    pm.expect(expectedResponse).to.include(pm.response.text());",
																			"});",
																			"",
																			"pm.test(\"Body is correct\", function () {",
																			"    pm.response.to.have.body(expectedResponse);",
																			"});",
																			"",
																			"pm.test(\"Validate array plan exception\", function () {",
																			"    pm.expect(\"plan\").to.eql(response.errors[0].source.parameter);",
																			"    pm.expect(\"plan.id\").to.eql(response.errors[1].source.parameter);",
																			"    pm.expect(\"plan.price\").to.eql(response.errors[2].source.parameter);",
																			"    pm.expect(\"plan.period\").to.eql(response.errors[3].source.parameter);",
																			"    pm.expect(\"plan.benefits\").to.eql(response.errors[4].source.parameter); ",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY0NzUzNjI4MywiZXhwIjoxNjUxMTY1MDgzLCJzdWIiOjE5OTcwOTksImZpcnN0X25hbWUiOiJOb3JiZXJ0IiwibGFzdF9uYW1lIjoiRm9yZXJvIiwiZW1haWwiOiJuZm9yZXJvQG1lcnF1ZW8uY29tIiwicGhvbmUiOiIzMTA4ODU0NDcyIiwicGhvbmVfdmFsaWRhdGVkX2RhdGUiOnsiZGF0ZSI6IjIwMjItMDMtMTAgMTI6MzA6MTAuMDAwMDAwIiwidGltZXpvbmVfdHlwZSI6MywidGltZXpvbmUiOiJBbWVyaWNhXC9Cb2dvdGEifSwic3RhdHVzIjp0cnVlfQ.o9H38SgfZfSZ3cBT1k4rW1my6TwCxwarQPBVsbIFe6s",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "X-Merqueo-Agent",
																		"value": "Web",
																		"type": "text"
																	},
																	{
																		"key": "X-Merqueo-Device-Id",
																		"value": "sdfdasfdsfsdfewf",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"serviceId\": \"623233d3f2013a6a3ce9f611\",\n    \"countryCode\": \"co\",\n    \"city\": {\n        \"code\": \"110010\",\n        \"name\": \"Bogota\",\n        \"timezone\": \"America/Bogota\"\n    },\n    \"payment\": {\n        \"creditCard\": {\n            \"id\": 478320,\n            \"franchise\": \"visa\",\n            \"lastFour\": 1111,\n            \"installments\": 1,\n            \"type\": \"Credit\",\n            \"cvv\": 233\n        }\n    },\n    \"address\": {\n        \"address\": \"Calle 97a # 9a-34\",\n        \"postalCode\": \"110011\"\n    },\n    \"user\": {\n        \"identityType\": \"cc\",\n        \"identityNumber\": \"1034083636632\",\n        \"phonePrefix\": \"57\",\n        \"phoneNumber\": \"3208854472\"\n    }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url-web}}/api/3.2/prime/service-subscription",
																	"host": [
																		"{{url-web}}"
																	],
																	"path": [
																		"api",
																		"3.2",
																		"prime",
																		"service-subscription"
																	]
																}
															},
															"response": []
														},
														{
															"name": "no-data-payment",
															"event": [
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"pm.collectionVariables.set(\"url-web\", \"https://squad-227.supermercap.com\");"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"var response = pm.response.json();",
																			"",
																			"expectedResponse = `{\"errors\":[{\"status\":\"400\",\"title\":\"Error in Field\",\"detail\":\"El campo payment es obligatorio.\",\"code\":\"FORM_ERROR\",\"source\":{\"parameter\":\"payment\"}},{\"status\":\"400\",\"title\":\"Error in Field\",\"detail\":\"El campo payment.credit card es obligatorio.\",\"code\":\"FORM_ERROR\",\"source\":{\"parameter\":\"payment.creditCard\"}},{\"status\":\"400\",\"title\":\"Error in Field\",\"detail\":\"El campo payment.credit card.id es obligatorio.\",\"code\":\"FORM_ERROR\",\"source\":{\"parameter\":\"payment.creditCard.id\"}},{\"status\":\"400\",\"title\":\"Error in Field\",\"detail\":\"El campo payment.credit card.franchise es obligatorio.\",\"code\":\"FORM_ERROR\",\"source\":{\"parameter\":\"payment.creditCard.franchise\"}},{\"status\":\"400\",\"title\":\"Error in Field\",\"detail\":\"El campo payment.credit card.last four es obligatorio.\",\"code\":\"FORM_ERROR\",\"source\":{\"parameter\":\"payment.creditCard.lastFour\"}},{\"status\":\"400\",\"title\":\"Error in Field\",\"detail\":\"El campo payment.credit card.installments es obligatorio.\",\"code\":\"FORM_ERROR\",\"source\":{\"parameter\":\"payment.creditCard.installments\"}},{\"status\":\"400\",\"title\":\"Error in Field\",\"detail\":\"El campo payment.credit card.type es obligatorio.\",\"code\":\"FORM_ERROR\",\"source\":{\"parameter\":\"payment.creditCard.type\"}}]}`",
																			"",
																			"pm.test(\"Response time is less than 500ms\", function () {",
																			"    pm.expect(pm.response.responseTime).to.be.below(500);",
																			"});",
																			"",
																			"pm.test(\"Status code is 400\", function () {",
																			"    pm.response.to.have.status(400);",
																			"});",
																			"",
																			"pm.test(\"Body matches string\", function () {",
																			"    pm.expect(expectedResponse).to.include(pm.response.text());",
																			"});",
																			"",
																			"pm.test(\"Body is correct\", function () {",
																			"    pm.response.to.have.body(expectedResponse);",
																			"});",
																			"",
																			"pm.test(\"Validate array payment exception\", function () {",
																			"    pm.expect(\"payment\").to.eql(response.errors[0].source.parameter);",
																			"    pm.expect(\"payment.creditCard\").to.eql(response.errors[1].source.parameter);",
																			"    pm.expect(\"payment.creditCard.id\").to.eql(response.errors[2].source.parameter);",
																			"    pm.expect(\"payment.creditCard.franchise\").to.eql(response.errors[3].source.parameter);",
																			"    pm.expect(\"payment.creditCard.lastFour\").to.eql(response.errors[4].source.parameter); ",
																			"    pm.expect(\"payment.creditCard.installments\").to.eql(response.errors[5].source.parameter); ",
																			"    pm.expect(\"payment.creditCard.type\").to.eql(response.errors[6].source.parameter); ",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY0NzUzNjI4MywiZXhwIjoxNjUxMTY1MDgzLCJzdWIiOjE5OTcwOTksImZpcnN0X25hbWUiOiJOb3JiZXJ0IiwibGFzdF9uYW1lIjoiRm9yZXJvIiwiZW1haWwiOiJuZm9yZXJvQG1lcnF1ZW8uY29tIiwicGhvbmUiOiIzMTA4ODU0NDcyIiwicGhvbmVfdmFsaWRhdGVkX2RhdGUiOnsiZGF0ZSI6IjIwMjItMDMtMTAgMTI6MzA6MTAuMDAwMDAwIiwidGltZXpvbmVfdHlwZSI6MywidGltZXpvbmUiOiJBbWVyaWNhXC9Cb2dvdGEifSwic3RhdHVzIjp0cnVlfQ.o9H38SgfZfSZ3cBT1k4rW1my6TwCxwarQPBVsbIFe6s",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "X-Merqueo-Agent",
																		"value": "Web",
																		"type": "text"
																	},
																	{
																		"key": "X-Merqueo-Device-Id",
																		"value": "sdfdasfdsfsdfewf",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"serviceId\": \"623233d3f2013a6a3ce9f611\",\n    \"countryCode\": \"co\",\n    \"city\": {\n        \"code\": \"110010\",\n        \"name\": \"Bogota\",\n        \"timezone\": \"America/Bogota\"\n    },\n    \"plan\": {\n        \"id\": \"60140d4ca5e12d4b0a96fcd8\",\n        \"price\": \"59700\",\n        \"promotionalPrice\": \"45000\",\n        \"period\": 3,\n        \"benefits\": [\n            \"free_delivery\",\n            \"cashback\"\n        ]\n    },\n    \"address\": {\n        \"address\": \"Calle 97a # 9a-34\",\n        \"postalCode\": \"110011\"\n    },\n    \"user\": {\n        \"identityType\": \"cc\",\n        \"identityNumber\": \"1034083636632\",\n        \"phonePrefix\": \"57\",\n        \"phoneNumber\": \"3208854472\"\n    }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url-web}}/api/3.2/prime/service-subscription",
																	"host": [
																		"{{url-web}}"
																	],
																	"path": [
																		"api",
																		"3.2",
																		"prime",
																		"service-subscription"
																	]
																}
															},
															"response": []
														},
														{
															"name": "no-data-address",
															"event": [
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"pm.collectionVariables.set(\"url-web\", \"https://squad-227.supermercap.com\");"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"var response = pm.response.json();",
																			"",
																			"expectedResponse = `{\"errors\":[{\"status\":\"400\",\"title\":\"Error in Field\",\"detail\":\"No se ingres\\u00f3 el par\\u00e1metro de la direcci\\u00f3n\",\"code\":\"FORM_ERROR\",\"source\":{\"parameter\":\"address\"}},{\"status\":\"400\",\"title\":\"Error in Field\",\"detail\":\"El campo address.address es obligatorio.\",\"code\":\"FORM_ERROR\",\"source\":{\"parameter\":\"address.address\"}},{\"status\":\"400\",\"title\":\"Error in Field\",\"detail\":\"El campo address.postal code es obligatorio.\",\"code\":\"FORM_ERROR\",\"source\":{\"parameter\":\"address.postalCode\"}}]}`",
																			"",
																			"pm.test(\"Response time is less than 500ms\", function () {",
																			"    pm.expect(pm.response.responseTime).to.be.below(500);",
																			"});",
																			"",
																			"pm.test(\"Status code is 400\", function () {",
																			"    pm.response.to.have.status(400);",
																			"});",
																			"",
																			"pm.test(\"Validate array address exception\", function () {",
																			"    pm.expect(\"address\").to.eql(response.errors[0].source.parameter);",
																			"    pm.expect(\"address.address\").to.eql(response.errors[1].source.parameter);",
																			"    pm.expect(\"address.postalCode\").to.eql(response.errors[2].source.parameter);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY0NzUzNjI4MywiZXhwIjoxNjUxMTY1MDgzLCJzdWIiOjE5OTcwOTksImZpcnN0X25hbWUiOiJOb3JiZXJ0IiwibGFzdF9uYW1lIjoiRm9yZXJvIiwiZW1haWwiOiJuZm9yZXJvQG1lcnF1ZW8uY29tIiwicGhvbmUiOiIzMTA4ODU0NDcyIiwicGhvbmVfdmFsaWRhdGVkX2RhdGUiOnsiZGF0ZSI6IjIwMjItMDMtMTAgMTI6MzA6MTAuMDAwMDAwIiwidGltZXpvbmVfdHlwZSI6MywidGltZXpvbmUiOiJBbWVyaWNhXC9Cb2dvdGEifSwic3RhdHVzIjp0cnVlfQ.o9H38SgfZfSZ3cBT1k4rW1my6TwCxwarQPBVsbIFe6s",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "X-Merqueo-Agent",
																		"value": "Web",
																		"type": "text"
																	},
																	{
																		"key": "X-Merqueo-Device-Id",
																		"value": "sdfdasfdsfsdfewf",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"serviceId\": \"623233d3f2013a6a3ce9f611\",\n    \"countryCode\": \"co\",\n    \"city\": {\n        \"code\": \"110010\",\n        \"name\": \"Bogota\",\n        \"timezone\": \"America/Bogota\"\n    },\n    \"plan\": {\n        \"id\": \"60140d4ca5e12d4b0a96fcd8\",\n        \"price\": \"59700\",\n        \"promotionalPrice\": \"45000\",\n        \"period\": 3,\n        \"benefits\": [\n            \"free_delivery\",\n            \"cashback\"\n        ]\n    },\n    \"payment\": {\n        \"creditCard\": {\n            \"id\": 478320,\n            \"franchise\": \"visa\",\n            \"lastFour\": 1111,\n            \"installments\": 1,\n            \"type\": \"Credit\",\n            \"cvv\": 233\n        }\n    },\n    \"user\": {\n        \"identityType\": \"cc\",\n        \"identityNumber\": \"1034083636632\",\n        \"phonePrefix\": \"57\",\n        \"phoneNumber\": \"3208854472\"\n    }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url-web}}/api/3.2/prime/service-subscription",
																	"host": [
																		"{{url-web}}"
																	],
																	"path": [
																		"api",
																		"3.2",
																		"prime",
																		"service-subscription"
																	]
																}
															},
															"response": []
														},
														{
															"name": "no-data-user",
															"event": [
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"pm.collectionVariables.set(\"url-web\", \"https://squad-227.supermercap.com\");",
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"var response = pm.response.json();",
																			"",
																			"expectedResponse = `{\"errors\":[{\"status\":\"400\",\"title\":\"Error in Field\",\"detail\":\"El campo user es obligatorio.\",\"code\":\"FORM_ERROR\",\"source\":{\"parameter\":\"user\"}},{\"status\":\"400\",\"title\":\"Error in Field\",\"detail\":\"El campo user.identity type es obligatorio.\",\"code\":\"FORM_ERROR\",\"source\":{\"parameter\":\"user.identityType\"}},{\"status\":\"400\",\"title\":\"Error in Field\",\"detail\":\"El campo user.identity number es obligatorio.\",\"code\":\"FORM_ERROR\",\"source\":{\"parameter\":\"user.identityNumber\"}},{\"status\":\"400\",\"title\":\"Error in Field\",\"detail\":\"El campo user.phone prefix es obligatorio.\",\"code\":\"FORM_ERROR\",\"source\":{\"parameter\":\"user.phonePrefix\"}},{\"status\":\"400\",\"title\":\"Error in Field\",\"detail\":\"El campo user.phone number es obligatorio.\",\"code\":\"FORM_ERROR\",\"source\":{\"parameter\":\"user.phoneNumber\"}}]}`",
																			"",
																			"pm.test(\"Response time is less than 500ms\", function () {",
																			"    pm.expect(pm.response.responseTime).to.be.below(500);",
																			"});",
																			"",
																			"pm.test(\"Status code is 400\", function () {",
																			"    pm.response.to.have.status(400);",
																			"});",
																			"",
																			"pm.test(\"Body matches string\", function () {",
																			"    pm.expect(expectedResponse).to.include(pm.response.text());",
																			"});",
																			"",
																			"pm.test(\"Body is correct\", function () {",
																			"    pm.response.to.have.body(expectedResponse);",
																			"});",
																			"",
																			"pm.test(\"Validate array user exception\", function () {",
																			"    pm.expect(\"user\").to.eql(response.errors[0].source.parameter);",
																			"    pm.expect(\"user.identityType\").to.eql(response.errors[1].source.parameter);",
																			"    pm.expect(\"user.identityNumber\").to.eql(response.errors[2].source.parameter);",
																			"    pm.expect(\"user.phonePrefix\").to.eql(response.errors[3].source.parameter);",
																			"    pm.expect(\"user.phoneNumber\").to.eql(response.errors[4].source.parameter);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY0NzUzNjI4MywiZXhwIjoxNjUxMTY1MDgzLCJzdWIiOjE5OTcwOTksImZpcnN0X25hbWUiOiJOb3JiZXJ0IiwibGFzdF9uYW1lIjoiRm9yZXJvIiwiZW1haWwiOiJuZm9yZXJvQG1lcnF1ZW8uY29tIiwicGhvbmUiOiIzMTA4ODU0NDcyIiwicGhvbmVfdmFsaWRhdGVkX2RhdGUiOnsiZGF0ZSI6IjIwMjItMDMtMTAgMTI6MzA6MTAuMDAwMDAwIiwidGltZXpvbmVfdHlwZSI6MywidGltZXpvbmUiOiJBbWVyaWNhXC9Cb2dvdGEifSwic3RhdHVzIjp0cnVlfQ.o9H38SgfZfSZ3cBT1k4rW1my6TwCxwarQPBVsbIFe6s",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "X-Merqueo-Agent",
																		"value": "Web",
																		"type": "text"
																	},
																	{
																		"key": "X-Merqueo-Device-Id",
																		"value": "sdfdasfdsfsdfewf",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"serviceId\": \"623233d3f2013a6a3ce9f611\",\n    \"countryCode\": \"co\",\n    \"city\": {\n        \"code\": \"110010\",\n        \"name\": \"Bogota\",\n        \"timezone\": \"America/Bogota\"\n    },\n    \"plan\": {\n        \"id\": \"60140d4ca5e12d4b0a96fcd8\",\n        \"price\": \"59700\",\n        \"promotionalPrice\": \"45000\",\n        \"period\": 3,\n        \"benefits\": [\n            \"free_delivery\",\n            \"cashback\"\n        ]\n    },\n    \"payment\": {\n        \"creditCard\": {\n            \"id\": 478320,\n            \"franchise\": \"visa\",\n            \"lastFour\": 1111,\n            \"installments\": 1,\n            \"type\": \"Credit\",\n            \"cvv\": 233\n        }\n    },\n    \"address\": {\n        \"address\": \"Calle 97a # 9a-34\",\n        \"postalCode\": \"110011\"\n    }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url-web}}/api/3.2/prime/service-subscription",
																	"host": [
																		"{{url-web}}"
																	],
																	"path": [
																		"api",
																		"3.2",
																		"prime",
																		"service-subscription"
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "200",
													"item": [
														{
															"name": "status 200 co true",
															"event": [
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"pm.collectionVariables.set(\"url-web\", \"https://squad-227.supermercap.com\");"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"var response = pm.response.json();",
																			"",
																			"expectedResponse = `{\"data\":null}`",
																			"",
																			"pm.test(\"Response time is less than 700ms\", function () {",
																			"    pm.expect(pm.response.responseTime).to.be.below(700);",
																			"});",
																			"",
																			"pm.test(\"Status code is 200\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"pm.test(\"Body matches string\", function () {",
																			"    pm.expect(expectedResponse).to.include(pm.response.text());",
																			"});",
																			"",
																			"pm.test(\"Body is correct\", function () {",
																			"    pm.response.to.have.body(expectedResponse);",
																			"});",
																			"",
																			"pm.test(\"Validate array city exception\", function () {",
																			"    pm.expect(null).to.eql(response.data);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{BearerTokenCo}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "X-Merqueo-Agent",
																		"value": "Web",
																		"type": "text"
																	},
																	{
																		"key": "X-Merqueo-Device-Id",
																		"value": "sdfdasfdsfsdfewf",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"serviceId\": \"623233d3f2013a6a3ce9f611\",\n    \"countryCode\": \"co\",\n    \"city\": {\n        \"code\": \"110010\",\n        \"name\": \"Bogota\",\n        \"timezone\": \"America/Bogota\"\n    },\n    \"plan\": {\n        \"id\": \"60140d4ca5e12d4b0a96fc16\",\n        \"name\":\"Plan 1 mes\",\n        \"price\": \"19900\",\n        \"promotionalPrice\": \"15900\",\n        \"period\": 1,\n        \"benefits\": [\n            \"free_delivery\",\n            \"cashback\"\n        ]\n    },\n    \"payment\": {\n        \"creditCard\": {\n            \"id\": 478320,\n            \"franchise\": \"visa\",\n            \"lastFour\": 1111,\n            \"installments\": 1,\n            \"type\": \"Credit\",\n            \"cvv\": 255\n        }\n    },\n    \"address\": {\n        \"address\": \"Calle 97a # 9a-34\",\n        \"postalCode\": \"110011\"\n    },\n    \"user\": {\n        \"identityType\": \"cc\",\n        \"identityNumber\": \"1034083636632\",\n        \"phonePrefix\": \"57\",\n        \"phoneNumber\": \"3108854472\"\n    }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url-web}}/api/3.2/prime/service-subscription",
																	"host": [
																		"{{url-web}}"
																	],
																	"path": [
																		"api",
																		"3.2",
																		"prime",
																		"service-subscription"
																	]
																}
															},
															"response": []
														},
														{
															"name": "status 200 co false",
															"event": [
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"pm.collectionVariables.set(\"url-web\", \"https://squad-220.supermercap.com\");"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"var response = pm.response.json();",
																			"",
																			"expectedResponse = `{\"data\":null}`",
																			"",
																			"pm.test(\"Response time is less than 700ms\", function () {",
																			"    pm.expect(pm.response.responseTime).to.be.below(700);",
																			"});",
																			"",
																			"pm.test(\"Status code is 200\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"pm.test(\"Body matches string\", function () {",
																			"    pm.expect(expectedResponse).to.include(pm.response.text());",
																			"});",
																			"",
																			"pm.test(\"Body is correct\", function () {",
																			"    pm.response.to.have.body(expectedResponse);",
																			"});",
																			"",
																			"pm.test(\"Validate array city exception\", function () {",
																			"    pm.expect(null).to.eql(response.data);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{BearerTokenCo}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "X-Merqueo-Agent",
																		"value": "Web",
																		"type": "text"
																	},
																	{
																		"key": "X-Merqueo-Device-Id",
																		"value": "sdfdasfdsfsdfewf",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"serviceId\": \"623233d3f2013a6a3ce9f611\",\n    \"countryCode\": \"co\",\n    \"city\": {\n        \"code\": \"110010\",\n        \"name\": \"Bogota\",\n        \"timezone\": \"America/Bogota\"\n    },\n    \"plan\": {\n        \"id\": \"60140d4ca5e12d4b0a96fcd1\",\n        \"name\":\"Plan 3 mes\",\n        \"price\": \"59700\",\n        \"promotionalPrice\": \"45000\",\n        \"period\": 3,\n        \"benefits\": [\n            \"free_delivery\",\n            \"cashback\"\n        ]\n    },\n    \"payment\": {\n        \"creditCard\": {\n            \"id\": 478320,\n            \"franchise\": \"visa\",\n            \"lastFour\": 1111,\n            \"installments\": 1,\n            \"type\": \"Credit\",\n            \"cvv\": 255\n        }\n    },\n    \"address\": {\n        \"address\": \"Calle 97a # 9a-34\",\n        \"postalCode\": \"110011\"\n    },\n    \"user\": {\n        \"identityType\": \"cc\",\n        \"identityNumber\": \"1034083636632\",\n        \"phonePrefix\": \"57\",\n        \"phoneNumber\": \"3108854472\"\n    }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url-web}}/api/3.2/prime/service-subscription",
																	"host": [
																		"{{url-web}}"
																	],
																	"path": [
																		"api",
																		"3.2",
																		"prime",
																		"service-subscription"
																	]
																}
															},
															"response": []
														},
														{
															"name": "status 200 mx",
															"event": [
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"pm.collectionVariables.set(\"url-web\", \"https://squad-227.supermercap.com\");"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"var response = pm.response.json();",
																			"",
																			"expectedResponse = `{\"data\":null}`",
																			"",
																			"pm.test(\"Response time is less than 700ms\", function () {",
																			"    pm.expect(pm.response.responseTime).to.be.below(700);",
																			"});",
																			"",
																			"pm.test(\"Status code is 200\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"pm.test(\"Body matches string\", function () {",
																			"    pm.expect(expectedResponse).to.include(pm.response.text());",
																			"});",
																			"",
																			"pm.test(\"Body is correct\", function () {",
																			"    pm.response.to.have.body(expectedResponse);",
																			"});",
																			"",
																			"pm.test(\"Validate array city exception\", function () {",
																			"    pm.expect(null).to.eql(response.data);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{BearerTokenMx}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "X-Merqueo-Agent",
																		"value": "Web",
																		"type": "text"
																	},
																	{
																		"key": "X-Merqueo-Device-Id",
																		"value": "sdfdasfdsfsdfewf",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"serviceId\": \"623233d3f2013a6a3ce9f612\",\n    \"countryCode\": \"mx\",\n    \"city\": {\n        \"code\": \"110010\",\n        \"name\": \"Bogota\",\n        \"timezone\": \"America/Bogota\"\n    },\n    \"plan\": {\n        \"id\": \"60140d4ca5e12d4b0a96fcd9\",\n        \"name\": \"Suscripción 3 meses TRIAL MX\",\n        \"price\": \"59.15\",\n        \"promotionalPrice\": \"45.15\",\n        \"period\": 3,\n        \"benefits\": [\n            \"free_delivery\",\n            \"cashback\"\n        ]\n    },\n    \"payment\": {\n        \"creditCard\": {\n            \"id\": 478357,\n            \"franchise\": \"VISA\",\n            \"lastFour\": 1111,\n            \"installments\": 1,\n            \"type\": \"Credit\",\n            \"cvv\": 582\n        }\n    },\n    \"address\": {\n        \"address\": \"Calle 97a # 9a-34\",\n        \"postalCode\": \"110011\"\n    },\n    \"user\": {\n        \"identityType\": \"rfc\",\n        \"identityNumber\": \"SASS900402HC4\",\n        \"phonePrefix\": \"52\",\n        \"phoneNumber\": \"3208854472\"\n    }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url-web}}/api/3.2/prime/service-subscription",
																	"host": [
																		"{{url-web}}"
																	],
																	"path": [
																		"api",
																		"3.2",
																		"prime",
																		"service-subscription"
																	]
																}
															},
															"response": []
														},
														{
															"name": "status 200 br",
															"event": [
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"pm.collectionVariables.set(\"url-web\", \"https://squad-227.supermercap.com\");"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"var response = pm.response.json();",
																			"",
																			"expectedResponse = `{\"data\":null}`",
																			"",
																			"pm.test(\"Response time is less than 700ms\", function () {",
																			"    pm.expect(pm.response.responseTime).to.be.below(700);",
																			"});",
																			"",
																			"pm.test(\"Status code is 200\", function () {",
																			"    pm.response.to.have.status(200);",
																			"});",
																			"",
																			"pm.test(\"Body matches string\", function () {",
																			"    pm.expect(expectedResponse).to.include(pm.response.text());",
																			"});",
																			"",
																			"pm.test(\"Body is correct\", function () {",
																			"    pm.response.to.have.body(expectedResponse);",
																			"});",
																			"",
																			"pm.test(\"Validate array city exception\", function () {",
																			"    pm.expect(null).to.eql(response.data);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{BearerTokenBR}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "X-Merqueo-Agent",
																		"value": "Web",
																		"type": "text"
																	},
																	{
																		"key": "X-Merqueo-Device-Id",
																		"value": "sdfdasfdsfsdfewf",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"serviceId\": \"623233d3f2013a6a3ce9f613\",\n    \"countryCode\": \"br\",\n    \"city\": {\n        \"code\": \"110010\",\n        \"name\": \"Bogota\",\n        \"timezone\": \"America/Bogota\"\n    },\n    \"plan\": {\n        \"id\": \"60140d4ca5e12d4b0a96fcd6\",\n        \"price\": \"30\",\n        \"promotionalPrice\": \"25\",\n        \"period\": 1,\n        \"benefits\": [\n            \"free_delivery\",\n            \"cashback\"\n        ]\n    },\n    \"payment\": {\n        \"creditCard\": {\n            \"id\": 478339,\n            \"franchise\": \"visa\",\n            \"lastFour\": 1111,\n            \"installments\": 1,\n            \"type\": \"Credit\",\n            \"cvv\": 582\n        }\n    },\n    \"address\": {\n        \"address\": \"Calle 97a # 9a-34\",\n        \"postalCode\": \"110011\"\n    },\n    \"user\": {\n        \"identityType\": \"cpf\",\n        \"identityNumber\": \"43266616901\",\n        \"phonePrefix\": \"55\",\n        \"phoneNumber\": \"3308854472\"\n    }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url-web}}/api/3.2/prime/service-subscription",
																	"host": [
																		"{{url-web}}"
																	],
																	"path": [
																		"api",
																		"3.2",
																		"prime",
																		"service-subscription"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Simon",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Merqueo-Agent",
																		"value": "Web"
																	},
																	{
																		"key": "X-Merqueo-Device-Id",
																		"value": "sdfdasfdsfsdfewf"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY1MTI1NDE3NiwiZXhwIjoxNjU0ODgyOTc2LCJzdWIiOjE5OTcxMDYsImZpcnN0X25hbWUiOiJTaW1vbiBBbGJlcnRvIiwibGFzdF9uYW1lIjoiTG9wZXogSGlndWVyYSIsImVtYWlsIjoic2xvcGV6QG1lcnF1ZW8uY29tIiwicGhvbmUiOiIzMTI0ODQwNzE4IiwicGhvbmVfdmFsaWRhdGVkX2RhdGUiOnsiZGF0ZSI6IjIwMjItMDQtMTggMTY6NDc6MzMuMDAwMDAwIiwidGltZXpvbmVfdHlwZSI6MywidGltZXpvbmUiOiJBbWVyaWNhXC9Cb2dvdGEifSwic3RhdHVzIjp0cnVlfQ._-wahkdtK745Bv0PMJ_hcI6nQERX6RBLLCtvIxdGwPQ"
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"serviceId\": \"623233d3f2013a6a3ce9f611\",\n    \"countryCode\": \"co\",\n    \"city\": {\n        \"code\": \"110010\",\n        \"name\": \"Bogota\",\n        \"timezone\": \"America/Bogota\"\n    },\n    \"plan\": {\n        \"id\": \"60140d4ca5e12d4b0a96fcd7\",\n        \"name\":\"Suscripción 3 meses TRIAL\",\n        \"price\": \"17000\",\n        \"promotionalPrice\": \"12000\",\n        \"period\": 3,\n        \"benefits\": [\n            \"free_delivery\",\n            \"cashback\"\n        ]\n    },\n    \"payment\": {\n        \"creditCard\": {\n            \"id\": 478358,\n            \"franchise\": \"VISA\",\n            \"lastFour\": 1111,\n            \"installments\": 1,\n            \"type\": \"Credit\",\n            \"cvv\": 582\n        }\n    },\n    \"address\": {\n        \"address\": \"Calle 97a # 9a-34\",\n        \"postalCode\": \"110011\"\n    },\n    \"user\": {\n        \"identityType\": \"cc\",\n        \"identityNumber\": \"1034083636632\",\n        \"phonePrefix\": \"57\",\n        \"phoneNumber\": \"3124840718\"\n    }\n}"
																},
																"url": {
																	"raw": "https://squad-227.supermercap.com/api/3.2/prime/service-subscription",
																	"protocol": "https",
																	"host": [
																		"squad-227",
																		"supermercap",
																		"com"
																	],
																	"path": [
																		"api",
																		"3.2",
																		"prime",
																		"service-subscription"
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "280",
													"item": [
														{
															"name": "CODE_ACTIVATION_PROCESS_ERROR",
															"event": [
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"pm.collectionVariables.set(\"url-web\", \"https://squad-227.supermercap.com\");"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"var response = pm.response.json();",
																			"",
																			"pm.test(\"Response time is less than 800ms\", function () {",
																			"    pm.expect(pm.response.responseTime).to.be.below(800);",
																			"});",
																			"",
																			"pm.test(\"Status code is 280\", function () {",
																			"    pm.response.to.have.status(280);",
																			"});",
																			"",
																			"pm.test(\"Validate array status 280\", function () {",
																			"    pm.expect(\"Error\").to.eql(response.errors[0].title);",
																			"    pm.expect(\"Ha ocurrido un error en el proceso de activación del servicio.\").to.eql(response.errors[0].detail);",
																			"    pm.expect(\"ID_ACTIVATION_PROCESS_ERROR\").to.eql(response.errors[0].id);",
																			"    pm.expect(\"CODE_ACTIVATION_PROCESS_ERROR\").to.eql(response.errors[0].code);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"protocolProfileBehavior": {
																"disabledSystemHeaders": {
																	"accept": true
																}
															},
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY0NzUzNjI4MywiZXhwIjoxNjUxMTY1MDgzLCJzdWIiOjE5OTcwOTksImZpcnN0X25hbWUiOiJOb3JiZXJ0IiwibGFzdF9uYW1lIjoiRm9yZXJvIiwiZW1haWwiOiJuZm9yZXJvQG1lcnF1ZW8uY29tIiwicGhvbmUiOiIzMTA4ODU0NDcyIiwicGhvbmVfdmFsaWRhdGVkX2RhdGUiOnsiZGF0ZSI6IjIwMjItMDMtMTAgMTI6MzA6MTAuMDAwMDAwIiwidGltZXpvbmVfdHlwZSI6MywidGltZXpvbmUiOiJBbWVyaWNhXC9Cb2dvdGEifSwic3RhdHVzIjp0cnVlfQ.o9H38SgfZfSZ3cBT1k4rW1my6TwCxwarQPBVsbIFe6s",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "X-Merqueo-Agent",
																		"value": "Web",
																		"type": "text"
																	},
																	{
																		"key": "X-Merqueo-Device-Id",
																		"value": "sdfdasfdsfsdfewf",
																		"type": "text"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"serviceId\": \"60140d4ca5e12d4b0a96fcd8\",\n    \"countryCode\": \"co\",\n    \"city\": {\n        \"code\": \"110010\",\n        \"name\": \"Bogota\",\n        \"timezone\": \"America/Bogota\"\n    },\n    \"plan\": {\n        \"id\": \"60140d4ca5e12d4b0a96fcd8\",\n        \"price\": \"59700\",\n        \"promotionalPrice\": \"45000\",\n        \"period\": 3,\n        \"benefits\": [\n            \"free_delivery\",\n            \"cashback\"\n        ]\n    },\n    \"payment\": {\n        \"creditCard\": {\n            \"id\": 478320,\n            \"franchise\": \"visa\",\n            \"lastFour\": 1111,\n            \"installments\": 1,\n            \"type\": \"Credit\",\n            \"cvv\": 233\n        }\n    },\n    \"address\": {\n        \"address\": \"Calle 97a # 9a-34\",\n        \"postalCode\": \"110011\"\n    },\n    \"user\": {\n        \"identityType\": \"cc\",\n        \"identityNumber\": \"1034083636632\",\n        \"phonePrefix\": \"57\",\n        \"phoneNumber\": \"3208854472\"\n    }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url-web}}/api/3.2/prime/service-subscription",
																	"host": [
																		"{{url-web}}"
																	],
																	"path": [
																		"api",
																		"3.2",
																		"prime",
																		"service-subscription"
																	]
																}
															},
															"response": []
														},
														{
															"name": "CODE_USER_WITH_ACTIVE_SERVICE_ERROR",
															"event": [
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"pm.collectionVariables.set(\"url-web\", \"https://squad-227.supermercap.com\");"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"var response = pm.response.json();",
																			"",
																			"pm.test(\"Response time is less than 800ms\", function () {",
																			"    pm.expect(pm.response.responseTime).to.be.below(800);",
																			"});",
																			"",
																			"pm.test(\"Status code is 280\", function () {",
																			"    pm.response.to.have.status(280);",
																			"});",
																			"",
																			"pm.test(\"Validate array status 280\", function () {",
																			"    pm.expect(\"Error\").to.eql(response.errors[0].title);",
																			"    pm.expect(\"El usuario cuenta con una suscripción activa a un servicio.\").to.eql(response.errors[0].detail);",
																			"    pm.expect(\"ID_USER_WITH_ACTIVE_SERVICE_ERROR\").to.eql(response.errors[0].id);",
																			"    pm.expect(\"CODE_USER_WITH_ACTIVE_SERVICE_ERROR\").to.eql(response.errors[0].code);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY0NzUzNjI4MywiZXhwIjoxNjUxMTY1MDgzLCJzdWIiOjE5OTcwOTksImZpcnN0X25hbWUiOiJOb3JiZXJ0IiwibGFzdF9uYW1lIjoiRm9yZXJvIiwiZW1haWwiOiJuZm9yZXJvQG1lcnF1ZW8uY29tIiwicGhvbmUiOiIzMTA4ODU0NDcyIiwicGhvbmVfdmFsaWRhdGVkX2RhdGUiOnsiZGF0ZSI6IjIwMjItMDMtMTAgMTI6MzA6MTAuMDAwMDAwIiwidGltZXpvbmVfdHlwZSI6MywidGltZXpvbmUiOiJBbWVyaWNhXC9Cb2dvdGEifSwic3RhdHVzIjp0cnVlfQ.o9H38SgfZfSZ3cBT1k4rW1my6TwCxwarQPBVsbIFe6s",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "X-Merqueo-Agent",
																		"value": "Web",
																		"type": "text"
																	},
																	{
																		"key": "X-Merqueo-Device-Id",
																		"value": "sdfdasfdsfsdfewf",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"serviceId\": \"623233d3f2013a6a3ce9f611\",\n    \"countryCode\": \"co\",\n    \"city\": {\n        \"code\": \"110010\",\n        \"name\": \"Bogota\",\n        \"timezone\": \"America/Bogota\"\n    },\n    \"plan\": {\n        \"id\": \"60140d4ca5e12d4b0a96fcd1\",\n        \"price\": \"59700\",\n        \"promotionalPrice\": \"45000\",\n        \"period\": 3,\n        \"benefits\": [\n            \"free_delivery\",\n            \"cashback\"\n        ]\n    },\n    \"payment\": {\n        \"creditCard\": {\n            \"id\": 478320,\n            \"franchise\": \"visa\",\n            \"lastFour\": 1111,\n            \"installments\": 1,\n            \"type\": \"Credit\",\n            \"cvv\": 233\n        }\n    },\n    \"address\": {\n        \"address\": \"Calle 97a # 9a-34\",\n        \"postalCode\": \"110011\"\n    },\n    \"user\": {\n        \"identityType\": \"cc\",\n        \"identityNumber\": \"1034083636632\",\n        \"phonePrefix\": \"57\",\n        \"phoneNumber\": \"3208854472\"\n    }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url-web}}/api/3.2/prime/service-subscription",
																	"host": [
																		"{{url-web}}"
																	],
																	"path": [
																		"api",
																		"3.2",
																		"prime",
																		"service-subscription"
																	]
																}
															},
															"response": []
														},
														{
															"name": "CODE_INVALID_CARD_TYPE_ERROR",
															"event": [
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"pm.collectionVariables.set(\"url-web\", \"https://squad-227.supermercap.com\");"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"var response = pm.response.json();",
																			"",
																			"pm.test(\"Response time is less than 800ms\", function () {",
																			"    pm.expect(pm.response.responseTime).to.be.below(800);",
																			"});",
																			"",
																			"pm.test(\"Status code is 280\", function () {",
																			"    pm.response.to.have.status(280);",
																			"});",
																			"",
																			"pm.test(\"Validate array status 280\", function () {",
																			"    pm.expect(\"Error\").to.eql(response.errors[0].title);",
																			"    pm.expect(\"El tipo de tarjeta de crédito no es válido.\").to.eql(response.errors[0].detail);",
																			"    pm.expect(\"ID_INVALID_CARD_TYPE_ERROR\").to.eql(response.errors[0].id);",
																			"    pm.expect(\"CODE_INVALID_CARD_TYPE_ERROR\").to.eql(response.errors[0].code);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY0ODU4NzI5OCwiZXhwIjoxNjUyMjE2MDk4LCJzdWIiOjE5OTcxMDAsImZpcnN0X25hbWUiOiJTdGV2ZW4iLCJsYXN0X25hbWUiOiJHYWxhbiIsImVtYWlsIjoic2ZvcmVybzEyQG1lcnF1ZW8uY29tIiwicGhvbmUiOiIzMjA4NzQyMjMwIiwicGhvbmVfdmFsaWRhdGVkX2RhdGUiOnsiZGF0ZSI6IjIwMjItMDMtMjkgMTU6NTQ6NTguMDAwMDAwIiwidGltZXpvbmVfdHlwZSI6MywidGltZXpvbmUiOiJBbWVyaWNhXC9Cb2dvdGEifSwic3RhdHVzIjp0cnVlfQ.a25Bj1NjoXRtQdqP9fDEXw1QffEMA4oMPPL9iYqS3HI",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "X-Merqueo-Agent",
																		"value": "Web",
																		"type": "text"
																	},
																	{
																		"key": "X-Merqueo-Device-Id",
																		"value": "sdfdasfdsfsdfewf",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"serviceId\": \"623233d3f2013a6a3ce9f611\",\n    \"countryCode\": \"co\",\n    \"city\": {\n        \"code\": \"110110\",\n        \"name\": \"Bogota\",\n        \"timezone\": \"America/Bogota\"\n    },\n    \"plan\": {\n        \"id\": \"60140d4ca5e12d4b0a96fcd1\",\n        \"price\": \"59700\",\n        \"promotionalPrice\": \"45000\",\n        \"period\": 3,\n        \"benefits\": [\n            \"free_delivery\",\n            \"cashback\"\n        ]\n    },\n    \"payment\": {\n        \"creditCard\": {\n            \"id\": 231548,\n            \"franchise\": \"visa\",\n            \"lastFour\": 1111,\n            \"installments\": 1,\n            \"type\": \"Debit\",\n            \"cvv\": 233\n        }\n    },\n    \"address\": {\n        \"address\": \"Calle 97a # 9a-34\",\n        \"postalCode\": \"111011\"\n    },\n    \"user\": {\n        \"identityType\": \"cc\",\n        \"identityNumber\": \"2335487725\",\n        \"phonePrefix\": \"57\",\n        \"phoneNumber\": \"3508854472\"\n    }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url-web}}/api/3.2/prime/service-subscription",
																	"host": [
																		"{{url-web}}"
																	],
																	"path": [
																		"api",
																		"3.2",
																		"prime",
																		"service-subscription"
																	]
																}
															},
															"response": []
														},
														{
															"name": "CODE_SERVICE_PLAN_NOT_FOUNDED_ERROR",
															"event": [
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"pm.collectionVariables.set(\"url-web\", \"https://squad-227.supermercap.com\");"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"var response = pm.response.json();",
																			"",
																			"pm.test(\"Response time is less than 800ms\", function () {",
																			"    pm.expect(pm.response.responseTime).to.be.below(800);",
																			"});",
																			"",
																			"pm.test(\"Status code is 280\", function () {",
																			"    pm.response.to.have.status(280);",
																			"});",
																			"",
																			"pm.test(\"Validate array status 280\", function () {",
																			"    pm.expect(\"Error\").to.eql(response.errors[0].title);",
																			"    pm.expect(\"No se encontró el plan seleccionado.\").to.eql(response.errors[0].detail);",
																			"    pm.expect(\"ID_SERVICE_PLAN_NOT_FOUNDED_ERROR\").to.eql(response.errors[0].id);",
																			"    pm.expect(\"CODE_SERVICE_PLAN_NOT_FOUNDED_ERROR\").to.eql(response.errors[0].code);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY0ODU4NzI5OCwiZXhwIjoxNjUyMjE2MDk4LCJzdWIiOjE5OTcxMDAsImZpcnN0X25hbWUiOiJTdGV2ZW4iLCJsYXN0X25hbWUiOiJHYWxhbiIsImVtYWlsIjoic2ZvcmVybzEyQG1lcnF1ZW8uY29tIiwicGhvbmUiOiIzMjA4NzQyMjMwIiwicGhvbmVfdmFsaWRhdGVkX2RhdGUiOnsiZGF0ZSI6IjIwMjItMDMtMjkgMTU6NTQ6NTguMDAwMDAwIiwidGltZXpvbmVfdHlwZSI6MywidGltZXpvbmUiOiJBbWVyaWNhXC9Cb2dvdGEifSwic3RhdHVzIjp0cnVlfQ.a25Bj1NjoXRtQdqP9fDEXw1QffEMA4oMPPL9iYqS3HI",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "X-Merqueo-Agent",
																		"value": "Web",
																		"type": "text"
																	},
																	{
																		"key": "X-Merqueo-Device-Id",
																		"value": "sdfdasfdsfsdfewf",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"serviceId\": \"623233d3f2013a6a3ce9f611\",\n    \"countryCode\": \"co\",\n    \"city\": {\n        \"code\": \"110010\",\n        \"name\": \"Bogota\",\n        \"timezone\": \"America/Bogota\"\n    },\n    \"plan\": {\n        \"id\": \"60140d4ca5e12d4b0a96fcd7\",\n        \"price\": \"59700\",\n        \"promotionalPrice\": \"45000\",\n        \"period\": 3,\n        \"benefits\": [\n            \"free_delivery\",\n            \"cashback\"\n        ]\n    },\n    \"payment\": {\n        \"creditCard\": {\n            \"id\": 478320,\n            \"franchise\": \"visa\",\n            \"lastFour\": 1111,\n            \"installments\": 1,\n            \"type\": \"Credit\",\n            \"cvv\": 233\n        }\n    },\n    \"address\": {\n        \"address\": \"Calle 97a # 9a-34\",\n        \"postalCode\": \"110011\"\n    },\n    \"user\": {\n        \"identityType\": \"cc\",\n        \"identityNumber\": \"1034083636632\",\n        \"phonePrefix\": \"57\",\n        \"phoneNumber\": \"3208854472\"\n    }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url-web}}/api/3.2/prime/service-subscription",
																	"host": [
																		"{{url-web}}"
																	],
																	"path": [
																		"api",
																		"3.2",
																		"prime",
																		"service-subscription"
																	]
																}
															},
															"response": []
														},
														{
															"name": "CODE_PLAN_PERIOD_NOT_VALID_ERROR",
															"event": [
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"pm.collectionVariables.set(\"url-web\", \"https://squad-227.supermercap.com\");"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"var response = pm.response.json();",
																			"",
																			"pm.test(\"Response time is less than 800ms\", function () {",
																			"    pm.expect(pm.response.responseTime).to.be.below(800);",
																			"});",
																			"",
																			"pm.test(\"Status code is 280\", function () {",
																			"    pm.response.to.have.status(280);",
																			"});",
																			"",
																			"pm.test(\"Validate array status 280\", function () {",
																			"    pm.expect(\"Error\").to.eql(response.errors[0].title);",
																			"    pm.expect(\"El periodo del plan no es válido.\").to.eql(response.errors[0].detail);",
																			"    pm.expect(\"ID_PLAN_PERIOD_NOT_VALID_ERROR\").to.eql(response.errors[0].id);",
																			"    pm.expect(\"CODE_PLAN_PERIOD_NOT_VALID_ERROR\").to.eql(response.errors[0].code);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY0ODU4NzI5OCwiZXhwIjoxNjUyMjE2MDk4LCJzdWIiOjE5OTcxMDAsImZpcnN0X25hbWUiOiJTdGV2ZW4iLCJsYXN0X25hbWUiOiJHYWxhbiIsImVtYWlsIjoic2ZvcmVybzEyQG1lcnF1ZW8uY29tIiwicGhvbmUiOiIzMjA4NzQyMjMwIiwicGhvbmVfdmFsaWRhdGVkX2RhdGUiOnsiZGF0ZSI6IjIwMjItMDMtMjkgMTU6NTQ6NTguMDAwMDAwIiwidGltZXpvbmVfdHlwZSI6MywidGltZXpvbmUiOiJBbWVyaWNhXC9Cb2dvdGEifSwic3RhdHVzIjp0cnVlfQ.a25Bj1NjoXRtQdqP9fDEXw1QffEMA4oMPPL9iYqS3HI",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "X-Merqueo-Agent",
																		"value": "Web",
																		"type": "text"
																	},
																	{
																		"key": "X-Merqueo-Device-Id",
																		"value": "sdfdasfdsfsdfewf",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"serviceId\": \"623233d3f2013a6a3ce9f611\",\n    \"countryCode\": \"co\",\n    \"city\": {\n        \"code\": \"110010\",\n        \"name\": \"Bogota\",\n        \"timezone\": \"America/Bogota\"\n    },\n    \"plan\": {\n        \"id\": \"60140d4ca5e12d4b0a96fcd1\",\n        \"price\": \"59700\",\n        \"promotionalPrice\": \"45000\",\n        \"period\": 1,\n        \"benefits\": [\n            \"free_delivery\",\n            \"cashback\"\n        ]\n    },\n    \"payment\": {\n        \"creditCard\": {\n            \"id\": 478320,\n            \"franchise\": \"visa\",\n            \"lastFour\": 1111,\n            \"installments\": 1,\n            \"type\": \"Credit\",\n            \"cvv\": 233\n        }\n    },\n    \"address\": {\n        \"address\": \"Calle 97a # 9a-34\",\n        \"postalCode\": \"110011\"\n    },\n    \"user\": {\n        \"identityType\": \"cc\",\n        \"identityNumber\": \"1034083636632\",\n        \"phonePrefix\": \"57\",\n        \"phoneNumber\": \"3208854472\"\n    }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url-web}}/api/3.2/prime/service-subscription",
																	"host": [
																		"{{url-web}}"
																	],
																	"path": [
																		"api",
																		"3.2",
																		"prime",
																		"service-subscription"
																	]
																}
															},
															"response": []
														},
														{
															"name": "CODE_PLAN_PRICE_NOT_VALID_ERROR",
															"event": [
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"pm.collectionVariables.set(\"url-web\", \"https://squad-227.supermercap.com\");"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"var response = pm.response.json();",
																			"",
																			"pm.test(\"Response time is less than 800ms\", function () {",
																			"    pm.expect(pm.response.responseTime).to.be.below(900);",
																			"});",
																			"",
																			"pm.test(\"Status code is 280\", function () {",
																			"    pm.response.to.have.status(280);",
																			"});",
																			"",
																			"pm.test(\"Validate array status 280\", function () {",
																			"    pm.expect(\"Error\").to.eql(response.errors[0].title);",
																			"    pm.expect(\"El precio del plan no es válido.\").to.eql(response.errors[0].detail);",
																			"    pm.expect(\"ID_PLAN_PRICE_NOT_VALID_ERROR\").to.eql(response.errors[0].id);",
																			"    pm.expect(\"CODE_PLAN_PRICE_NOT_VALID_ERROR\").to.eql(response.errors[0].code);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY0ODU4NzI5OCwiZXhwIjoxNjUyMjE2MDk4LCJzdWIiOjE5OTcxMDAsImZpcnN0X25hbWUiOiJTdGV2ZW4iLCJsYXN0X25hbWUiOiJHYWxhbiIsImVtYWlsIjoic2ZvcmVybzEyQG1lcnF1ZW8uY29tIiwicGhvbmUiOiIzMjA4NzQyMjMwIiwicGhvbmVfdmFsaWRhdGVkX2RhdGUiOnsiZGF0ZSI6IjIwMjItMDMtMjkgMTU6NTQ6NTguMDAwMDAwIiwidGltZXpvbmVfdHlwZSI6MywidGltZXpvbmUiOiJBbWVyaWNhXC9Cb2dvdGEifSwic3RhdHVzIjp0cnVlfQ.a25Bj1NjoXRtQdqP9fDEXw1QffEMA4oMPPL9iYqS3HI",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "X-Merqueo-Agent",
																		"value": "Web",
																		"type": "text"
																	},
																	{
																		"key": "X-Merqueo-Device-Id",
																		"value": "sdfdasfdsfsdfewf",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"serviceId\": \"623233d3f2013a6a3ce9f611\",\n    \"countryCode\": \"co\",\n    \"city\": {\n        \"code\": \"110010\",\n        \"name\": \"Bogota\",\n        \"timezone\": \"America/Bogota\"\n    },\n    \"plan\": {\n        \"id\": \"60140d4ca5e12d4b0a96fcd1\",\n        \"price\": \"2000\",\n        \"promotionalPrice\": \"45000\",\n        \"period\": 3,\n        \"benefits\": [\n            \"free_delivery\",\n            \"cashback\"\n        ]\n    },\n    \"payment\": {\n        \"creditCard\": {\n            \"id\": 478320,\n            \"franchise\": \"visa\",\n            \"lastFour\": 1111,\n            \"installments\": 1,\n            \"type\": \"Credit\",\n            \"cvv\": 233\n        }\n    },\n    \"address\": {\n        \"address\": \"Calle 97a # 9a-34\",\n        \"postalCode\": \"110011\"\n    },\n    \"user\": {\n        \"identityType\": \"cc\",\n        \"identityNumber\": \"1034083636632\",\n        \"phonePrefix\": \"57\",\n        \"phoneNumber\": \"3208854472\"\n    }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url-web}}/api/3.2/prime/service-subscription",
																	"host": [
																		"{{url-web}}"
																	],
																	"path": [
																		"api",
																		"3.2",
																		"prime",
																		"service-subscription"
																	]
																}
															},
															"response": []
														},
														{
															"name": "CODE_PLAN_BENEFITS_NOT_VALID_ERROR",
															"event": [
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"pm.collectionVariables.set(\"url-web\", \"https://squad-227.supermercap.com\");"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"var response = pm.response.json();",
																			"",
																			"pm.test(\"Response time is less than 800ms\", function () {",
																			"    pm.expect(pm.response.responseTime).to.be.below(800);",
																			"});",
																			"",
																			"pm.test(\"Status code is 280\", function () {",
																			"    pm.response.to.have.status(280);",
																			"});",
																			"",
																			"pm.test(\"Validate array status 280\", function () {",
																			"    pm.expect(\"Error\").to.eql(response.errors[0].title);",
																			"    pm.expect(\"Los beneficios del plan no son válidos.\").to.eql(response.errors[0].detail);",
																			"    pm.expect(\"ID_PLAN_BENEFITS_NOT_VALID_ERROR\").to.eql(response.errors[0].id);",
																			"    pm.expect(\"CODE_PLAN_BENEFITS_NOT_VALID_ERROR\").to.eql(response.errors[0].code);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY0ODU4NzI5OCwiZXhwIjoxNjUyMjE2MDk4LCJzdWIiOjE5OTcxMDAsImZpcnN0X25hbWUiOiJTdGV2ZW4iLCJsYXN0X25hbWUiOiJHYWxhbiIsImVtYWlsIjoic2ZvcmVybzEyQG1lcnF1ZW8uY29tIiwicGhvbmUiOiIzMjA4NzQyMjMwIiwicGhvbmVfdmFsaWRhdGVkX2RhdGUiOnsiZGF0ZSI6IjIwMjItMDMtMjkgMTU6NTQ6NTguMDAwMDAwIiwidGltZXpvbmVfdHlwZSI6MywidGltZXpvbmUiOiJBbWVyaWNhXC9Cb2dvdGEifSwic3RhdHVzIjp0cnVlfQ.a25Bj1NjoXRtQdqP9fDEXw1QffEMA4oMPPL9iYqS3HI",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "X-Merqueo-Agent",
																		"value": "Web",
																		"type": "text"
																	},
																	{
																		"key": "X-Merqueo-Device-Id",
																		"value": "sdfdasfdsfsdfewf",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"serviceId\": \"623233d3f2013a6a3ce9f611\",\n    \"countryCode\": \"co\",\n    \"city\": {\n        \"code\": \"110010\",\n        \"name\": \"Bogota\",\n        \"timezone\": \"America/Bogota\"\n    },\n    \"plan\": {\n        \"id\": \"60140d4ca5e12d4b0a96fcd1\",\n        \"price\": \"59700\",\n        \"promotionalPrice\": \"45000\",\n        \"period\": 3,\n        \"benefits\": [\n            \"null\"\n        ]\n    },\n    \"payment\": {\n        \"creditCard\": {\n            \"id\": 478320,\n            \"franchise\": \"visa\",\n            \"lastFour\": 1111,\n            \"installments\": 1,\n            \"type\": \"Credit\",\n            \"cvv\": 233\n        }\n    },\n    \"address\": {\n        \"address\": \"Calle 97a # 9a-34\",\n        \"postalCode\": \"110011\"\n    },\n    \"user\": {\n        \"identityType\": \"cc\",\n        \"identityNumber\": \"1034083636632\",\n        \"phonePrefix\": \"57\",\n        \"phoneNumber\": \"3208854472\"\n    }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url-web}}/api/3.2/prime/service-subscription",
																	"host": [
																		"{{url-web}}"
																	],
																	"path": [
																		"api",
																		"3.2",
																		"prime",
																		"service-subscription"
																	]
																}
															},
															"response": []
														},
														{
															"name": "CODE_PLAN_PROMOTIONAL_PRICE_NOT_VALID_ERROR",
															"event": [
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"pm.collectionVariables.set(\"url-web\", \"https://squad-227.supermercap.com\");"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"var response = pm.response.json();",
																			"",
																			"pm.test(\"Response time is less than 800ms\", function () {",
																			"    pm.expect(pm.response.responseTime).to.be.below(800);",
																			"});",
																			"",
																			"pm.test(\"Status code is 280\", function () {",
																			"    pm.response.to.have.status(280);",
																			"});",
																			"",
																			"pm.test(\"Validate array status 280\", function () {",
																			"    pm.expect(\"Error\").to.eql(response.errors[0].title);",
																			"    pm.expect(\"El precio promocional del plan no es válido.\").to.eql(response.errors[0].detail);",
																			"    pm.expect(\"ID_PLAN_PROMOTIONAL_PRICE_NOT_VALID_ERROR\").to.eql(response.errors[0].id);",
																			"    pm.expect(\"CODE_PLAN_PROMOTIONAL_PRICE_NOT_VALID_ERROR\").to.eql(response.errors[0].code);",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY0ODU4NzI5OCwiZXhwIjoxNjUyMjE2MDk4LCJzdWIiOjE5OTcxMDAsImZpcnN0X25hbWUiOiJTdGV2ZW4iLCJsYXN0X25hbWUiOiJHYWxhbiIsImVtYWlsIjoic2ZvcmVybzEyQG1lcnF1ZW8uY29tIiwicGhvbmUiOiIzMjA4NzQyMjMwIiwicGhvbmVfdmFsaWRhdGVkX2RhdGUiOnsiZGF0ZSI6IjIwMjItMDMtMjkgMTU6NTQ6NTguMDAwMDAwIiwidGltZXpvbmVfdHlwZSI6MywidGltZXpvbmUiOiJBbWVyaWNhXC9Cb2dvdGEifSwic3RhdHVzIjp0cnVlfQ.a25Bj1NjoXRtQdqP9fDEXw1QffEMA4oMPPL9iYqS3HI",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "X-Merqueo-Agent",
																		"value": "Web",
																		"type": "text"
																	},
																	{
																		"key": "X-Merqueo-Device-Id",
																		"value": "sdfdasfdsfsdfewf",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"serviceId\": \"623233d3f2013a6a3ce9f611\",\n    \"countryCode\": \"co\",\n    \"city\": {\n        \"code\": \"110010\",\n        \"name\": \"Bogota\",\n        \"timezone\": \"America/Bogota\"\n    },\n    \"plan\": {\n        \"id\": \"60140d4ca5e12d4b0a96fcd1\",\n        \"price\": \"59700\",\n        \"promotionalPrice\": \"1000\",\n        \"period\": 3,\n        \"benefits\": [\n            \"free_delivery\",\n            \"cashback\"\n        ]\n    },\n    \"payment\": {\n        \"creditCard\": {\n            \"id\": 478320,\n            \"franchise\": \"visa\",\n            \"lastFour\": 1111,\n            \"installments\": 1,\n            \"type\": \"Credit\",\n            \"cvv\": 233\n        }\n    },\n    \"address\": {\n        \"address\": \"Calle 97a # 9a-34\",\n        \"postalCode\": \"110011\"\n    },\n    \"user\": {\n        \"identityType\": \"cc\",\n        \"identityNumber\": \"1034083636632\",\n        \"phonePrefix\": \"57\",\n        \"phoneNumber\": \"3208854472\"\n    }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url-web}}/api/3.2/prime/service-subscription",
																	"host": [
																		"{{url-web}}"
																	],
																	"path": [
																		"api",
																		"3.2",
																		"prime",
																		"service-subscription"
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "500",
													"item": [
														{
															"name": "service-subscription",
															"event": [
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"pm.collectionVariables.set(\"url-web\", \"https://squad-227.supermercap.com\");"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..o9H38SgfZfSZ3cBT1k4rW1my6TwCxwarQPBVsbIFe6s",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "X-Merqueo-Agent",
																		"value": "Web",
																		"type": "text"
																	},
																	{
																		"key": "X-Merqueo-Device-Id",
																		"value": "sdfdasfdsfsdfewf",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"serviceId\": \"624220681a9a7467cc04bd21321\",\n    \"countryCode\": \"co\",\n    \"city\": {\n        \"code\": \"110010\",\n        \"name\": \"Bogota\",\n        \"timezone\": \"America/Bogota\"\n    },\n    \"plan\": {\n        \"id\": \"60140d4ca5e12d4b0a96fcd1\",\n        \"price\": \"59700\",\n        \"promotionalPrice\": \"45000\",\n        \"period\": 3,\n        \"benefits\": [\n            \"free_delivery\",\n            \"cashback\"\n        ]\n    },\n    \"payment\": {\n        \"creditCard\": {\n            \"id\": 478320,\n            \"franchise\": \"visa\",\n            \"lastFour\": 1111,\n            \"installments\": 1,\n            \"type\": \"Credit\",\n            \"cvv\": 233\n        }\n    },\n    \"address\": {\n        \"address\": \"Calle 97a # 9a-34\",\n        \"postalCode\": \"110011\"\n    },\n    \"user\": {\n        \"identityType\": \"cc\",\n        \"identityNumber\": \"1034083636632\",\n        \"phonePrefix\": \"57\",\n        \"phoneNumber\": \"3108854472\"\n    }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url-web}}/api/3.2/prime/service-subscription",
																	"host": [
																		"{{url-web}}"
																	],
																	"path": [
																		"api",
																		"3.2",
																		"prime",
																		"service-subscription"
																	]
																}
															},
															"response": []
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "product-services",
					"item": [
						{
							"name": "services-list/v1",
							"item": [
								{
									"name": "200",
									"item": [
										{
											"name": "co",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-product-services\",\"https://product-services.squad-227.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerTokenCo}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Merqueo-Country",
														"value": "co",
														"type": "text"
													},
													{
														"key": "X-Merqueo-Device-Id",
														"value": "7D515FBF-AD0B-4B31-936A-410859F05DA7",
														"type": "text"
													},
													{
														"key": "X-Merqueo-Agent",
														"value": "iOS",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url-product-services}}/services-list/v1",
													"host": [
														"{{url-product-services}}"
													],
													"path": [
														"services-list",
														"v1"
													]
												}
											},
											"response": []
										},
										{
											"name": "co Copy",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-product-services\",\"https://product-services.squad-227.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerTokenCo}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Merqueo-Country",
														"value": "co",
														"type": "text"
													},
													{
														"key": "X-Merqueo-Device-Id",
														"value": "7D515FBF-AD0B-4B31-936A-410859F05DA7",
														"type": "text"
													},
													{
														"key": "X-Merqueo-Agent",
														"value": "iOS",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url-product-services}}/services-list/v1",
													"host": [
														"{{url-product-services}}"
													],
													"path": [
														"services-list",
														"v1"
													]
												}
											},
											"response": []
										},
										{
											"name": "mx",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-product-services\",\"https://product-services.squad-227.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerTokenMx}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Merqueo-Country",
														"value": "mx",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url-product-services}}/services-list/v1",
													"host": [
														"{{url-product-services}}"
													],
													"path": [
														"services-list",
														"v1"
													]
												}
											},
											"response": []
										},
										{
											"name": "br",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-product-services\",\"https://product-services.squad-227.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerTokenBR}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Merqueo-Country",
														"value": "br",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url-product-services}}/services-list/v1",
													"host": [
														"{{url-product-services}}"
													],
													"path": [
														"services-list",
														"v1"
													]
												}
											},
											"response": []
										},
										{
											"name": "No registrado en prime",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-product-services\",\"https://product-services.squad-227.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerTokenCoSin}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Merqueo-Country",
														"value": "co",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url-product-services}}/services-list/v1",
													"host": [
														"{{url-product-services}}"
													],
													"path": [
														"services-list",
														"v1"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "280",
									"item": [
										{
											"name": "co sinplan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-product-services\",\"https://product-services.squad-227.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerTokenCoSin}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Merqueo-Country",
														"value": "co",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url-product-services}}/services-list/v1",
													"host": [
														"{{url-product-services}}"
													],
													"path": [
														"services-list",
														"v1"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "400",
									"item": [
										{
											"name": "SIn bearer",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-product-services\",\"https://product-services.squad-227.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Merqueo-Country",
														"value": "co",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url-product-services}}/services-list/v1",
													"host": [
														"{{url-product-services}}"
													],
													"path": [
														"services-list",
														"v1"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sin X-Merqueo-Country",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-product-services\",\"https://product-services.squad-227.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerTokenCoSin}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Merqueo-Country",
														"value": "co",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{url-product-services}}/services-list/v1",
													"host": [
														"{{url-product-services}}"
													],
													"path": [
														"services-list",
														"v1"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "active-services/v1",
							"item": [
								{
									"name": "status 200",
									"item": [
										{
											"name": "status-200 co",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-product-services\",\"https://product-services.squad-227.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerTokenCo}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Merqueo-Country",
														"value": "co",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url-product-services}}/active-services/v1",
													"host": [
														"{{url-product-services}}"
													],
													"path": [
														"active-services",
														"v1"
													]
												}
											},
											"response": []
										},
										{
											"name": "status-200 mx",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-product-services\",\"https://product-services.squad-227.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerTokenMx}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Merqueo-Country",
														"value": "mx",
														"type": "text"
													},
													{
														"key": "X-Merqueo-Device-Id",
														"value": "7D515FBF-AD0B-4B31-936A-410859F05DA7",
														"type": "text"
													},
													{
														"key": "X-Merqueo-Agent",
														"value": "iOS",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url-product-services}}/active-services/v1",
													"host": [
														"{{url-product-services}}"
													],
													"path": [
														"active-services",
														"v1"
													]
												}
											},
											"response": []
										},
										{
											"name": "status-200 br",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-product-services\",\"https://product-services.squad-227.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerTokenBR}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Merqueo-Country",
														"value": "br",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url-product-services}}/active-services/v1",
													"host": [
														"{{url-product-services}}"
													],
													"path": [
														"active-services",
														"v1"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "status 280",
									"item": [
										{
											"name": "status-280 co",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerTokenCoSin}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Merqueo-Country",
														"value": "co",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url-product-services}}/active-services/v1",
													"host": [
														"{{url-product-services}}"
													],
													"path": [
														"active-services",
														"v1"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "status 400",
									"item": [
										{
											"name": "No X-Merqueo-Country",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY0OTM2NzMzOSwiZXhwIjoxNjUyOTk2MTM5LCJzdWIiOjE5OTcwOTksImZpcnN0X25hbWUiOiJOb3JiZXJ0IiwibGFzdF9uYW1lIjoiRm9yZXJvIiwiZW1haWwiOiJuZm9yZXJvQG1lcnF1ZW8uY29tIiwicGhvbmUiOiIzMTA4ODU0NDcyIiwicGhvbmVfdmFsaWRhdGVkX2RhdGUiOnsiZGF0ZSI6IjIwMjItMDMtMTAgMTI6MzA6MTAuMDAwMDAwIiwidGltZXpvbmVfdHlwZSI6MywidGltZXpvbmUiOiJBbWVyaWNhXC9Cb2dvdGEifSwic3RhdHVzIjp0cnVlfQ.r0MnvFTNIPETYSoWaop7-BeMMt7zMzMLOlbGxz408Ag",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Merqueo-Country",
														"value": "co",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{url-product-services}}/active-services/v1",
													"host": [
														"{{url-product-services}}"
													],
													"path": [
														"active-services",
														"v1"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "status 401",
									"item": [
										{
											"name": "No token",
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Merqueo-Country",
														"value": "mx",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url-product-services}}/active-services/v1",
													"host": [
														"{{url-product-services}}"
													],
													"path": [
														"active-services",
														"v1"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "cancel-renewal/v1",
							"item": [
								{
									"name": "400",
									"item": [
										{
											"name": "Code_400_Ca1",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-web\", \"https://product-services.squad-106.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"var response = pm.response.json();",
															"",
															"pm.test(\"Response time is less than 800ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(800);",
															"});",
															"",
															"pm.test(\"Status code is 280\", function () {",
															"    pm.response.to.have.status(280);",
															"});",
															"",
															"pm.test(\"Validate array status 280\", function () {",
															"    pm.expect(\"280\").to.eql(response.errors[0].status);",
															"    pm.expect(\"No se encontro el servicio.\").to.eql(response.errors[0].detail);",
															"    pm.expect(\"USER_SERVICE_PURCHASED_NOT_FOUND\").to.eql(response.errors[0].id);",
															"    pm.expect(\"ID_USER_SERVICE_PURCHASED_NOT_FOUND\").to.eql(response.errors[0].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {
													"accept": true
												}
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY0OTg2NzUzNywiZXhwIjoxNjUzNDk2MzM3LCJzdWIiOjE5OTcxMDMsImZpcnN0X25hbWUiOiJZZXNpa2EiLCJsYXN0X25hbWUiOiJWYW5lZ2FzIiwiZW1haWwiOiJ5dmFuZWdhc0BtZXJxdWVvLmNvbSIsInBob25lIjoiMzIyNjYxNzE1OSIsInBob25lX3ZhbGlkYXRlZF9kYXRlIjp7ImRhdGUiOiIyMDIyLTAzLTI0IDEwOjM2OjI4LjAwMDAwMCIsInRpbWV6b25lX3R5cGUiOjMsInRpbWV6b25lIjoiQW1lcmljYVwvQm9nb3RhIn0sInN0YXR1cyI6dHJ1ZX0.wAFx15tK_bVnU9ctFJ9xQKyJ8fdDhLcda8lJnkqgQhY",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "X-Merqueo-Agent",
														"value": "Web",
														"type": "text"
													},
													{
														"key": "X-Merqueo-Device-Id",
														"value": "sdfdasfdsfsdfewf",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n \"subscriptionId\": \"\"\n}\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url-web}}/cancel-renewal/v1",
													"host": [
														"{{url-web}}"
													],
													"path": [
														"cancel-renewal",
														"v1"
													]
												}
											},
											"response": []
										},
										{
											"name": "Code_400_Ca2",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-web\", \"https://product-services.squad-106.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"var response = pm.response.json();",
															"",
															"pm.test(\"Response time is less than 800ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(800);",
															"});",
															"",
															"pm.test(\"Status code is 280\", function () {",
															"    pm.response.to.have.status(280);",
															"});",
															"",
															"pm.test(\"Validate array status 280\", function () {",
															"    pm.expect(\"280\").to.eql(response.errors[0].status);",
															"    pm.expect(\"No se encontro el servicio.\").to.eql(response.errors[0].detail);",
															"    pm.expect(\"USER_SERVICE_PURCHASED_NOT_FOUND\").to.eql(response.errors[0].id);",
															"    pm.expect(\"ID_USER_SERVICE_PURCHASED_NOT_FOUND\").to.eql(response.errors[0].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {
													"accept": true
												}
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY0OTg2NzUzNywiZXhwIjoxNjUzNDk2MzM3LCJzdWIiOjE5OTcxMDMsImZpcnN0X25hbWUiOiJZZXNpa2EiLCJsYXN0X25hbWUiOiJWYW5lZ2FzIiwiZW1haWwiOiJ5dmFuZWdhc0BtZXJxdWVvLmNvbSIsInBob25lIjoiMzIyNjYxNzE1OSIsInBob25lX3ZhbGlkYXRlZF9kYXRlIjp7ImRhdGUiOiIyMDIyLTAzLTI0IDEwOjM2OjI4LjAwMDAwMCIsInRpbWV6b25lX3R5cGUiOjMsInRpbWV6b25lIjoiQW1lcmljYVwvQm9nb3RhIn0sInN0YXR1cyI6dHJ1ZX0.wAFx15tK_bVnU9ctFJ9xQKyJ8fdDhLcda8lJnkqgQhY",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "X-Merqueo-Agent",
														"value": "Web",
														"type": "text"
													},
													{
														"key": "X-Merqueo-Device-Id",
														"value": "sdfdasfdsfsdfewf",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n \"subscriptionId\"\n}\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url-web}}/cancel-renewal/v1",
													"host": [
														"{{url-web}}"
													],
													"path": [
														"cancel-renewal",
														"v1"
													]
												}
											},
											"response": []
										},
										{
											"name": "Code_401",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-web\", \"https://product-services.squad-106.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"var response = pm.response.json();",
															"",
															"pm.test(\"Response time is less than 800ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(800);",
															"});",
															"",
															"pm.test(\"Status code is 280\", function () {",
															"    pm.response.to.have.status(280);",
															"});",
															"",
															"pm.test(\"Validate array status 280\", function () {",
															"    pm.expect(\"280\").to.eql(response.errors[0].status);",
															"    pm.expect(\"No se encontro el servicio.\").to.eql(response.errors[0].detail);",
															"    pm.expect(\"USER_SERVICE_PURCHASED_NOT_FOUND\").to.eql(response.errors[0].id);",
															"    pm.expect(\"ID_USER_SERVICE_PURCHASED_NOT_FOUND\").to.eql(response.errors[0].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {
													"accept": true
												}
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "X-Merqueo-Agent",
														"value": "Web",
														"type": "text"
													},
													{
														"key": "X-Merqueo-Device-Id",
														"value": "sdfdasfdsfsdfewf",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n \"subscriptionId\"\n}\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url-web}}/cancel-renewal/v1",
													"host": [
														"{{url-web}}"
													],
													"path": [
														"cancel-renewal",
														"v1"
													]
												}
											},
											"response": []
										},
										{
											"name": "Code_403",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-web\", \"https://product-services.squad-106.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"var response = pm.response.json();",
															"",
															"pm.test(\"Response time is less than 800ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(800);",
															"});",
															"",
															"pm.test(\"Status code is 280\", function () {",
															"    pm.response.to.have.status(280);",
															"});",
															"",
															"pm.test(\"Validate array status 280\", function () {",
															"    pm.expect(\"280\").to.eql(response.errors[0].status);",
															"    pm.expect(\"No se encontro el servicio.\").to.eql(response.errors[0].detail);",
															"    pm.expect(\"USER_SERVICE_PURCHASED_NOT_FOUND\").to.eql(response.errors[0].id);",
															"    pm.expect(\"ID_USER_SERVICE_PURCHASED_NOT_FOUND\").to.eql(response.errors[0].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {
													"accept": true
												}
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "eewerrfffdswwe34344",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "X-Merqueo-Agent",
														"value": "Web",
														"type": "text"
													},
													{
														"key": "X-Merqueo-Device-Id",
														"value": "sdfdasfdsfsdfewf",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n \"subscriptionId\"\n}\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url-web}}/cancel-renewal/v1",
													"host": [
														"{{url-web}}"
													],
													"path": [
														"cancel-renewal",
														"v1"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "200",
									"item": [
										{
											"name": "status 200 co",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-web\", \"https://product-services.squad-106.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"var response = pm.response.json();",
															"",
															"expectedResponse = `{\"data\":null}`",
															"",
															"pm.test(\"Response time is less than 1980ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(1980);",
															"});",
															"",
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(expectedResponse).to.include(pm.response.text());",
															"});",
															"",
															"pm.test(\"Body is correct\", function () {",
															"    pm.response.to.have.body(expectedResponse);",
															"});",
															"",
															"pm.test(\"Validate array city exception\", function () {",
															"    pm.expect(null).to.eql(response.data);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY0OTg2NzUzNywiZXhwIjoxNjUzNDk2MzM3LCJzdWIiOjE5OTcxMDMsImZpcnN0X25hbWUiOiJZZXNpa2EiLCJsYXN0X25hbWUiOiJWYW5lZ2FzIiwiZW1haWwiOiJ5dmFuZWdhc0BtZXJxdWVvLmNvbSIsInBob25lIjoiMzIyNjYxNzE1OSIsInBob25lX3ZhbGlkYXRlZF9kYXRlIjp7ImRhdGUiOiIyMDIyLTAzLTI0IDEwOjM2OjI4LjAwMDAwMCIsInRpbWV6b25lX3R5cGUiOjMsInRpbWV6b25lIjoiQW1lcmljYVwvQm9nb3RhIn0sInN0YXR1cyI6dHJ1ZX0.wAFx15tK_bVnU9ctFJ9xQKyJ8fdDhLcda8lJnkqgQhY",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "X-Merqueo-Agent",
														"value": "Web",
														"type": "text"
													},
													{
														"key": "X-Merqueo-Device-Id",
														"value": "sdfdasfdsfsdfewf",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subscriptionId\": \"623233d3f2013a6a3ce9f611-co-c5255cd6-fcee-423b-85a3-6d3814f79b48\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url-web}}/cancel-renewal/v1",
													"host": [
														"{{url-web}}"
													],
													"path": [
														"cancel-renewal",
														"v1"
													]
												}
											},
											"response": []
										},
										{
											"name": "status 200 mx",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-web\", \"https://product-services.squad-123.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"var response = pm.response.json();",
															"",
															"expectedResponse = `{\"data\":null}`",
															"",
															"pm.test(\"Response time is less than 700ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(700);",
															"});",
															"",
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(expectedResponse).to.include(pm.response.text());",
															"});",
															"",
															"pm.test(\"Body is correct\", function () {",
															"    pm.response.to.have.body(expectedResponse);",
															"});",
															"",
															"pm.test(\"Validate array city exception\", function () {",
															"    pm.expect(null).to.eql(response.data);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY0OTg3MDQ2NywiZXhwIjoxNjUzNDk5MjY3LCJzdWIiOjE5OTcxMDcsImZpcnN0X25hbWUiOiJNZXhpY28iLCJsYXN0X25hbWUiOiJZZXNpa2EiLCJlbWFpbCI6Inllc2lrYW1leGljb0BnbWFpbC5jb20iLCJwaG9uZSI6IjMwNTgxNzY3MzMiLCJwaG9uZV92YWxpZGF0ZWRfZGF0ZSI6eyJkYXRlIjoiMjAyMi0wMy0yNCAxMDozNjoyOC4wMDAwMDAiLCJ0aW1lem9uZV90eXBlIjozLCJ0aW1lem9uZSI6IkFtZXJpY2FcL0JvZ290YSJ9LCJzdGF0dXMiOnRydWV9.sm9W2lQfT8fv16b8cEkdzyziezsVbeSYiQaVXDuQ6fw",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "X-Merqueo-Agent",
														"value": "Web",
														"type": "text"
													},
													{
														"key": "X-Merqueo-Device-Id",
														"value": "sdfdasfdsfsdfewf",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subscriptionId\": \"623233d3f2013a6a3ce9f612-mx-f5ac84b1-4cae-4597-9220-2158cf48b80a\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url-web}}/cancel-renewal/v1",
													"host": [
														"{{url-web}}"
													],
													"path": [
														"cancel-renewal",
														"v1"
													]
												}
											},
											"response": []
										},
										{
											"name": "status 200 br",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-web\", \"https://product-services.squad-123.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"var response = pm.response.json();",
															"",
															"expectedResponse = `{\"data\":null}`",
															"",
															"pm.test(\"Response time is less than 700ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(700);",
															"});",
															"",
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(expectedResponse).to.include(pm.response.text());",
															"});",
															"",
															"pm.test(\"Body is correct\", function () {",
															"    pm.response.to.have.body(expectedResponse);",
															"});",
															"",
															"pm.test(\"Validate array city exception\", function () {",
															"    pm.expect(null).to.eql(response.data);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY0OTg3MDQ5NiwiZXhwIjoxNjUzNDk5Mjk2LCJzdWIiOjE5OTcxMDgsImZpcnN0X25hbWUiOiJCcmFzaWwiLCJsYXN0X25hbWUiOiJZZXNpa2EiLCJlbWFpbCI6Inllc2lrYWJyYXNpbEBnbWFpbC5jb20iLCJwaG9uZSI6IjMyMjY2MTcxNTkiLCJwaG9uZV92YWxpZGF0ZWRfZGF0ZSI6eyJkYXRlIjoiMjAyMi0wMy0yNCAxMDozNjoyOC4wMDAwMDAiLCJ0aW1lem9uZV90eXBlIjozLCJ0aW1lem9uZSI6IkFtZXJpY2FcL0JvZ290YSJ9LCJzdGF0dXMiOnRydWV9.yafA26UmQIhASSWFFjK59qwLEQtICR7mrnw-NGhrJ10",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "X-Merqueo-Agent",
														"value": "Web",
														"type": "text"
													},
													{
														"key": "X-Merqueo-Device-Id",
														"value": "sdfdasfdsfsdfewf",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subscriptionId\": \"623233d3f2013a6a3ce9f613-br-34e48122-41b3-4656-83c1-60861cfacac5\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url-web}}/cancel-renewal/v1",
													"host": [
														"{{url-web}}"
													],
													"path": [
														"cancel-renewal",
														"v1"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "280",
									"item": [
										{
											"name": "Code_280_subscriptionId_COL",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-web\", \"https://product-services.squad-106.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"var response = pm.response.json();",
															"",
															"pm.test(\"Response time is less than 800ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(800);",
															"});",
															"",
															"pm.test(\"Status code is 280\", function () {",
															"    pm.response.to.have.status(280);",
															"});",
															"",
															"pm.test(\"Validate array status 280\", function () {",
															"    pm.expect(\"280\").to.eql(response.errors[0].status);",
															"    pm.expect(\"No se encontro el servicio.\").to.eql(response.errors[0].detail);",
															"    pm.expect(\"USER_SERVICE_PURCHASED_NOT_FOUND\").to.eql(response.errors[0].id);",
															"    pm.expect(\"ID_USER_SERVICE_PURCHASED_NOT_FOUND\").to.eql(response.errors[0].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {
													"accept": true
												}
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY0OTg2NzUzNywiZXhwIjoxNjUzNDk2MzM3LCJzdWIiOjE5OTcxMDMsImZpcnN0X25hbWUiOiJZZXNpa2EiLCJsYXN0X25hbWUiOiJWYW5lZ2FzIiwiZW1haWwiOiJ5dmFuZWdhc0BtZXJxdWVvLmNvbSIsInBob25lIjoiMzIyNjYxNzE1OSIsInBob25lX3ZhbGlkYXRlZF9kYXRlIjp7ImRhdGUiOiIyMDIyLTAzLTI0IDEwOjM2OjI4LjAwMDAwMCIsInRpbWV6b25lX3R5cGUiOjMsInRpbWV6b25lIjoiQW1lcmljYVwvQm9nb3RhIn0sInN0YXR1cyI6dHJ1ZX0.wAFx15tK_bVnU9ctFJ9xQKyJ8fdDhLcda8lJnkqgQhY",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "X-Merqueo-Agent",
														"value": "Web",
														"type": "text"
													},
													{
														"key": "X-Merqueo-Device-Id",
														"value": "sdfdasfdsfsdfewf",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n \"subscriptionId\": \"623233d3f2013a6a3ce9f611-co-d27eab6a-bbfa-4485-b63a-ab986530c577\"\n}\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url-web}}/cancel-renewal/v1",
													"host": [
														"{{url-web}}"
													],
													"path": [
														"cancel-renewal",
														"v1"
													]
												}
											},
											"response": []
										},
										{
											"name": "Code_280_subscriptionId_MX",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-web\", \"https://product-services.squad-106.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"var response = pm.response.json();",
															"",
															"pm.test(\"Response time is less than 800ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(800);",
															"});",
															"",
															"pm.test(\"Status code is 280\", function () {",
															"    pm.response.to.have.status(280);",
															"});",
															"",
															"pm.test(\"Validate array status 280\", function () {",
															"    pm.expect(\"Error\").to.eql(response.errors[0].title);",
															"    pm.expect(\"Ha ocurrido un error en el proceso de activación del servicio.\").to.eql(response.errors[0].detail);",
															"    pm.expect(\"ID_ACTIVATION_PROCESS_ERROR\").to.eql(response.errors[0].id);",
															"    pm.expect(\"CODE_ACTIVATION_PROCESS_ERROR\").to.eql(response.errors[0].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {
													"accept": true
												}
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY0OTg3MDQ2NywiZXhwIjoxNjUzNDk5MjY3LCJzdWIiOjE5OTcxMDcsImZpcnN0X25hbWUiOiJNZXhpY28iLCJsYXN0X25hbWUiOiJZZXNpa2EiLCJlbWFpbCI6Inllc2lrYW1leGljb0BnbWFpbC5jb20iLCJwaG9uZSI6IjMwNTgxNzY3MzMiLCJwaG9uZV92YWxpZGF0ZWRfZGF0ZSI6eyJkYXRlIjoiMjAyMi0wMy0yNCAxMDozNjoyOC4wMDAwMDAiLCJ0aW1lem9uZV90eXBlIjozLCJ0aW1lem9uZSI6IkFtZXJpY2FcL0JvZ290YSJ9LCJzdGF0dXMiOnRydWV9.sm9W2lQfT8fv16b8cEkdzyziezsVbeSYiQaVXDuQ6fw",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "X-Merqueo-Agent",
														"value": "Web",
														"type": "text"
													},
													{
														"key": "X-Merqueo-Device-Id",
														"value": "sdfdasfdsfsdfewf",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n \"subscriptionId\": \"623233d3f2013a6a3ce9f612-mx-d6c70f61-05d6-45a8-ab23-79k980oi78908\"\n}\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url-web}}/cancel-renewal/v1",
													"host": [
														"{{url-web}}"
													],
													"path": [
														"cancel-renewal",
														"v1"
													]
												}
											},
											"response": []
										},
										{
											"name": "Code_280_subscriptionId_BR",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-web\", \"https://product-services.squad-106.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"var response = pm.response.json();",
															"",
															"pm.test(\"Response time is less than 800ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(800);",
															"});",
															"",
															"pm.test(\"Status code is 280\", function () {",
															"    pm.response.to.have.status(280);",
															"});",
															"",
															"pm.test(\"Validate array status 280\", function () {",
															"    pm.expect(\"Error\").to.eql(response.errors[0].title);",
															"    pm.expect(\"Ha ocurrido un error en el proceso de activación del servicio.\").to.eql(response.errors[0].detail);",
															"    pm.expect(\"ID_ACTIVATION_PROCESS_ERROR\").to.eql(response.errors[0].id);",
															"    pm.expect(\"CODE_ACTIVATION_PROCESS_ERROR\").to.eql(response.errors[0].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {
													"accept": true
												}
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY1MDQ3NTYyNSwiZXhwIjoxNjU0MTA0NDI1LCJzdWIiOjE5OTcxMDgsImZpcnN0X25hbWUiOiJCcmFzaWwiLCJsYXN0X25hbWUiOiJZZXNpa2EiLCJlbWFpbCI6Inllc2lrYWJyYXNpbEBnbWFpbC5jb20iLCJwaG9uZSI6IjMyMjY2MTcxNTkiLCJwaG9uZV92YWxpZGF0ZWRfZGF0ZSI6eyJkYXRlIjoiMjAyMi0wMy0yNCAxMDozNjoyOC4wMDAwMDAiLCJ0aW1lem9uZV90eXBlIjozLCJ0aW1lem9uZSI6IkFtZXJpY2FcL0JvZ290YSJ9LCJzdGF0dXMiOnRydWV9.epGv4AaCmxnoHgSxCoLKQiSpqEMpdhYswgzkxH7j5Js",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "X-Merqueo-Agent",
														"value": "Web",
														"type": "text"
													},
													{
														"key": "X-Merqueo-Device-Id",
														"value": "sdfdasfdsfsdfewf",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n \"subscriptionId\": \"623233d3f2013a6a3ce9f611-co-d27eab6a-bbfa-4485-b63a-ab725314be77\"\n}\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url-web}}/cancel-renewal/v1",
													"host": [
														"{{url-web}}"
													],
													"path": [
														"cancel-renewal",
														"v1"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "https://squad-106.supermercap.com/api/3.0/login",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"email\":\"yesikamexico@gmail.com\",\n\t\"password\":\"123456\"\n}"
										},
										"url": {
											"raw": "https://squad-106.supermercap.com/api/3.0/login",
											"protocol": "https",
											"host": [
												"squad-106",
												"supermercap",
												"com"
											],
											"path": [
												"api",
												"3.0",
												"login"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "transaction-logs/v1",
							"item": [
								{
									"name": "200",
									"item": [
										{
											"name": "co",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-product-services\",\"https://product-services.squad-227.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerTokenCo}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Merqueo-Country",
														"value": "co",
														"type": "text"
													},
													{
														"key": "X-Merqueo-Device-Id",
														"value": "sadafs3324e32dfad",
														"type": "text"
													},
													{
														"key": "X-Merqueo-Agent",
														"value": "iOS",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url-product-services}}/transaction-logs/v1",
													"host": [
														"{{url-product-services}}"
													],
													"path": [
														"transaction-logs",
														"v1"
													]
												}
											},
											"response": []
										},
										{
											"name": "mx",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-product-services\",\"https://product-services.squad-227.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerTokenMx}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Merqueo-Country",
														"value": "co",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url-product-services}}/transaction-logs/v1",
													"host": [
														"{{url-product-services}}"
													],
													"path": [
														"transaction-logs",
														"v1"
													]
												}
											},
											"response": []
										},
										{
											"name": "br",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-product-services\",\"https://product-services.squad-227.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerTokenBR}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Merqueo-Country",
														"value": "co",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url-product-services}}/transaction-logs/v1",
													"host": [
														"{{url-product-services}}"
													],
													"path": [
														"transaction-logs",
														"v1"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "280",
									"item": [
										{
											"name": "CODE_TRANSACTION_LOGS_NOT_FOUND",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-product-services\",\"https://product-services.squad-227.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerTokenCoSinTra}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Merqueo-Country",
														"value": "co",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url-product-services}}/transaction-logs/v1",
													"host": [
														"{{url-product-services}}"
													],
													"path": [
														"transaction-logs",
														"v1"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "400",
									"item": [
										{
											"name": "400 - sin cabecera",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-product-services\",\"https://product-services.squad-227.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerTokenCo}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Merqueo-Country",
														"value": "co",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{url-product-services}}/transaction-logs/v1",
													"host": [
														"{{url-product-services}}"
													],
													"path": [
														"transaction-logs",
														"v1"
													]
												}
											},
											"response": []
										},
										{
											"name": "401- sin token",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"url-product-services\",\"https://product-services.squad-227.supermercap.com\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerTokenCo}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-Merqueo-Country",
														"value": "co",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{url-product-services}}/transaction-logs/v1",
													"host": [
														"{{url-product-services}}"
													],
													"path": [
														"transaction-logs",
														"v1"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "cancel-sub",
							"item": [
								{
									"name": "https://squad-227.supermercap.com/api/3.2/prime/service-subscription",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerTokenCo}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY1NDIwNjIxMSwiZXhwIjoxNjU3ODM1MDExLCJzdWIiOjE5OTcwOTksImZpcnN0X25hbWUiOiJOb3JiZXJ0IiwibGFzdF9uYW1lIjoiRm9yZXJvIiwiZW1haWwiOiJuZm9yZXJvQG1lcnF1ZW8uY29tIiwicGhvbmUiOiIzMTA4ODU0NDcyIiwicGhvbmVfdmFsaWRhdGVkX2RhdGUiOnsiZGF0ZSI6IjIwMjItMDMtMTAgMTI6MzA6MTAuMDAwMDAwIiwidGltZXpvbmVfdHlwZSI6MywidGltZXpvbmUiOiJBbWVyaWNhXC9Cb2dvdGEifSwic3RhdHVzIjp0cnVlfQ.6c612opm1TVC9GiqkNTHf8gCOPJ3phTrGhAGo-qiNis"
											},
											{
												"key": "User-Agent",
												"value": "Android-Merqueo-Client/3.10.0-STAGING-PRIME-QA6"
											},
											{
												"key": "X-Merqueo-Agent",
												"value": "Android"
											},
											{
												"key": "X-Merqueo-Version",
												"value": "3.10.0-STAGING-PRIME-QA6"
											},
											{
												"key": "X-Merqueo-Device-Id",
												"value": "2d082afd2a34a02b"
											},
											{
												"key": "Content-Type",
												"value": "application/json; charset=UTF-8"
											},
											{
												"key": "Host",
												"value": "squad-227.supermercap.com"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"serviceId\": \"623233d3f2013a6a3ce9f611\",\n    \"countryCode\": \"co\",\n    \"city\": {\n        \"code\": \"11001000\",\n        \"name\": \"Bogotá\",\n        \"timezone\": \"America/Bogota\"\n    },\n    \"plan\": {\n        \"id\": \"60140d4ca5e12d4b0a96fcd1\",\n        \"price\": \"44900.0\",\n        \"promotionalPrice\": \"34900.0\",\n        \"period\": 3,\n        \"benefits\": [\n            \"free_delivery\",\n            \"cashback\"\n        ]\n    },\n    \"payment\": {\n        \"creditCard\": {\n            \"id\": 478423,\n            \"franchise\": \"MASTERCARD\",\n            \"lastFour\": 9619,\n            \"installments\": 1,\n            \"type\": \"Credit\",\n            \"cvv\": 123\n        }\n    },\n    \"address\": {\n        \"address\": \"Calle 97a # 9a-34, Localidad de Chapinero, Bogotá\",\n        \"postalCode\": \"110221\"\n    },\n    \"user\": {\n        \"identityType\": \"CC\",\n        \"identityNumber\": \"65776332\",\n        \"phonePrefix\": \"57\",\n        \"phoneNumber\": \"3108854472\"\n    }\n}"
										},
										"url": {
											"raw": "https://squad-227.supermercap.com/api/3.2/prime/service-subscription",
											"protocol": "https",
											"host": [
												"squad-227",
												"supermercap",
												"com"
											],
											"path": [
												"api",
												"3.2",
												"prime",
												"service-subscription"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Prueba Pagos",
					"item": [
						{
							"name": "Login Pagos",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"url-web\",\"https://squad-227.supermercap.com\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.collectionVariables.set(\"BearerTokenPagos\",jsonData.included[0].attributes.value);",
											"pm.collectionVariables.set(\"idUserPagos\",jsonData.data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\":\"nforeropruebapagos@merqueo.com\",\n\t\"password\":\"Contrasena1*\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url-web}}/api/3.0/login",
									"host": [
										"{{url-web}}"
									],
									"path": [
										"api",
										"3.0",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Obtener planes",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"url-product-services\",\"https://product-services.squad-227.supermercap.com\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerTokenPagos}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Merqueo-Country",
										"value": "co",
										"type": "text"
									},
									{
										"key": "X-Merqueo-Device-Id",
										"value": "7D515FBF-AD0B-4B31-936A-410859F05DA7",
										"type": "text"
									},
									{
										"key": "X-Merqueo-Agent",
										"value": "iOS",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url-product-services}}/services-list/v1",
									"host": [
										"{{url-product-services}}"
									],
									"path": [
										"services-list",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Obtener planes Sin Prime",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"url-product-services\",\"https://product-services.squad-227.supermercap.com\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerTokenCoSin}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Merqueo-Country",
										"value": "co",
										"type": "text"
									},
									{
										"key": "X-Merqueo-Device-Id",
										"value": "7D515FBF-AD0B-4B31-936A-410859F05DA7",
										"type": "text"
									},
									{
										"key": "X-Merqueo-Agent",
										"value": "iOS",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url-product-services}}/services-list/v1",
									"host": [
										"{{url-product-services}}"
									],
									"path": [
										"services-list",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Crear suscripcion true",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"url-web\", \"https://squad-227.supermercap.com\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();",
											"",
											"expectedResponse = `{\"data\":null}`",
											"",
											"pm.test(\"Response time is less than 3000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(3000);",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(expectedResponse).to.include(pm.response.text());",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(expectedResponse);",
											"});",
											"",
											"pm.test(\"Validate array city exception\", function () {",
											"    pm.expect(null).to.eql(response.data);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerTokenPagos}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Merqueo-Agent",
										"value": "Web",
										"type": "text"
									},
									{
										"key": "X-Merqueo-Device-Id",
										"value": "sdfdasfdsfsdfewf",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"serviceId\": \"623233d3f2013a6a3ce9f611\",\n    \"countryCode\": \"co\",\n    \"city\": {\n        \"code\": \"110010\",\n        \"name\": \"Bogota\",\n        \"timezone\": \"America/Bogota\"\n    },\n    \"plan\": {\n        \"id\": \"60140d4ca5e12d4b0a96fc16\",\n        \"name\": \"Suscripción 1 meses\",\n        \"price\": \"19900\",\n        \"promotionalPrice\": null,\n        \"period\": 1,\n        \"benefits\": [\n            \"free_delivery\",\n            \"cashback\"\n        ]\n    },\n    \"payment\": {\n        \"creditCard\": {\n            \"id\": 478366,\n            \"franchise\": \"VISA\",\n            \"lastFour\": 1111,\n            \"installments\": 1,\n            \"type\": \"Credit\",\n            \"cvv\": 889\n        }\n    },\n    \"address\": {\n        \"address\": \"Calle 97a # 9a-34\",\n        \"postalCode\": \"110011\"\n    },\n    \"user\": {\n        \"identityType\": \"CC\",\n        \"identityNumber\": \"103408363\",\n        \"phonePrefix\": \"57\",\n        \"phoneNumber\": \"3154844277\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url-web}}/api/3.2/prime/service-subscription",
									"host": [
										"{{url-web}}"
									],
									"path": [
										"api",
										"3.2",
										"prime",
										"service-subscription"
									]
								}
							},
							"response": []
						},
						{
							"name": "Crear suscripcion false",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"url-web\", \"https://squad-227.supermercap.com\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();",
											"",
											"expectedResponse = `{\"data\":null}`",
											"",
											"pm.test(\"Response time is less than 3000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(3000);",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(expectedResponse).to.include(pm.response.text());",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(expectedResponse);",
											"});",
											"",
											"pm.test(\"Validate array city exception\", function () {",
											"    pm.expect(null).to.eql(response.data);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerTokenPagos}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Merqueo-Agent",
										"value": "Web",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-Merqueo-Device-Id",
										"value": "sdfdasfdsfsdfewf",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"serviceId\": \"623233d3f2013a6a3ce9f611\",\n    \"serviceType\":\"prime\",\n    \"countryCode\": \"co\",\n    \"city\": {\n        \"code\": \"110010\",\n        \"name\": \"Bogota\",\n        \"timezone\": \"America/Bogota\"\n    },\n    \"plan\": {\n        \"id\": \"60140d4ca5e12d4b0a96fcd1\",\n        \"name\":\"Suscripción 3 mes\",\n        \"price\": \"59700\",\n        \"promotionalPrice\": \"45000\",\n        \"period\": 3,\n        \"benefits\": [\n            \"free_delivery\",\n            \"cashback\"\n        ]\n    },\n    \"payment\": {\n        \"creditCard\": {\n            \"id\": 478366,\n            \"franchise\": \"VISA\",\n            \"lastFour\": 1111,\n            \"installments\": 1,\n            \"type\": \"Credit\"\n        }\n    },\n    \"address\": {\n        \"address\": \"Calle 97a # 9a-34\",\n        \"postalCode\": \"110011\"\n    },\n    \"user\": {\n        \"identityType\": \"CC\",\n        \"identityNumber\": \"103408363\",\n        \"phonePrefix\": \"57\",\n        \"phoneNumber\": \"3154844277\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url-web}}/api/3.2/prime/service-subscription",
									"host": [
										"{{url-web}}"
									],
									"path": [
										"api",
										"3.2",
										"prime",
										"service-subscription"
									]
								}
							},
							"response": []
						},
						{
							"name": "Subscription Activa Pagos",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"url-product-services\",\"https://product-services.squad-227.supermercap.com\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.collectionVariables.set(\"subscriptionIdPagos\",jsonData.data.attributes.subscription_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerTokenPagos}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Merqueo-Country",
										"value": "co",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url-product-services}}/active-services/v1",
									"host": [
										"{{url-product-services}}"
									],
									"path": [
										"active-services",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancelar Renovacion Pagos",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"url-web\", \"https://product-services.squad-227.supermercap.com\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();",
											"",
											"expectedResponse = `{\"data\":null}`",
											"",
											"pm.test(\"Response time is less than 1980ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1980);",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(expectedResponse).to.include(pm.response.text());",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(expectedResponse);",
											"});",
											"",
											"pm.test(\"Validate array city exception\", function () {",
											"    pm.expect(null).to.eql(response.data);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerTokenPagos}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "X-Merqueo-Agent",
										"value": "Web",
										"type": "text"
									},
									{
										"key": "X-Merqueo-Device-Id",
										"value": "sdfdasfdsfsdfewf",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subscriptionId\": \"{{subscriptionIdPagos}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url-product-services}}/cancel-renewal/v1",
									"host": [
										"{{url-product-services}}"
									],
									"path": [
										"cancel-renewal",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Transaction Logs Pagos",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"url-product-services\",\"https://product-services.squad-227.supermercap.com\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerTokenPagos}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Merqueo-Country",
										"value": "co",
										"type": "text"
									},
									{
										"key": "X-Merqueo-Device-Id",
										"value": "sadafs3324e32dfad",
										"type": "text"
									},
									{
										"key": "X-Merqueo-Agent",
										"value": "iOS",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url-product-services}}/transaction-logs/v1",
									"host": [
										"{{url-product-services}}"
									],
									"path": [
										"transaction-logs",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Agregar TC a usuario Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"url-web\", \"https://squad-227.supermercap.com\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.collectionVariables.set(\"idCreditCardPagos\",jsonData.data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerTokenPagos}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "X-Merqueo-Agent",
										"value": "iOS"
									},
									{
										"key": "X-Merqueo-Version",
										"value": "3.0.24"
									},
									{
										"key": "X-Merqueo-Device-Id",
										"value": "29670CFF-1DBA-4634-B8D6-4F0324A0EEFB"
									},
									{
										"key": "Accept-Language",
										"value": "es-CO;q=1.0, pt-BR;q=0.9"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "User-Agent",
										"value": "Merqueo/3.0.24 (com.merqueo.user.ios.Merqueo; build:3.0.24.9; iOS 15.0.0) Alamofire/4.9.1"
									},
									{
										"key": "X-Merqueo-Country",
										"value": "co"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"number\":\"5555555555554444\",\n   \"cvv\":\"726\",\n   \"holder\":{\n      \"documentType\":\"CC\",\n      \"address\":\"cra 123 #14v-85 fontibon\",\n      \"documentNumber\":\"103408363\",\n      \"name\":\"APPROVED\",\n      \"phone\":\"3208854472\"\n   },\n   \"cityId\":\"1\",\n   \"year\":\"2026\",\n   \"month\":\"12\"\n}"
								},
								"url": {
									"raw": "{{url-web}}/api/3.1/credit-cards",
									"host": [
										"{{url-web}}"
									],
									"path": [
										"api",
										"3.1",
										"credit-cards"
									]
								}
							},
							"response": []
						},
						{
							"name": "Obtener tarjeta de credito del usuario Copy",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://api-www-v2.internal.squad-227.supermercap.com:8080/internal/api/1.0/credit_cards/{{idCreditCardPagos}}/user/{{idUserPagos}}",
									"protocol": "http",
									"host": [
										"api-www-v2",
										"internal",
										"squad-227",
										"supermercap",
										"com"
									],
									"port": "8080",
									"path": [
										"internal",
										"api",
										"1.0",
										"credit_cards",
										"{{idCreditCardPagos}}",
										"user",
										"{{idUserPagos}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Facturacion",
					"item": [
						{
							"name": "http://api-e-invoices.internal.squad-227.supermercap.com:8080/api/sale-invoices/v1/service/register-invoice",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"city_code\": \"11001\",\n        \"client_address\": \"Calle 97a # 9a-34\",\n        \"client_email\": \"nforero@merqueo.com\",\n        \"client_identity_number\": \"1034083636632\",\n        \"client_identity_type\": \"cc\",\n        \"client_name\": \"Norbert Forero\",\n        \"client_phone\": \"3108854472\",\n        \"country_code\": \"co\",\n        \"invoice_date\": \"\",\n        \"service_id\": \"623233d3f2013a6a3ce9f611\",\n        \"client_address_further\": \"\",\n        \"client_address_neighborhood\": \"\",\n        \"client_address_number\": \"\",\n        \"client_address_route\": \"\",\n        \"client_postal_code\": \"110011\",\n        \"payments\": [\n            {\n                \"account_number\": \"11050511\",\n                \"amount\": \"45000.000000\",\n                \"date\": \"2022-05-19 15:59:27\",\n                \"method\": \"Tarjeta de crédito\",\n                \"payment_code\": 1111\n            }\n        ],\n        \"items\": [\n            {\n                \"costing_code_dim_one\": 4,\n                \"costing_code_dim_three\": \"4-4B\",\n                \"costing_code_dim_two\": \"4B\",\n                \"service_plan_id\": \"60140d4ca5e12d4b0a96fcd1\",\n                \"service_name\": \"Suscripción 3 meses\",\n                \"service_type\": \"prime\",\n                \"service_measurement\": \"1 mes\",\n                \"price\": \"36450.0000\",\n                \"quantity\": 1,\n                \"discount_rate\": \"0.0000\",\n                \"vat_rate\": \"19.0000\",\n                \"warehouse_id\": 0,\n                \"service_key\": \"\"\n            }\n        ],\n        \"reference\": \"\",\n        \"status\": true\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://api-e-invoices.internal.squad-227.supermercap.com:8080/api/sale-invoices/v1/service/register-invoice",
									"protocol": "http",
									"host": [
										"api-e-invoices",
										"internal",
										"squad-227",
										"supermercap",
										"com"
									],
									"port": "8080",
									"path": [
										"api",
										"sale-invoices",
										"v1",
										"service",
										"register-invoice"
									]
								}
							},
							"response": []
						},
						{
							"name": "rew",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Login",
			"item": [
				{
					"name": "Login co",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"url-web\",\"https://squad-227.supermercap.com\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.collectionVariables.set(\"BearerTokenCo\",jsonData.included[0].attributes.value);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"nforero@merqueo.com\",\n\t\"password\":\"Contrasena1*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url-web}}/api/3.0/login",
							"host": [
								"{{url-web}}"
							],
							"path": [
								"api",
								"3.0",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login co Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"url-web\",\"https://squad-227.supermercap.com\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.collectionVariables.set(\"BearerTokenCo\",jsonData.included[0].attributes.value);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"nforero@merqueo.com\",\n\t\"password\":\"Contrasena1*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url-web}}/api/3.0/login",
							"host": [
								"{{url-web}}"
							],
							"path": [
								"api",
								"3.0",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login co sinplanes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.collectionVariables.set(\"BearerTokenCoSin\",jsonData.included[0].attributes.value);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"url-web\",\"https://squad-227.supermercap.com\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"nforeroSin@merqueo.com\",\n\t\"password\":\"Contrasena1*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url-web}}/api/3.0/login",
							"host": [
								"{{url-web}}"
							],
							"path": [
								"api",
								"3.0",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login co sin transacciones",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.collectionVariables.set(\"BearerTokenCoSinTra\",jsonData.included[0].attributes.value);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"url-web\",\"https://squad-227.supermercap.com\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"nforerosintra@merqueo.com\",\n\t\"password\":\"Contrasena1*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url-web}}/api/3.0/login",
							"host": [
								"{{url-web}}"
							],
							"path": [
								"api",
								"3.0",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login mx",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.globals.set(\"BearerTokenMx\",jsonData.included[0].attributes.value);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"url-web\",\"https://squad-227.supermercap.com\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"nforeroMX@merqueo.com\",\n\t\"password\":\"Contrasena1*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url-web}}/api/3.0/login",
							"host": [
								"{{url-web}}"
							],
							"path": [
								"api",
								"3.0",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login br",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.globals.set(\"BearerTokenBR\",jsonData.included[0].attributes.value);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"url-web\",\"https://squad-227.supermercap.com\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"nforeroBR@merqueo.com\",\n\t\"password\":\"Contrasena1*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url-web}}/api/3.0/login",
							"host": [
								"{{url-web}}"
							],
							"path": [
								"api",
								"3.0",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Peticiones utiles",
			"item": [
				{
					"name": "Agregar TC a usuario",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"url-web\", \"https://squad-227.supermercap.com\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerTokenCo}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "X-Merqueo-Agent",
								"value": "iOS"
							},
							{
								"key": "X-Merqueo-Version",
								"value": "3.0.24"
							},
							{
								"key": "X-Merqueo-Device-Id",
								"value": "29670CFF-1DBA-4634-B8D6-4F0324A0EEFB"
							},
							{
								"key": "Accept-Language",
								"value": "es-CO;q=1.0, pt-BR;q=0.9"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "User-Agent",
								"value": "Merqueo/3.0.24 (com.merqueo.user.ios.Merqueo; build:3.0.24.9; iOS 15.0.0) Alamofire/4.9.1"
							},
							{
								"key": "X-Merqueo-Country",
								"value": "co"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"number\":\"4111111111111111\",\n   \"cvv\":\"582\",\n   \"holder\":{\n      \"documentType\":\"CC\",\n      \"address\":\"cra 123 #14v-85 fontibon\",\n      \"documentNumber\":\"SASS900402HC4\",\n      \"name\":\"APPROVED\",\n      \"phone\":\"3208854472\"\n   },\n   \"cityId\":\"1\",\n   \"year\":\"2026\",\n   \"month\":\"12\"\n}"
						},
						"url": {
							"raw": "{{url-web}}/api/3.1/credit-cards",
							"host": [
								"{{url-web}}"
							],
							"path": [
								"api",
								"3.1",
								"credit-cards"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener tarjeta de credito del usuario",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://api-www-v2.internal.squad-227.supermercap.com:8080/internal/api/1.0/credit_cards/478320/user/1997099",
							"protocol": "http",
							"host": [
								"api-www-v2",
								"internal",
								"squad-227",
								"supermercap",
								"com"
							],
							"port": "8080",
							"path": [
								"internal",
								"api",
								"1.0",
								"credit_cards",
								"478320",
								"user",
								"1997099"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Agregar tc",
			"item": [
				{
					"name": "Pruebas Auto",
					"item": [
						{
							"name": "pmsubtrial",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY1MzQzMzUwOCwiZXhwIjoxNjU3MDYyMzA4LCJzdWIiOjIwMDAwMDMsImZpcnN0X25hbWUiOiIzIE1lc2VzIiwibGFzdF9uYW1lIjoiQWN0aXZhIiwiZW1haWwiOiJwbXN1YjNtQG1lcnF1ZW8uY29tIiwicGhvbmUiOiIzMTU0ODQ0MiIsInBob25lX3ZhbGlkYXRlZF9kYXRlIjp7ImRhdGUiOiIyMDIyLTAzLTEwIDEyOjMwOjEwLjAwMDAwMCIsInRpbWV6b25lX3R5cGUiOjMsInRpbWV6b25lIjoiQW1lcmljYVwvQm9nb3RhIn0sInN0YXR1cyI6dHJ1ZX0.kvkHYXhCB5eGoOCli-CqOR3D48sNiKRrjQfqZlbivlw"
									},
									{
										"key": "User-Agent",
										"value": "Android-Merqueo-Client/3.8.0"
									},
									{
										"key": "X-Merqueo-Agent",
										"value": "Android"
									},
									{
										"key": "X-Merqueo-Version",
										"value": "3.8.0"
									},
									{
										"key": "X-Merqueo-Device-Id",
										"value": "0f5d4b17b2a9d93e"
									},
									{
										"key": "Content-Type",
										"value": "application/json; charset=UTF-8"
									},
									{
										"key": "Host",
										"value": "squad-227.supermercap.com"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"number\": \"5287252233994599\",\n    \"month\": \"04\",\n    \"year\": \"2027\",\n    \"cvv\": \"409\",\n    \"cityId\": 1,\n    \"holder\": {\n        \"name\": \"APPROVED\",\n        \"documentType\": \"CC\",\n        \"documentNumber\": \"18828383\",\n        \"address\": \"Calle 97a # 9a-34, Localidad de Chapinero, Bogotá\",\n        \"phone\": \"31548442\"\n    }\n}"
								},
								"url": {
									"raw": "https://squad-227.supermercap.com/api/3.1/credit-cards",
									"protocol": "https",
									"host": [
										"squad-227",
										"supermercap",
										"com"
									],
									"path": [
										"api",
										"3.1",
										"credit-cards"
									]
								}
							},
							"response": []
						},
						{
							"name": "pmsub3m",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubWVycXVlby5jb20iLCJhdWQiOiJtZXJxdWVvLmNvbSIsImlhdCI6MTY1MzQzMzUwOCwiZXhwIjoxNjU3MDYyMzA4LCJzdWIiOjIwMDAwMDMsImZpcnN0X25hbWUiOiIzIE1lc2VzIiwibGFzdF9uYW1lIjoiQWN0aXZhIiwiZW1haWwiOiJwbXN1YjNtQG1lcnF1ZW8uY29tIiwicGhvbmUiOiIzMTU0ODQ0MiIsInBob25lX3ZhbGlkYXRlZF9kYXRlIjp7ImRhdGUiOiIyMDIyLTAzLTEwIDEyOjMwOjEwLjAwMDAwMCIsInRpbWV6b25lX3R5cGUiOjMsInRpbWV6b25lIjoiQW1lcmljYVwvQm9nb3RhIn0sInN0YXR1cyI6dHJ1ZX0.kvkHYXhCB5eGoOCli-CqOR3D48sNiKRrjQfqZlbivlw"
									},
									{
										"key": "User-Agent",
										"value": "Android-Merqueo-Client/3.8.0"
									},
									{
										"key": "X-Merqueo-Agent",
										"value": "Android"
									},
									{
										"key": "X-Merqueo-Version",
										"value": "3.8.0"
									},
									{
										"key": "X-Merqueo-Device-Id",
										"value": "0f5d4b17b2a9d93e"
									},
									{
										"key": "Content-Type",
										"value": "application/json; charset=UTF-8"
									},
									{
										"key": "Host",
										"value": "squad-227.supermercap.com"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"number\": \"5594191829756780\",\n    \"month\": \"12\",\n    \"year\": \"2026\",\n    \"cvv\": \"652\",\n    \"cityId\": 1,\n    \"holder\": {\n        \"name\": \"APPROVED\",\n        \"documentType\": \"CC\",\n        \"documentNumber\": \"713728333\",\n        \"address\": \"Calle 97a # 9a-34, Localidad de Chapinero, Bogotá\",\n        \"phone\": \"31548442\"\n    }\n}"
								},
								"url": {
									"raw": "https://squad-227.supermercap.com/api/3.1/credit-cards",
									"protocol": "https",
									"host": [
										"squad-227",
										"supermercap",
										"com"
									],
									"path": [
										"api",
										"3.1",
										"credit-cards"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Feature-Flag-Prime",
			"item": [
				{
					"name": "Prime co",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"url-web\", \"https://squad-227.supermercap.com\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url-web}}/api/3.1/countries/config?countryId=1",
							"host": [
								"{{url-web}}"
							],
							"path": [
								"api",
								"3.1",
								"countries",
								"config"
							],
							"query": [
								{
									"key": "countryId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Prime mx",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"url-web\", \"https://squad-227.supermercap.com\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url-web}}/api/3.1/countries/config?countryId=2",
							"host": [
								"{{url-web}}"
							],
							"path": [
								"api",
								"3.1",
								"countries",
								"config"
							],
							"query": [
								{
									"key": "countryId",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Prime br",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"url-web\", \"https://squad-227.supermercap.com\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url-web}}/api/3.1/countries/config?countryId=3",
							"host": [
								"{{url-web}}"
							],
							"path": [
								"api",
								"3.1",
								"countries",
								"config"
							],
							"query": [
								{
									"key": "countryId",
									"value": "3"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "squad",
			"value": "109"
		},
		{
			"key": "warehouseID",
			"value": "1"
		},
		{
			"key": "storeID",
			"value": "63"
		},
		{
			"key": "channelID",
			"value": "173"
		},
		{
			"key": "per_page",
			"value": "4"
		},
		{
			"key": "storeType",
			"value": "Merqueo"
		},
		{
			"key": "brandroomID",
			"value": "27"
		},
		{
			"key": "url-web",
			"value": ""
		},
		{
			"key": "city",
			"value": ""
		},
		{
			"key": "country",
			"value": ""
		},
		{
			"key": "type",
			"value": ""
		},
		{
			"key": "id",
			"value": ""
		},
		{
			"key": "BearerTokenCo",
			"value": ""
		},
		{
			"key": "url-product-services",
			"value": ""
		},
		{
			"key": "BearerTokenCoSin",
			"value": ""
		},
		{
			"key": "BearerTokenCoSinTra",
			"value": ""
		},
		{
			"key": "Bearer",
			"value": ""
		},
		{
			"key": "BearerTokenPagos",
			"value": ""
		},
		{
			"key": "idUserPagos",
			"value": "1997115"
		},
		{
			"key": "idCreditCardPagos",
			"value": "478366"
		},
		{
			"key": "subscriptionIdPagos",
			"value": ""
		}
	]
}